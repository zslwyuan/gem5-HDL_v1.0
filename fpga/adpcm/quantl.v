/* verilator lint_off UNUSED */
/* verilator lint_off DECLFILENAME */
/* verilator lint_off STMTDLY */
/* verilator lint_off WIDTH */
// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.4
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module quantl (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        el,
        detl,
        ap_return
);

parameter    ap_ST_fsm_state1 = 30'b1;
parameter    ap_ST_fsm_state2 = 30'b10;
parameter    ap_ST_fsm_state3 = 30'b100;
parameter    ap_ST_fsm_state4 = 30'b1000;
parameter    ap_ST_fsm_state5 = 30'b10000;
parameter    ap_ST_fsm_state6 = 30'b100000;
parameter    ap_ST_fsm_state7 = 30'b1000000;
parameter    ap_ST_fsm_state8 = 30'b10000000;
parameter    ap_ST_fsm_state9 = 30'b100000000;
parameter    ap_ST_fsm_state10 = 30'b1000000000;
parameter    ap_ST_fsm_state11 = 30'b10000000000;
parameter    ap_ST_fsm_state12 = 30'b100000000000;
parameter    ap_ST_fsm_state13 = 30'b1000000000000;
parameter    ap_ST_fsm_state14 = 30'b10000000000000;
parameter    ap_ST_fsm_state15 = 30'b100000000000000;
parameter    ap_ST_fsm_state16 = 30'b1000000000000000;
parameter    ap_ST_fsm_state17 = 30'b10000000000000000;
parameter    ap_ST_fsm_state18 = 30'b100000000000000000;
parameter    ap_ST_fsm_state19 = 30'b1000000000000000000;
parameter    ap_ST_fsm_state20 = 30'b10000000000000000000;
parameter    ap_ST_fsm_state21 = 30'b100000000000000000000;
parameter    ap_ST_fsm_state22 = 30'b1000000000000000000000;
parameter    ap_ST_fsm_state23 = 30'b10000000000000000000000;
parameter    ap_ST_fsm_state24 = 30'b100000000000000000000000;
parameter    ap_ST_fsm_state25 = 30'b1000000000000000000000000;
parameter    ap_ST_fsm_state26 = 30'b10000000000000000000000000;
parameter    ap_ST_fsm_state27 = 30'b100000000000000000000000000;
parameter    ap_ST_fsm_state28 = 30'b1000000000000000000000000000;
parameter    ap_ST_fsm_state29 = 30'b10000000000000000000000000000;
parameter    ap_ST_fsm_state30 = 30'b100000000000000000000000000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv32_4 = 32'b100;
parameter    ap_const_lv32_5 = 32'b101;
parameter    ap_const_lv32_6 = 32'b110;
parameter    ap_const_lv32_7 = 32'b111;
parameter    ap_const_lv32_8 = 32'b1000;
parameter    ap_const_lv32_9 = 32'b1001;
parameter    ap_const_lv32_A = 32'b1010;
parameter    ap_const_lv32_B = 32'b1011;
parameter    ap_const_lv32_C = 32'b1100;
parameter    ap_const_lv32_D = 32'b1101;
parameter    ap_const_lv32_E = 32'b1110;
parameter    ap_const_lv32_F = 32'b1111;
parameter    ap_const_lv32_10 = 32'b10000;
parameter    ap_const_lv32_11 = 32'b10001;
parameter    ap_const_lv32_12 = 32'b10010;
parameter    ap_const_lv32_13 = 32'b10011;
parameter    ap_const_lv32_14 = 32'b10100;
parameter    ap_const_lv32_15 = 32'b10101;
parameter    ap_const_lv32_16 = 32'b10110;
parameter    ap_const_lv32_17 = 32'b10111;
parameter    ap_const_lv32_18 = 32'b11000;
parameter    ap_const_lv32_19 = 32'b11001;
parameter    ap_const_lv32_1A = 32'b11010;
parameter    ap_const_lv32_1B = 32'b11011;
parameter    ap_const_lv32_1C = 32'b11100;
parameter    ap_const_lv5_0 = 5'b00000;
parameter    ap_const_lv5_1 = 5'b1;
parameter    ap_const_lv5_2 = 5'b10;
parameter    ap_const_lv5_3 = 5'b11;
parameter    ap_const_lv5_4 = 5'b100;
parameter    ap_const_lv5_5 = 5'b101;
parameter    ap_const_lv5_6 = 5'b110;
parameter    ap_const_lv5_7 = 5'b111;
parameter    ap_const_lv5_8 = 5'b1000;
parameter    ap_const_lv5_9 = 5'b1001;
parameter    ap_const_lv5_A = 5'b1010;
parameter    ap_const_lv5_B = 5'b1011;
parameter    ap_const_lv5_C = 5'b1100;
parameter    ap_const_lv5_D = 5'b1101;
parameter    ap_const_lv5_E = 5'b1110;
parameter    ap_const_lv5_F = 5'b1111;
parameter    ap_const_lv5_10 = 5'b10000;
parameter    ap_const_lv5_11 = 5'b10001;
parameter    ap_const_lv5_12 = 5'b10010;
parameter    ap_const_lv5_13 = 5'b10011;
parameter    ap_const_lv5_14 = 5'b10100;
parameter    ap_const_lv5_15 = 5'b10101;
parameter    ap_const_lv5_16 = 5'b10110;
parameter    ap_const_lv5_17 = 5'b10111;
parameter    ap_const_lv5_18 = 5'b11000;
parameter    ap_const_lv5_19 = 5'b11001;
parameter    ap_const_lv5_1A = 5'b11010;
parameter    ap_const_lv5_1B = 5'b11011;
parameter    ap_const_lv5_1C = 5'b11100;
parameter    ap_const_lv32_1D = 32'b11101;
parameter    ap_const_lv42_118 = 42'b100011000;
parameter    ap_const_lv32_29 = 32'b101001;
parameter    ap_const_lv32_1F = 32'b11111;
parameter    ap_const_lv9_0 = 9'b000000000;
parameter    ap_const_lv6_0 = 6'b000000;
parameter    ap_const_lv43_370 = 43'b1101110000;
parameter    ap_const_lv32_2A = 32'b101010;
parameter    ap_const_lv44_4B0 = 44'b10010110000;
parameter    ap_const_lv32_2B = 32'b101011;
parameter    ap_const_lv44_5F0 = 44'b10111110000;
parameter    ap_const_lv44_748 = 44'b11101001000;
parameter    ap_const_lv44_8A0 = 44'b100010100000;
parameter    ap_const_lv44_A18 = 44'b101000011000;
parameter    ap_const_lv44_B90 = 44'b101110010000;
parameter    ap_const_lv44_D30 = 44'b110100110000;
parameter    ap_const_lv44_EC8 = 44'b111011001000;
parameter    ap_const_lv45_1090 = 45'b1000010010000;
parameter    ap_const_lv32_2C = 32'b101100;
parameter    ap_const_lv45_1258 = 45'b1001001011000;
parameter    ap_const_lv45_1450 = 45'b1010001010000;
parameter    ap_const_lv45_1650 = 45'b1011001010000;
parameter    ap_const_lv45_1890 = 45'b1100010010000;
parameter    ap_const_lv45_1AD0 = 45'b1101011010000;
parameter    ap_const_lv45_1D60 = 45'b1110101100000;
parameter    ap_const_lv13_0 = 13'b0000000000000;
parameter    ap_const_lv3_0 = 3'b000;
parameter    ap_const_lv32_2D = 32'b101101;
parameter    ap_const_lv46_2308 = 46'b10001100001000;
parameter    ap_const_lv46_2618 = 46'b10011000011000;
parameter    ap_const_lv46_29D8 = 46'b10100111011000;
parameter    ap_const_lv46_2D90 = 46'b10110110010000;
parameter    ap_const_lv46_3260 = 46'b11001001100000;
parameter    ap_const_lv46_3728 = 46'b11011100101000;
parameter    ap_const_lv46_3DE0 = 46'b11110111100000;
parameter    ap_const_lv47_4498 = 47'b100010010011000;
parameter    ap_const_lv32_2E = 32'b101110;
parameter    ap_const_lv47_4FE8 = 47'b100111111101000;
parameter    ap_const_lv47_5B38 = 47'b101101100111000;
parameter    ap_const_lv15_0 = 15'b000000000000000;
parameter    ap_const_lv32_2F = 32'b101111;
parameter    ap_const_lv5_1E = 5'b11110;
parameter    ap_const_lv5_1D = 5'b11101;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] el;
input  [31:0] detl;
output  [5:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[5:0] ap_return;

(* fsm_encoding = "none" *) reg   [29:0] ap_CS_fsm;
wire   [0:0] ap_CS_fsm_state1;
wire   [4:0] quant26bt_pos_address0;
reg    quant26bt_pos_ce0;
wire   [5:0] quant26bt_pos_q0;
wire   [4:0] quant26bt_neg_address0;
reg    quant26bt_neg_ce0;
wire   [5:0] quant26bt_neg_q0;
reg   [26:0] tmp_17_reg_1196;
wire   [0:0] tmp_fu_374_p3;
reg   [0:0] tmp_reg_1201;
wire   [0:0] ap_CS_fsm_state2;
wire   [31:0] n_assign_fu_388_p3;
reg   [31:0] n_assign_reg_1205;
wire  signed [32:0] wd_cast_cast1_fu_396_p1;
reg  signed [32:0] wd_cast_cast1_reg_1235;
wire  signed [45:0] tmp_cast9_fu_400_p1;
reg  signed [45:0] tmp_cast9_reg_1240;
wire  signed [43:0] tmp_cast8_fu_403_p1;
reg  signed [43:0] tmp_cast8_reg_1251;
wire  signed [47:0] tmp_cast5_fu_409_p1;
reg  signed [47:0] tmp_cast5_reg_1263;
wire  signed [46:0] tmp_cast4_fu_412_p1;
reg  signed [46:0] tmp_cast4_reg_1268;
wire  signed [44:0] tmp_cast2_fu_415_p1;
reg  signed [44:0] tmp_cast2_reg_1275;
wire   [0:0] tmp_44_2_fu_495_p2;
reg   [0:0] tmp_44_2_reg_1292;
wire   [0:0] tmp_4_fu_421_p2;
wire   [0:0] tmp_44_1_fu_469_p2;
wire   [0:0] tmp_44_3_fu_520_p2;
reg   [0:0] tmp_44_3_reg_1296;
wire   [0:0] ap_CS_fsm_state3;
wire   [0:0] tmp_44_4_fu_544_p2;
reg   [0:0] tmp_44_4_reg_1300;
wire   [0:0] ap_CS_fsm_state4;
wire   [0:0] tmp_44_5_fu_568_p2;
reg   [0:0] tmp_44_5_reg_1304;
wire   [0:0] ap_CS_fsm_state5;
wire   [0:0] tmp_44_6_fu_592_p2;
reg   [0:0] tmp_44_6_reg_1308;
wire   [0:0] ap_CS_fsm_state6;
wire   [0:0] tmp_44_7_fu_616_p2;
reg   [0:0] tmp_44_7_reg_1312;
wire   [0:0] ap_CS_fsm_state7;
wire   [0:0] tmp_44_8_fu_640_p2;
reg   [0:0] tmp_44_8_reg_1316;
wire   [0:0] ap_CS_fsm_state8;
wire   [0:0] tmp_44_9_fu_664_p2;
reg   [0:0] tmp_44_9_reg_1320;
wire   [0:0] ap_CS_fsm_state9;
wire   [0:0] tmp_44_s_fu_688_p2;
reg   [0:0] tmp_44_s_reg_1324;
wire   [0:0] ap_CS_fsm_state10;
wire   [0:0] tmp_44_10_fu_712_p2;
reg   [0:0] tmp_44_10_reg_1328;
wire   [0:0] ap_CS_fsm_state11;
wire   [0:0] tmp_44_11_fu_736_p2;
reg   [0:0] tmp_44_11_reg_1332;
wire   [0:0] ap_CS_fsm_state12;
wire   [0:0] tmp_44_12_fu_760_p2;
reg   [0:0] tmp_44_12_reg_1336;
wire   [0:0] ap_CS_fsm_state13;
wire   [0:0] tmp_44_13_fu_784_p2;
reg   [0:0] tmp_44_13_reg_1340;
wire   [0:0] ap_CS_fsm_state14;
wire   [0:0] tmp_44_14_fu_808_p2;
reg   [0:0] tmp_44_14_reg_1344;
wire   [0:0] ap_CS_fsm_state15;
wire   [0:0] tmp_44_15_fu_832_p2;
reg   [0:0] tmp_44_15_reg_1348;
wire   [0:0] ap_CS_fsm_state16;
wire   [0:0] tmp_44_16_fu_856_p2;
reg   [0:0] tmp_44_16_reg_1352;
wire   [0:0] ap_CS_fsm_state17;
wire   [0:0] tmp_44_18_fu_927_p2;
reg   [0:0] tmp_44_18_reg_1359;
wire   [0:0] ap_CS_fsm_state18;
wire   [0:0] tmp_44_17_fu_903_p2;
wire   [0:0] tmp_44_19_fu_951_p2;
reg   [0:0] tmp_44_19_reg_1363;
wire   [0:0] ap_CS_fsm_state19;
wire   [0:0] tmp_44_20_fu_975_p2;
reg   [0:0] tmp_44_20_reg_1367;
wire   [0:0] ap_CS_fsm_state20;
wire   [0:0] tmp_44_21_fu_999_p2;
reg   [0:0] tmp_44_21_reg_1371;
wire   [0:0] ap_CS_fsm_state21;
wire   [0:0] tmp_44_22_fu_1023_p2;
reg   [0:0] tmp_44_22_reg_1375;
wire   [0:0] ap_CS_fsm_state22;
wire   [0:0] tmp_44_23_fu_1047_p2;
reg   [0:0] tmp_44_23_reg_1379;
wire   [0:0] ap_CS_fsm_state23;
wire   [0:0] tmp_44_24_fu_1071_p2;
reg   [0:0] tmp_44_24_reg_1383;
wire   [0:0] ap_CS_fsm_state24;
wire   [0:0] tmp_44_25_fu_1091_p2;
reg   [0:0] tmp_44_25_reg_1387;
wire   [0:0] ap_CS_fsm_state25;
wire   [0:0] tmp_44_26_fu_1111_p2;
reg   [0:0] tmp_44_26_reg_1391;
wire   [0:0] ap_CS_fsm_state26;
wire   [0:0] tmp_44_27_fu_1131_p2;
reg   [0:0] tmp_44_27_reg_1395;
wire   [0:0] ap_CS_fsm_state27;
wire   [4:0] p_cast_cast_fu_1167_p3;
wire   [0:0] ap_CS_fsm_state28;
wire   [0:0] ap_CS_fsm_state29;
reg   [4:0] mil_lcssa_reg_220;
reg   [5:0] ril2_phi_fu_346_p4;
wire   [0:0] ap_CS_fsm_state30;
wire   [63:0] tmp_6_fu_1175_p1;
wire  signed [31:0] tmp_s_fu_358_p0;
wire   [41:0] tmp_s_fu_358_p2;
wire   [31:0] m_fu_382_p2;
wire  signed [31:0] tmp_2_cast_fu_418_p1;
wire   [40:0] p_shl_fu_427_p3;
wire   [37:0] p_shl3_fu_438_p3;
wire  signed [41:0] p_shl3_cast_fu_445_p1;
wire  signed [41:0] p_shl_cast_fu_434_p1;
wire   [41:0] tmp_43_1_fu_449_p2;
wire   [26:0] tmp_18_fu_455_p4;
wire  signed [31:0] tmp_6_cast_fu_465_p1;
wire  signed [31:0] tmp_43_2_fu_475_p0;
wire   [42:0] tmp_43_2_fu_475_p2;
wire   [27:0] tmp_19_fu_481_p4;
wire  signed [31:0] tmp_9_cast_fu_491_p1;
wire  signed [31:0] tmp_43_3_fu_501_p0;
wire   [43:0] tmp_43_3_fu_501_p2;
wire   [28:0] tmp_20_fu_506_p4;
wire  signed [31:0] tmp_7_cast_fu_516_p1;
wire  signed [31:0] tmp_43_4_fu_525_p0;
wire   [43:0] tmp_43_4_fu_525_p2;
wire   [28:0] tmp_21_fu_530_p4;
wire  signed [31:0] tmp_11_cast_fu_540_p1;
wire  signed [31:0] tmp_43_5_fu_549_p0;
wire   [43:0] tmp_43_5_fu_549_p2;
wire   [28:0] tmp_22_fu_554_p4;
wire  signed [31:0] tmp_13_cast_fu_564_p1;
wire  signed [31:0] tmp_43_6_fu_573_p0;
wire   [43:0] tmp_43_6_fu_573_p2;
wire   [28:0] tmp_23_fu_578_p4;
wire  signed [31:0] tmp_15_cast_fu_588_p1;
wire  signed [31:0] tmp_43_7_fu_597_p0;
wire   [43:0] tmp_43_7_fu_597_p2;
wire   [28:0] tmp_24_fu_602_p4;
wire  signed [31:0] tmp_17_cast_fu_612_p1;
wire  signed [31:0] tmp_43_8_fu_621_p0;
wire   [43:0] tmp_43_8_fu_621_p2;
wire   [28:0] tmp_25_fu_626_p4;
wire  signed [31:0] tmp_19_cast_fu_636_p1;
wire  signed [31:0] tmp_43_9_fu_645_p0;
wire   [43:0] tmp_43_9_fu_645_p2;
wire   [28:0] tmp_26_fu_650_p4;
wire  signed [31:0] tmp_21_cast_fu_660_p1;
wire  signed [31:0] tmp_43_s_fu_669_p0;
wire   [43:0] tmp_43_s_fu_669_p2;
wire   [28:0] tmp_27_fu_674_p4;
wire  signed [31:0] tmp_23_cast_fu_684_p1;
wire  signed [31:0] tmp_43_10_fu_693_p0;
wire   [44:0] tmp_43_10_fu_693_p2;
wire   [29:0] tmp_28_fu_698_p4;
wire  signed [31:0] tmp_25_cast_fu_708_p1;
wire  signed [31:0] tmp_43_11_fu_717_p0;
wire   [44:0] tmp_43_11_fu_717_p2;
wire   [29:0] tmp_29_fu_722_p4;
wire  signed [31:0] tmp_27_cast_fu_732_p1;
wire  signed [31:0] tmp_43_12_fu_741_p0;
wire   [44:0] tmp_43_12_fu_741_p2;
wire   [29:0] tmp_30_fu_746_p4;
wire  signed [31:0] tmp_29_cast_fu_756_p1;
wire  signed [31:0] tmp_43_13_fu_765_p0;
wire   [44:0] tmp_43_13_fu_765_p2;
wire   [29:0] tmp_31_fu_770_p4;
wire  signed [31:0] tmp_31_cast_fu_780_p1;
wire  signed [31:0] tmp_43_14_fu_789_p0;
wire   [44:0] tmp_43_14_fu_789_p2;
wire   [29:0] tmp_32_fu_794_p4;
wire  signed [31:0] tmp_33_cast_fu_804_p1;
wire  signed [31:0] tmp_43_15_fu_813_p0;
wire   [44:0] tmp_43_15_fu_813_p2;
wire   [29:0] tmp_33_fu_818_p4;
wire  signed [31:0] tmp_35_cast_fu_828_p1;
wire  signed [31:0] tmp_43_16_fu_837_p0;
wire   [44:0] tmp_43_16_fu_837_p2;
wire   [29:0] tmp_34_fu_842_p4;
wire  signed [31:0] tmp_37_cast_fu_852_p1;
wire   [44:0] p_shl4_fu_861_p3;
wire   [34:0] p_shl5_fu_872_p3;
wire  signed [45:0] p_shl4_cast_fu_868_p1;
wire  signed [45:0] p_shl5_cast_fu_879_p1;
wire   [45:0] tmp_43_17_fu_883_p2;
wire   [30:0] tmp_35_fu_889_p4;
wire  signed [31:0] tmp_39_cast_fu_899_p1;
wire  signed [31:0] tmp_43_18_fu_908_p0;
wire   [45:0] tmp_43_18_fu_908_p2;
wire   [30:0] tmp_36_fu_913_p4;
wire  signed [31:0] tmp_41_cast_fu_923_p1;
wire  signed [31:0] tmp_43_19_fu_932_p0;
wire   [45:0] tmp_43_19_fu_932_p2;
wire   [30:0] tmp_37_fu_937_p4;
wire  signed [31:0] tmp_43_cast_fu_947_p1;
wire  signed [31:0] tmp_43_20_fu_956_p0;
wire   [45:0] tmp_43_20_fu_956_p2;
wire   [30:0] tmp_38_fu_961_p4;
wire  signed [31:0] tmp_45_cast_fu_971_p1;
wire  signed [31:0] tmp_43_21_fu_980_p0;
wire   [45:0] tmp_43_21_fu_980_p2;
wire   [30:0] tmp_39_fu_985_p4;
wire  signed [31:0] tmp_48_cast_fu_995_p1;
wire  signed [31:0] tmp_43_22_fu_1004_p0;
wire   [45:0] tmp_43_22_fu_1004_p2;
wire   [30:0] tmp_40_fu_1009_p4;
wire  signed [31:0] tmp_50_cast_fu_1019_p1;
wire  signed [31:0] tmp_43_23_fu_1028_p0;
wire   [45:0] tmp_43_23_fu_1028_p2;
wire   [30:0] tmp_41_fu_1033_p4;
wire  signed [31:0] tmp_52_cast_fu_1043_p1;
wire  signed [31:0] tmp_43_24_fu_1052_p0;
wire   [45:0] tmp_43_24_fu_1052_p2;
wire   [30:0] tmp_42_fu_1057_p4;
wire  signed [31:0] tmp_54_cast_fu_1067_p1;
wire  signed [31:0] tmp_43_25_fu_1076_p0;
wire   [46:0] tmp_43_25_fu_1076_p2;
wire   [31:0] tmp_1_fu_1081_p4;
wire  signed [31:0] tmp_43_26_fu_1096_p0;
wire   [46:0] tmp_43_26_fu_1096_p2;
wire   [31:0] tmp_2_fu_1101_p4;
wire  signed [31:0] tmp_43_27_fu_1116_p0;
wire   [46:0] tmp_43_27_fu_1116_p2;
wire   [31:0] tmp_3_fu_1121_p4;
wire   [46:0] p_shl6_fu_1136_p3;
wire  signed [47:0] p_shl6_cast_fu_1143_p1;
wire   [47:0] tmp_43_28_fu_1147_p2;
wire   [32:0] tmp_5_fu_1152_p4;
wire   [0:0] tmp_44_28_fu_1162_p2;
reg   [5:0] ap_return_preg;
reg   [29:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 30'b1;
#0 ap_return_preg = 6'b000000;
end

quantl_quant26bt_bkb #(
    .DataWidth( 6 ),
    .AddressRange( 31 ),
    .AddressWidth( 5 ))
quant26bt_pos_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(quant26bt_pos_address0),
    .ce0(quant26bt_pos_ce0),
    .q0(quant26bt_pos_q0)
);

quantl_quant26bt_cud #(
    .DataWidth( 6 ),
    .AddressRange( 31 ),
    .AddressWidth( 5 ))
quant26bt_neg_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(quant26bt_neg_address0),
    .ce0(quant26bt_neg_ce0),
    .q0(quant26bt_neg_q0)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_preg <= ap_const_lv6_0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state30)) begin
            ap_return_preg <= ril2_phi_fu_346_p4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state28) & ~(1'b0 == tmp_44_27_reg_1395))) begin
        mil_lcssa_reg_220 <= p_cast_cast_fu_1167_p3;
    end else if (((1'b1 == ap_CS_fsm_state28) & (1'b0 == tmp_44_27_reg_1395))) begin
        mil_lcssa_reg_220 <= ap_const_lv5_1C;
    end else if (((1'b1 == ap_CS_fsm_state27) & (1'b0 == tmp_44_26_reg_1391))) begin
        mil_lcssa_reg_220 <= ap_const_lv5_1B;
    end else if (((1'b1 == ap_CS_fsm_state26) & (1'b0 == tmp_44_25_reg_1387))) begin
        mil_lcssa_reg_220 <= ap_const_lv5_1A;
    end else if (((1'b1 == ap_CS_fsm_state25) & (1'b0 == tmp_44_24_reg_1383))) begin
        mil_lcssa_reg_220 <= ap_const_lv5_19;
    end else if (((1'b1 == ap_CS_fsm_state24) & (1'b0 == tmp_44_23_reg_1379))) begin
        mil_lcssa_reg_220 <= ap_const_lv5_18;
    end else if (((1'b1 == ap_CS_fsm_state23) & (1'b0 == tmp_44_22_reg_1375))) begin
        mil_lcssa_reg_220 <= ap_const_lv5_17;
    end else if (((1'b1 == ap_CS_fsm_state22) & (1'b0 == tmp_44_21_reg_1371))) begin
        mil_lcssa_reg_220 <= ap_const_lv5_16;
    end else if (((1'b1 == ap_CS_fsm_state21) & (1'b0 == tmp_44_20_reg_1367))) begin
        mil_lcssa_reg_220 <= ap_const_lv5_15;
    end else if (((1'b1 == ap_CS_fsm_state20) & (1'b0 == tmp_44_19_reg_1363))) begin
        mil_lcssa_reg_220 <= ap_const_lv5_14;
    end else if (((1'b1 == ap_CS_fsm_state19) & (1'b0 == tmp_44_18_reg_1359))) begin
        mil_lcssa_reg_220 <= ap_const_lv5_13;
    end else if (((1'b1 == ap_CS_fsm_state18) & ~(1'b0 == tmp_44_16_reg_1352) & (1'b0 == tmp_44_17_fu_903_p2))) begin
        mil_lcssa_reg_220 <= ap_const_lv5_12;
    end else if (((1'b1 == ap_CS_fsm_state18) & (1'b0 == tmp_44_16_reg_1352))) begin
        mil_lcssa_reg_220 <= ap_const_lv5_11;
    end else if (((1'b1 == ap_CS_fsm_state17) & (1'b0 == tmp_44_15_reg_1348))) begin
        mil_lcssa_reg_220 <= ap_const_lv5_10;
    end else if (((1'b1 == ap_CS_fsm_state16) & (1'b0 == tmp_44_14_reg_1344))) begin
        mil_lcssa_reg_220 <= ap_const_lv5_F;
    end else if (((1'b1 == ap_CS_fsm_state15) & (1'b0 == tmp_44_13_reg_1340))) begin
        mil_lcssa_reg_220 <= ap_const_lv5_E;
    end else if (((1'b1 == ap_CS_fsm_state14) & (1'b0 == tmp_44_12_reg_1336))) begin
        mil_lcssa_reg_220 <= ap_const_lv5_D;
    end else if (((1'b1 == ap_CS_fsm_state13) & (1'b0 == tmp_44_11_reg_1332))) begin
        mil_lcssa_reg_220 <= ap_const_lv5_C;
    end else if (((1'b1 == ap_CS_fsm_state12) & (1'b0 == tmp_44_10_reg_1328))) begin
        mil_lcssa_reg_220 <= ap_const_lv5_B;
    end else if (((1'b1 == ap_CS_fsm_state11) & (1'b0 == tmp_44_s_reg_1324))) begin
        mil_lcssa_reg_220 <= ap_const_lv5_A;
    end else if (((1'b1 == ap_CS_fsm_state10) & (1'b0 == tmp_44_9_reg_1320))) begin
        mil_lcssa_reg_220 <= ap_const_lv5_9;
    end else if (((1'b1 == ap_CS_fsm_state9) & (1'b0 == tmp_44_8_reg_1316))) begin
        mil_lcssa_reg_220 <= ap_const_lv5_8;
    end else if (((1'b1 == ap_CS_fsm_state8) & (1'b0 == tmp_44_7_reg_1312))) begin
        mil_lcssa_reg_220 <= ap_const_lv5_7;
    end else if (((1'b1 == ap_CS_fsm_state7) & (1'b0 == tmp_44_6_reg_1308))) begin
        mil_lcssa_reg_220 <= ap_const_lv5_6;
    end else if (((1'b1 == ap_CS_fsm_state6) & (1'b0 == tmp_44_5_reg_1304))) begin
        mil_lcssa_reg_220 <= ap_const_lv5_5;
    end else if (((1'b1 == ap_CS_fsm_state5) & (1'b0 == tmp_44_4_reg_1300))) begin
        mil_lcssa_reg_220 <= ap_const_lv5_4;
    end else if (((1'b1 == ap_CS_fsm_state4) & (1'b0 == tmp_44_3_reg_1296))) begin
        mil_lcssa_reg_220 <= ap_const_lv5_3;
    end else if (((1'b1 == ap_CS_fsm_state3) & (tmp_44_2_reg_1292 == 1'b0))) begin
        mil_lcssa_reg_220 <= ap_const_lv5_2;
    end else if (((1'b1 == ap_CS_fsm_state2) & ~(tmp_4_fu_421_p2 == 1'b0) & (1'b0 == tmp_44_1_fu_469_p2))) begin
        mil_lcssa_reg_220 <= ap_const_lv5_1;
    end else if (((1'b1 == ap_CS_fsm_state2) & (tmp_4_fu_421_p2 == 1'b0))) begin
        mil_lcssa_reg_220 <= ap_const_lv5_0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        n_assign_reg_1205 <= n_assign_fu_388_p3;
        tmp_cast2_reg_1275 <= tmp_cast2_fu_415_p1;
        tmp_cast4_reg_1268 <= tmp_cast4_fu_412_p1;
        tmp_cast5_reg_1263 <= tmp_cast5_fu_409_p1;
        tmp_cast8_reg_1251 <= tmp_cast8_fu_403_p1;
        tmp_cast9_reg_1240 <= tmp_cast9_fu_400_p1;
        tmp_reg_1201 <= el[ap_const_lv32_1F];
        wd_cast_cast1_reg_1235 <= wd_cast_cast1_fu_396_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0))) begin
        tmp_17_reg_1196 <= {{tmp_s_fu_358_p2[ap_const_lv32_29 : ap_const_lv32_F]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state11) & ~(1'b0 == tmp_44_s_reg_1324))) begin
        tmp_44_10_reg_1328 <= tmp_44_10_fu_712_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state12) & ~(1'b0 == tmp_44_10_reg_1328))) begin
        tmp_44_11_reg_1332 <= tmp_44_11_fu_736_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state13) & ~(1'b0 == tmp_44_11_reg_1332))) begin
        tmp_44_12_reg_1336 <= tmp_44_12_fu_760_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state14) & ~(1'b0 == tmp_44_12_reg_1336))) begin
        tmp_44_13_reg_1340 <= tmp_44_13_fu_784_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state15) & ~(1'b0 == tmp_44_13_reg_1340))) begin
        tmp_44_14_reg_1344 <= tmp_44_14_fu_808_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state16) & ~(1'b0 == tmp_44_14_reg_1344))) begin
        tmp_44_15_reg_1348 <= tmp_44_15_fu_832_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state17) & ~(1'b0 == tmp_44_15_reg_1348))) begin
        tmp_44_16_reg_1352 <= tmp_44_16_fu_856_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state18) & ~(1'b0 == tmp_44_16_reg_1352) & ~(1'b0 == tmp_44_17_fu_903_p2))) begin
        tmp_44_18_reg_1359 <= tmp_44_18_fu_927_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state19) & ~(1'b0 == tmp_44_18_reg_1359))) begin
        tmp_44_19_reg_1363 <= tmp_44_19_fu_951_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state20) & ~(1'b0 == tmp_44_19_reg_1363))) begin
        tmp_44_20_reg_1367 <= tmp_44_20_fu_975_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state21) & ~(1'b0 == tmp_44_20_reg_1367))) begin
        tmp_44_21_reg_1371 <= tmp_44_21_fu_999_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state22) & ~(1'b0 == tmp_44_21_reg_1371))) begin
        tmp_44_22_reg_1375 <= tmp_44_22_fu_1023_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state23) & ~(1'b0 == tmp_44_22_reg_1375))) begin
        tmp_44_23_reg_1379 <= tmp_44_23_fu_1047_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state24) & ~(1'b0 == tmp_44_23_reg_1379))) begin
        tmp_44_24_reg_1383 <= tmp_44_24_fu_1071_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state25) & ~(1'b0 == tmp_44_24_reg_1383))) begin
        tmp_44_25_reg_1387 <= tmp_44_25_fu_1091_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state26) & ~(1'b0 == tmp_44_25_reg_1387))) begin
        tmp_44_26_reg_1391 <= tmp_44_26_fu_1111_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state27) & ~(1'b0 == tmp_44_26_reg_1391))) begin
        tmp_44_27_reg_1395 <= tmp_44_27_fu_1131_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & ~(tmp_4_fu_421_p2 == 1'b0) & ~(1'b0 == tmp_44_1_fu_469_p2))) begin
        tmp_44_2_reg_1292 <= tmp_44_2_fu_495_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & ~(tmp_44_2_reg_1292 == 1'b0))) begin
        tmp_44_3_reg_1296 <= tmp_44_3_fu_520_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & ~(1'b0 == tmp_44_3_reg_1296))) begin
        tmp_44_4_reg_1300 <= tmp_44_4_fu_544_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & ~(1'b0 == tmp_44_4_reg_1300))) begin
        tmp_44_5_reg_1304 <= tmp_44_5_fu_568_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & ~(1'b0 == tmp_44_5_reg_1304))) begin
        tmp_44_6_reg_1308 <= tmp_44_6_fu_592_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state7) & ~(1'b0 == tmp_44_6_reg_1308))) begin
        tmp_44_7_reg_1312 <= tmp_44_7_fu_616_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state8) & ~(1'b0 == tmp_44_7_reg_1312))) begin
        tmp_44_8_reg_1316 <= tmp_44_8_fu_640_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state9) & ~(1'b0 == tmp_44_8_reg_1316))) begin
        tmp_44_9_reg_1320 <= tmp_44_9_fu_664_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state10) & ~(1'b0 == tmp_44_9_reg_1320))) begin
        tmp_44_s_reg_1324 <= tmp_44_s_fu_688_p2;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_start) & (ap_CS_fsm_state1 == 1'b1)) | (1'b1 == ap_CS_fsm_state30))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (ap_CS_fsm_state1 == 1'b1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        ap_return = ril2_phi_fu_346_p4;
    end else begin
        ap_return = ap_return_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        quant26bt_neg_ce0 = 1'b1;
    end else begin
        quant26bt_neg_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        quant26bt_pos_ce0 = 1'b1;
    end else begin
        quant26bt_pos_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        if (~(tmp_reg_1201 == 1'b0)) begin
            ril2_phi_fu_346_p4 = quant26bt_neg_q0;
        end else if ((tmp_reg_1201 == 1'b0)) begin
            ril2_phi_fu_346_p4 = quant26bt_pos_q0;
        end else begin
            ril2_phi_fu_346_p4 = 'bx;
        end
    end else begin
        ril2_phi_fu_346_p4 = 'bx;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (~(ap_start == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if ((~(tmp_4_fu_421_p2 == 1'b0) & ~(1'b0 == tmp_44_1_fu_469_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end
        end
        ap_ST_fsm_state3 : begin
            if ((tmp_44_2_reg_1292 == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            if ((1'b0 == tmp_44_3_reg_1296)) begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state5 : begin
            if ((1'b0 == tmp_44_4_reg_1300)) begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state6 : begin
            if ((1'b0 == tmp_44_5_reg_1304)) begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state7 : begin
            if ((1'b0 == tmp_44_6_reg_1308)) begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state8 : begin
            if ((1'b0 == tmp_44_7_reg_1312)) begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state9 : begin
            if ((1'b0 == tmp_44_8_reg_1316)) begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state10 : begin
            if ((1'b0 == tmp_44_9_reg_1320)) begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        ap_ST_fsm_state11 : begin
            if ((1'b0 == tmp_44_s_reg_1324)) begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end
        end
        ap_ST_fsm_state12 : begin
            if ((1'b0 == tmp_44_10_reg_1328)) begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end
        end
        ap_ST_fsm_state13 : begin
            if ((1'b0 == tmp_44_11_reg_1332)) begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end
        end
        ap_ST_fsm_state14 : begin
            if ((1'b0 == tmp_44_12_reg_1336)) begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end
        end
        ap_ST_fsm_state15 : begin
            if ((1'b0 == tmp_44_13_reg_1340)) begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end
        end
        ap_ST_fsm_state16 : begin
            if ((1'b0 == tmp_44_14_reg_1344)) begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end
        end
        ap_ST_fsm_state17 : begin
            if ((1'b0 == tmp_44_15_reg_1348)) begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end
        end
        ap_ST_fsm_state18 : begin
            if ((~(1'b0 == tmp_44_16_reg_1352) & ~(1'b0 == tmp_44_17_fu_903_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end
        end
        ap_ST_fsm_state19 : begin
            if ((1'b0 == tmp_44_18_reg_1359)) begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end
        end
        ap_ST_fsm_state20 : begin
            if ((1'b0 == tmp_44_19_reg_1363)) begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end
        end
        ap_ST_fsm_state21 : begin
            if ((1'b0 == tmp_44_20_reg_1367)) begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end
        end
        ap_ST_fsm_state22 : begin
            if ((1'b0 == tmp_44_21_reg_1371)) begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end
        end
        ap_ST_fsm_state23 : begin
            if ((1'b0 == tmp_44_22_reg_1375)) begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end
        end
        ap_ST_fsm_state24 : begin
            if ((1'b0 == tmp_44_23_reg_1379)) begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end
        end
        ap_ST_fsm_state25 : begin
            if ((1'b0 == tmp_44_24_reg_1383)) begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end
        end
        ap_ST_fsm_state26 : begin
            if ((1'b0 == tmp_44_25_reg_1387)) begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end
        end
        ap_ST_fsm_state27 : begin
            if ((1'b0 == tmp_44_26_reg_1391)) begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[ap_const_lv32_0];

assign ap_CS_fsm_state10 = ap_CS_fsm[ap_const_lv32_9];

assign ap_CS_fsm_state11 = ap_CS_fsm[ap_const_lv32_A];

assign ap_CS_fsm_state12 = ap_CS_fsm[ap_const_lv32_B];

assign ap_CS_fsm_state13 = ap_CS_fsm[ap_const_lv32_C];

assign ap_CS_fsm_state14 = ap_CS_fsm[ap_const_lv32_D];

assign ap_CS_fsm_state15 = ap_CS_fsm[ap_const_lv32_E];

assign ap_CS_fsm_state16 = ap_CS_fsm[ap_const_lv32_F];

assign ap_CS_fsm_state17 = ap_CS_fsm[ap_const_lv32_10];

assign ap_CS_fsm_state18 = ap_CS_fsm[ap_const_lv32_11];

assign ap_CS_fsm_state19 = ap_CS_fsm[ap_const_lv32_12];

assign ap_CS_fsm_state2 = ap_CS_fsm[ap_const_lv32_1];

assign ap_CS_fsm_state20 = ap_CS_fsm[ap_const_lv32_13];

assign ap_CS_fsm_state21 = ap_CS_fsm[ap_const_lv32_14];

assign ap_CS_fsm_state22 = ap_CS_fsm[ap_const_lv32_15];

assign ap_CS_fsm_state23 = ap_CS_fsm[ap_const_lv32_16];

assign ap_CS_fsm_state24 = ap_CS_fsm[ap_const_lv32_17];

assign ap_CS_fsm_state25 = ap_CS_fsm[ap_const_lv32_18];

assign ap_CS_fsm_state26 = ap_CS_fsm[ap_const_lv32_19];

assign ap_CS_fsm_state27 = ap_CS_fsm[ap_const_lv32_1A];

assign ap_CS_fsm_state28 = ap_CS_fsm[ap_const_lv32_1B];

assign ap_CS_fsm_state29 = ap_CS_fsm[ap_const_lv32_1C];

assign ap_CS_fsm_state3 = ap_CS_fsm[ap_const_lv32_2];

assign ap_CS_fsm_state30 = ap_CS_fsm[ap_const_lv32_1D];

assign ap_CS_fsm_state4 = ap_CS_fsm[ap_const_lv32_3];

assign ap_CS_fsm_state5 = ap_CS_fsm[ap_const_lv32_4];

assign ap_CS_fsm_state6 = ap_CS_fsm[ap_const_lv32_5];

assign ap_CS_fsm_state7 = ap_CS_fsm[ap_const_lv32_6];

assign ap_CS_fsm_state8 = ap_CS_fsm[ap_const_lv32_7];

assign ap_CS_fsm_state9 = ap_CS_fsm[ap_const_lv32_8];

assign m_fu_382_p2 = (ap_const_lv32_0 - el);

assign n_assign_fu_388_p3 = ((tmp_fu_374_p3[0:0] === 1'b1) ? m_fu_382_p2 : el);

assign p_cast_cast_fu_1167_p3 = ((tmp_44_28_fu_1162_p2[0:0] === 1'b1) ? ap_const_lv5_1E : ap_const_lv5_1D);

assign p_shl3_cast_fu_445_p1 = $signed(p_shl3_fu_438_p3);

assign p_shl3_fu_438_p3 = {{detl}, {ap_const_lv6_0}};

assign p_shl4_cast_fu_868_p1 = $signed(p_shl4_fu_861_p3);

assign p_shl4_fu_861_p3 = {{detl}, {ap_const_lv13_0}};

assign p_shl5_cast_fu_879_p1 = $signed(p_shl5_fu_872_p3);

assign p_shl5_fu_872_p3 = {{detl}, {ap_const_lv3_0}};

assign p_shl6_cast_fu_1143_p1 = $signed(p_shl6_fu_1136_p3);

assign p_shl6_fu_1136_p3 = {{detl}, {ap_const_lv15_0}};

assign p_shl_cast_fu_434_p1 = $signed(p_shl_fu_427_p3);

assign p_shl_fu_427_p3 = {{detl}, {ap_const_lv9_0}};

assign quant26bt_neg_address0 = tmp_6_fu_1175_p1;

assign quant26bt_pos_address0 = tmp_6_fu_1175_p1;

assign tmp_11_cast_fu_540_p1 = $signed(tmp_21_fu_530_p4);

assign tmp_13_cast_fu_564_p1 = $signed(tmp_22_fu_554_p4);

assign tmp_15_cast_fu_588_p1 = $signed(tmp_23_fu_578_p4);

assign tmp_17_cast_fu_612_p1 = $signed(tmp_24_fu_602_p4);

assign tmp_18_fu_455_p4 = {{tmp_43_1_fu_449_p2[ap_const_lv32_29 : ap_const_lv32_F]}};

assign tmp_19_cast_fu_636_p1 = $signed(tmp_25_fu_626_p4);

assign tmp_19_fu_481_p4 = {{tmp_43_2_fu_475_p2[ap_const_lv32_2A : ap_const_lv32_F]}};

assign tmp_1_fu_1081_p4 = {{tmp_43_25_fu_1076_p2[ap_const_lv32_2E : ap_const_lv32_F]}};

assign tmp_20_fu_506_p4 = {{tmp_43_3_fu_501_p2[ap_const_lv32_2B : ap_const_lv32_F]}};

assign tmp_21_cast_fu_660_p1 = $signed(tmp_26_fu_650_p4);

assign tmp_21_fu_530_p4 = {{tmp_43_4_fu_525_p2[ap_const_lv32_2B : ap_const_lv32_F]}};

assign tmp_22_fu_554_p4 = {{tmp_43_5_fu_549_p2[ap_const_lv32_2B : ap_const_lv32_F]}};

assign tmp_23_cast_fu_684_p1 = $signed(tmp_27_fu_674_p4);

assign tmp_23_fu_578_p4 = {{tmp_43_6_fu_573_p2[ap_const_lv32_2B : ap_const_lv32_F]}};

assign tmp_24_fu_602_p4 = {{tmp_43_7_fu_597_p2[ap_const_lv32_2B : ap_const_lv32_F]}};

assign tmp_25_cast_fu_708_p1 = $signed(tmp_28_fu_698_p4);

assign tmp_25_fu_626_p4 = {{tmp_43_8_fu_621_p2[ap_const_lv32_2B : ap_const_lv32_F]}};

assign tmp_26_fu_650_p4 = {{tmp_43_9_fu_645_p2[ap_const_lv32_2B : ap_const_lv32_F]}};

assign tmp_27_cast_fu_732_p1 = $signed(tmp_29_fu_722_p4);

assign tmp_27_fu_674_p4 = {{tmp_43_s_fu_669_p2[ap_const_lv32_2B : ap_const_lv32_F]}};

assign tmp_28_fu_698_p4 = {{tmp_43_10_fu_693_p2[ap_const_lv32_2C : ap_const_lv32_F]}};

assign tmp_29_cast_fu_756_p1 = $signed(tmp_30_fu_746_p4);

assign tmp_29_fu_722_p4 = {{tmp_43_11_fu_717_p2[ap_const_lv32_2C : ap_const_lv32_F]}};

assign tmp_2_cast_fu_418_p1 = $signed(tmp_17_reg_1196);

assign tmp_2_fu_1101_p4 = {{tmp_43_26_fu_1096_p2[ap_const_lv32_2E : ap_const_lv32_F]}};

assign tmp_30_fu_746_p4 = {{tmp_43_12_fu_741_p2[ap_const_lv32_2C : ap_const_lv32_F]}};

assign tmp_31_cast_fu_780_p1 = $signed(tmp_31_fu_770_p4);

assign tmp_31_fu_770_p4 = {{tmp_43_13_fu_765_p2[ap_const_lv32_2C : ap_const_lv32_F]}};

assign tmp_32_fu_794_p4 = {{tmp_43_14_fu_789_p2[ap_const_lv32_2C : ap_const_lv32_F]}};

assign tmp_33_cast_fu_804_p1 = $signed(tmp_32_fu_794_p4);

assign tmp_33_fu_818_p4 = {{tmp_43_15_fu_813_p2[ap_const_lv32_2C : ap_const_lv32_F]}};

assign tmp_34_fu_842_p4 = {{tmp_43_16_fu_837_p2[ap_const_lv32_2C : ap_const_lv32_F]}};

assign tmp_35_cast_fu_828_p1 = $signed(tmp_33_fu_818_p4);

assign tmp_35_fu_889_p4 = {{tmp_43_17_fu_883_p2[ap_const_lv32_2D : ap_const_lv32_F]}};

assign tmp_36_fu_913_p4 = {{tmp_43_18_fu_908_p2[ap_const_lv32_2D : ap_const_lv32_F]}};

assign tmp_37_cast_fu_852_p1 = $signed(tmp_34_fu_842_p4);

assign tmp_37_fu_937_p4 = {{tmp_43_19_fu_932_p2[ap_const_lv32_2D : ap_const_lv32_F]}};

assign tmp_38_fu_961_p4 = {{tmp_43_20_fu_956_p2[ap_const_lv32_2D : ap_const_lv32_F]}};

assign tmp_39_cast_fu_899_p1 = $signed(tmp_35_fu_889_p4);

assign tmp_39_fu_985_p4 = {{tmp_43_21_fu_980_p2[ap_const_lv32_2D : ap_const_lv32_F]}};

assign tmp_3_fu_1121_p4 = {{tmp_43_27_fu_1116_p2[ap_const_lv32_2E : ap_const_lv32_F]}};

assign tmp_40_fu_1009_p4 = {{tmp_43_22_fu_1004_p2[ap_const_lv32_2D : ap_const_lv32_F]}};

assign tmp_41_cast_fu_923_p1 = $signed(tmp_36_fu_913_p4);

assign tmp_41_fu_1033_p4 = {{tmp_43_23_fu_1028_p2[ap_const_lv32_2D : ap_const_lv32_F]}};

assign tmp_42_fu_1057_p4 = {{tmp_43_24_fu_1052_p2[ap_const_lv32_2D : ap_const_lv32_F]}};

assign tmp_43_10_fu_693_p0 = tmp_cast2_reg_1275;

assign tmp_43_10_fu_693_p2 = ($signed(tmp_43_10_fu_693_p0) * $signed('h1090));

assign tmp_43_11_fu_717_p0 = tmp_cast2_reg_1275;

assign tmp_43_11_fu_717_p2 = ($signed(tmp_43_11_fu_717_p0) * $signed('h1258));

assign tmp_43_12_fu_741_p0 = tmp_cast2_reg_1275;

assign tmp_43_12_fu_741_p2 = ($signed(tmp_43_12_fu_741_p0) * $signed('h1450));

assign tmp_43_13_fu_765_p0 = tmp_cast2_reg_1275;

assign tmp_43_13_fu_765_p2 = ($signed(tmp_43_13_fu_765_p0) * $signed('h1650));

assign tmp_43_14_fu_789_p0 = tmp_cast2_reg_1275;

assign tmp_43_14_fu_789_p2 = ($signed(tmp_43_14_fu_789_p0) * $signed('h1890));

assign tmp_43_15_fu_813_p0 = tmp_cast2_reg_1275;

assign tmp_43_15_fu_813_p2 = ($signed(tmp_43_15_fu_813_p0) * $signed('h1AD0));

assign tmp_43_16_fu_837_p0 = tmp_cast2_reg_1275;

assign tmp_43_16_fu_837_p2 = ($signed(tmp_43_16_fu_837_p0) * $signed('h1D60));

assign tmp_43_17_fu_883_p2 = ($signed(p_shl4_cast_fu_868_p1) - $signed(p_shl5_cast_fu_879_p1));

assign tmp_43_18_fu_908_p0 = tmp_cast9_reg_1240;

assign tmp_43_18_fu_908_p2 = ($signed(tmp_43_18_fu_908_p0) * $signed('h2308));

assign tmp_43_19_fu_932_p0 = tmp_cast9_reg_1240;

assign tmp_43_19_fu_932_p2 = ($signed(tmp_43_19_fu_932_p0) * $signed('h2618));

assign tmp_43_1_fu_449_p2 = ($signed(p_shl3_cast_fu_445_p1) + $signed(p_shl_cast_fu_434_p1));

assign tmp_43_20_fu_956_p0 = tmp_cast9_reg_1240;

assign tmp_43_20_fu_956_p2 = ($signed(tmp_43_20_fu_956_p0) * $signed('h29D8));

assign tmp_43_21_fu_980_p0 = tmp_cast9_reg_1240;

assign tmp_43_21_fu_980_p2 = ($signed(tmp_43_21_fu_980_p0) * $signed('h2D90));

assign tmp_43_22_fu_1004_p0 = tmp_cast9_reg_1240;

assign tmp_43_22_fu_1004_p2 = ($signed(tmp_43_22_fu_1004_p0) * $signed('h3260));

assign tmp_43_23_fu_1028_p0 = tmp_cast9_reg_1240;

assign tmp_43_23_fu_1028_p2 = ($signed(tmp_43_23_fu_1028_p0) * $signed('h3728));

assign tmp_43_24_fu_1052_p0 = tmp_cast9_reg_1240;

assign tmp_43_24_fu_1052_p2 = ($signed(tmp_43_24_fu_1052_p0) * $signed('h3DE0));

assign tmp_43_25_fu_1076_p0 = tmp_cast4_reg_1268;

assign tmp_43_25_fu_1076_p2 = ($signed(tmp_43_25_fu_1076_p0) * $signed('h4498));

assign tmp_43_26_fu_1096_p0 = tmp_cast4_reg_1268;

assign tmp_43_26_fu_1096_p2 = ($signed(tmp_43_26_fu_1096_p0) * $signed('h4FE8));

assign tmp_43_27_fu_1116_p0 = tmp_cast4_reg_1268;

assign tmp_43_27_fu_1116_p2 = ($signed(tmp_43_27_fu_1116_p0) * $signed('h5B38));

assign tmp_43_28_fu_1147_p2 = ($signed(p_shl6_cast_fu_1143_p1) - $signed(tmp_cast5_reg_1263));

assign tmp_43_2_fu_475_p0 = detl;

assign tmp_43_2_fu_475_p2 = ($signed(tmp_43_2_fu_475_p0) * $signed('h370));

assign tmp_43_3_fu_501_p0 = tmp_cast8_reg_1251;

assign tmp_43_3_fu_501_p2 = ($signed(tmp_43_3_fu_501_p0) * $signed('h4B0));

assign tmp_43_4_fu_525_p0 = tmp_cast8_reg_1251;

assign tmp_43_4_fu_525_p2 = ($signed(tmp_43_4_fu_525_p0) * $signed('h5F0));

assign tmp_43_5_fu_549_p0 = tmp_cast8_reg_1251;

assign tmp_43_5_fu_549_p2 = ($signed(tmp_43_5_fu_549_p0) * $signed('h748));

assign tmp_43_6_fu_573_p0 = tmp_cast8_reg_1251;

assign tmp_43_6_fu_573_p2 = ($signed(tmp_43_6_fu_573_p0) * $signed('h8A0));

assign tmp_43_7_fu_597_p0 = tmp_cast8_reg_1251;

assign tmp_43_7_fu_597_p2 = ($signed(tmp_43_7_fu_597_p0) * $signed('hA18));

assign tmp_43_8_fu_621_p0 = tmp_cast8_reg_1251;

assign tmp_43_8_fu_621_p2 = ($signed(tmp_43_8_fu_621_p0) * $signed('hB90));

assign tmp_43_9_fu_645_p0 = tmp_cast8_reg_1251;

assign tmp_43_9_fu_645_p2 = ($signed(tmp_43_9_fu_645_p0) * $signed('hD30));

assign tmp_43_cast_fu_947_p1 = $signed(tmp_37_fu_937_p4);

assign tmp_43_s_fu_669_p0 = tmp_cast8_reg_1251;

assign tmp_43_s_fu_669_p2 = ($signed(tmp_43_s_fu_669_p0) * $signed('hEC8));

assign tmp_44_10_fu_712_p2 = (($signed(n_assign_reg_1205) > $signed(tmp_25_cast_fu_708_p1)) ? 1'b1 : 1'b0);

assign tmp_44_11_fu_736_p2 = (($signed(n_assign_reg_1205) > $signed(tmp_27_cast_fu_732_p1)) ? 1'b1 : 1'b0);

assign tmp_44_12_fu_760_p2 = (($signed(n_assign_reg_1205) > $signed(tmp_29_cast_fu_756_p1)) ? 1'b1 : 1'b0);

assign tmp_44_13_fu_784_p2 = (($signed(n_assign_reg_1205) > $signed(tmp_31_cast_fu_780_p1)) ? 1'b1 : 1'b0);

assign tmp_44_14_fu_808_p2 = (($signed(n_assign_reg_1205) > $signed(tmp_33_cast_fu_804_p1)) ? 1'b1 : 1'b0);

assign tmp_44_15_fu_832_p2 = (($signed(n_assign_reg_1205) > $signed(tmp_35_cast_fu_828_p1)) ? 1'b1 : 1'b0);

assign tmp_44_16_fu_856_p2 = (($signed(n_assign_reg_1205) > $signed(tmp_37_cast_fu_852_p1)) ? 1'b1 : 1'b0);

assign tmp_44_17_fu_903_p2 = (($signed(n_assign_reg_1205) > $signed(tmp_39_cast_fu_899_p1)) ? 1'b1 : 1'b0);

assign tmp_44_18_fu_927_p2 = (($signed(n_assign_reg_1205) > $signed(tmp_41_cast_fu_923_p1)) ? 1'b1 : 1'b0);

assign tmp_44_19_fu_951_p2 = (($signed(n_assign_reg_1205) > $signed(tmp_43_cast_fu_947_p1)) ? 1'b1 : 1'b0);

assign tmp_44_1_fu_469_p2 = (($signed(n_assign_fu_388_p3) > $signed(tmp_6_cast_fu_465_p1)) ? 1'b1 : 1'b0);

assign tmp_44_20_fu_975_p2 = (($signed(n_assign_reg_1205) > $signed(tmp_45_cast_fu_971_p1)) ? 1'b1 : 1'b0);

assign tmp_44_21_fu_999_p2 = (($signed(n_assign_reg_1205) > $signed(tmp_48_cast_fu_995_p1)) ? 1'b1 : 1'b0);

assign tmp_44_22_fu_1023_p2 = (($signed(n_assign_reg_1205) > $signed(tmp_50_cast_fu_1019_p1)) ? 1'b1 : 1'b0);

assign tmp_44_23_fu_1047_p2 = (($signed(n_assign_reg_1205) > $signed(tmp_52_cast_fu_1043_p1)) ? 1'b1 : 1'b0);

assign tmp_44_24_fu_1071_p2 = (($signed(n_assign_reg_1205) > $signed(tmp_54_cast_fu_1067_p1)) ? 1'b1 : 1'b0);

assign tmp_44_25_fu_1091_p2 = (($signed(n_assign_reg_1205) > $signed(tmp_1_fu_1081_p4)) ? 1'b1 : 1'b0);

assign tmp_44_26_fu_1111_p2 = (($signed(n_assign_reg_1205) > $signed(tmp_2_fu_1101_p4)) ? 1'b1 : 1'b0);

assign tmp_44_27_fu_1131_p2 = (($signed(n_assign_reg_1205) > $signed(tmp_3_fu_1121_p4)) ? 1'b1 : 1'b0);

assign tmp_44_28_fu_1162_p2 = (($signed(wd_cast_cast1_reg_1235) > $signed(tmp_5_fu_1152_p4)) ? 1'b1 : 1'b0);

assign tmp_44_2_fu_495_p2 = (($signed(n_assign_fu_388_p3) > $signed(tmp_9_cast_fu_491_p1)) ? 1'b1 : 1'b0);

assign tmp_44_3_fu_520_p2 = (($signed(n_assign_reg_1205) > $signed(tmp_7_cast_fu_516_p1)) ? 1'b1 : 1'b0);

assign tmp_44_4_fu_544_p2 = (($signed(n_assign_reg_1205) > $signed(tmp_11_cast_fu_540_p1)) ? 1'b1 : 1'b0);

assign tmp_44_5_fu_568_p2 = (($signed(n_assign_reg_1205) > $signed(tmp_13_cast_fu_564_p1)) ? 1'b1 : 1'b0);

assign tmp_44_6_fu_592_p2 = (($signed(n_assign_reg_1205) > $signed(tmp_15_cast_fu_588_p1)) ? 1'b1 : 1'b0);

assign tmp_44_7_fu_616_p2 = (($signed(n_assign_reg_1205) > $signed(tmp_17_cast_fu_612_p1)) ? 1'b1 : 1'b0);

assign tmp_44_8_fu_640_p2 = (($signed(n_assign_reg_1205) > $signed(tmp_19_cast_fu_636_p1)) ? 1'b1 : 1'b0);

assign tmp_44_9_fu_664_p2 = (($signed(n_assign_reg_1205) > $signed(tmp_21_cast_fu_660_p1)) ? 1'b1 : 1'b0);

assign tmp_44_s_fu_688_p2 = (($signed(n_assign_reg_1205) > $signed(tmp_23_cast_fu_684_p1)) ? 1'b1 : 1'b0);

assign tmp_45_cast_fu_971_p1 = $signed(tmp_38_fu_961_p4);

assign tmp_48_cast_fu_995_p1 = $signed(tmp_39_fu_985_p4);

assign tmp_4_fu_421_p2 = (($signed(n_assign_fu_388_p3) > $signed(tmp_2_cast_fu_418_p1)) ? 1'b1 : 1'b0);

assign tmp_50_cast_fu_1019_p1 = $signed(tmp_40_fu_1009_p4);

assign tmp_52_cast_fu_1043_p1 = $signed(tmp_41_fu_1033_p4);

assign tmp_54_cast_fu_1067_p1 = $signed(tmp_42_fu_1057_p4);

assign tmp_5_fu_1152_p4 = {{tmp_43_28_fu_1147_p2[ap_const_lv32_2F : ap_const_lv32_F]}};

assign tmp_6_cast_fu_465_p1 = $signed(tmp_18_fu_455_p4);

assign tmp_6_fu_1175_p1 = mil_lcssa_reg_220;

assign tmp_7_cast_fu_516_p1 = $signed(tmp_20_fu_506_p4);

assign tmp_9_cast_fu_491_p1 = $signed(tmp_19_fu_481_p4);

assign tmp_cast2_fu_415_p1 = $signed(detl);

assign tmp_cast4_fu_412_p1 = $signed(detl);

assign tmp_cast5_fu_409_p1 = $signed(detl);

assign tmp_cast8_fu_403_p1 = $signed(detl);

assign tmp_cast9_fu_400_p1 = $signed(detl);

assign tmp_fu_374_p3 = el[ap_const_lv32_1F];

assign tmp_s_fu_358_p0 = detl;

assign tmp_s_fu_358_p2 = ($signed(tmp_s_fu_358_p0) * $signed('h118));

assign wd_cast_cast1_fu_396_p1 = $signed(n_assign_fu_388_p3);

endmodule //quantl
