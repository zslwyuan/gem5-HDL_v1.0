/* verilator lint_off UNUSED */
/* verilator lint_off DECLFILENAME */
/* verilator lint_off STMTDLY */
/* verilator lint_off WIDTH */
// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.4
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module upzero (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        dlt,
        dlti_address0,
        dlti_ce0,
        dlti_we0,
        dlti_d0,
        dlti_q0,
        dlti_address1,
        dlti_ce1,
        dlti_we1,
        dlti_d1,
        dlti_q1,
        dlti_offset,
        bli_offset
);

parameter    ap_ST_fsm_state1 = 47'b1;
parameter    ap_ST_fsm_state2 = 47'b10;
parameter    ap_ST_fsm_state3 = 47'b100;
parameter    ap_ST_fsm_state4 = 47'b1000;
parameter    ap_ST_fsm_state5 = 47'b10000;
parameter    ap_ST_fsm_state6 = 47'b100000;
parameter    ap_ST_fsm_state7 = 47'b1000000;
parameter    ap_ST_fsm_state8 = 47'b10000000;
parameter    ap_ST_fsm_state9 = 47'b100000000;
parameter    ap_ST_fsm_state10 = 47'b1000000000;
parameter    ap_ST_fsm_state11 = 47'b10000000000;
parameter    ap_ST_fsm_state12 = 47'b100000000000;
parameter    ap_ST_fsm_state13 = 47'b1000000000000;
parameter    ap_ST_fsm_state14 = 47'b10000000000000;
parameter    ap_ST_fsm_state15 = 47'b100000000000000;
parameter    ap_ST_fsm_state16 = 47'b1000000000000000;
parameter    ap_ST_fsm_state17 = 47'b10000000000000000;
parameter    ap_ST_fsm_state18 = 47'b100000000000000000;
parameter    ap_ST_fsm_state19 = 47'b1000000000000000000;
parameter    ap_ST_fsm_state20 = 47'b10000000000000000000;
parameter    ap_ST_fsm_state21 = 47'b100000000000000000000;
parameter    ap_ST_fsm_state22 = 47'b1000000000000000000000;
parameter    ap_ST_fsm_state23 = 47'b10000000000000000000000;
parameter    ap_ST_fsm_state24 = 47'b100000000000000000000000;
parameter    ap_ST_fsm_state25 = 47'b1000000000000000000000000;
parameter    ap_ST_fsm_state26 = 47'b10000000000000000000000000;
parameter    ap_ST_fsm_state27 = 47'b100000000000000000000000000;
parameter    ap_ST_fsm_state28 = 47'b1000000000000000000000000000;
parameter    ap_ST_fsm_state29 = 47'b10000000000000000000000000000;
parameter    ap_ST_fsm_state30 = 47'b100000000000000000000000000000;
parameter    ap_ST_fsm_state31 = 47'b1000000000000000000000000000000;
parameter    ap_ST_fsm_state32 = 47'b10000000000000000000000000000000;
parameter    ap_ST_fsm_state33 = 47'b100000000000000000000000000000000;
parameter    ap_ST_fsm_state34 = 47'b1000000000000000000000000000000000;
parameter    ap_ST_fsm_state35 = 47'b10000000000000000000000000000000000;
parameter    ap_ST_fsm_state36 = 47'b100000000000000000000000000000000000;
parameter    ap_ST_fsm_state37 = 47'b1000000000000000000000000000000000000;
parameter    ap_ST_fsm_state38 = 47'b10000000000000000000000000000000000000;
parameter    ap_ST_fsm_state39 = 47'b100000000000000000000000000000000000000;
parameter    ap_ST_fsm_state40 = 47'b1000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state41 = 47'b10000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state42 = 47'b100000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state43 = 47'b1000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state44 = 47'b10000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state45 = 47'b100000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state46 = 47'b1000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state47 = 47'b10000000000000000000000000000000000000000000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv32_4 = 32'b100;
parameter    ap_const_lv32_B = 32'b1011;
parameter    ap_const_lv32_24 = 32'b100100;
parameter    ap_const_lv32_26 = 32'b100110;
parameter    ap_const_lv32_2A = 32'b101010;
parameter    ap_const_lv32_2B = 32'b101011;
parameter    ap_const_lv32_2C = 32'b101100;
parameter    ap_const_lv32_5 = 32'b101;
parameter    ap_const_lv32_19 = 32'b11001;
parameter    ap_const_lv32_1F = 32'b11111;
parameter    ap_const_lv32_7 = 32'b111;
parameter    ap_const_lv32_9 = 32'b1001;
parameter    ap_const_lv32_13 = 32'b10011;
parameter    ap_const_lv32_25 = 32'b100101;
parameter    ap_const_lv32_A = 32'b1010;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv32_6 = 32'b110;
parameter    ap_const_lv32_8 = 32'b1000;
parameter    ap_const_lv32_C = 32'b1100;
parameter    ap_const_lv32_D = 32'b1101;
parameter    ap_const_lv32_E = 32'b1110;
parameter    ap_const_lv32_10 = 32'b10000;
parameter    ap_const_lv32_12 = 32'b10010;
parameter    ap_const_lv32_14 = 32'b10100;
parameter    ap_const_lv32_16 = 32'b10110;
parameter    ap_const_lv32_18 = 32'b11000;
parameter    ap_const_lv32_1A = 32'b11010;
parameter    ap_const_lv32_1C = 32'b11100;
parameter    ap_const_lv32_1E = 32'b11110;
parameter    ap_const_lv32_20 = 32'b100000;
parameter    ap_const_lv32_22 = 32'b100010;
parameter    ap_const_lv32_23 = 32'b100011;
parameter    ap_const_lv32_29 = 32'b101001;
parameter    ap_const_lv32_11 = 32'b10001;
parameter    ap_const_lv32_17 = 32'b10111;
parameter    ap_const_lv32_1D = 32'b11101;
parameter    ap_const_lv32_27 = 32'b100111;
parameter    ap_const_lv32_28 = 32'b101000;
parameter    ap_const_lv32_2D = 32'b101101;
parameter    ap_const_lv32_2E = 32'b101110;
parameter    ap_const_lv6_1 = 6'b1;
parameter    ap_const_lv6_3 = 6'b11;
parameter    ap_const_lv32_3F = 32'b111111;
parameter    ap_const_lv32_FFFFFF80 = 32'b11111111111111111111111110000000;
parameter    ap_const_lv32_80 = 32'b10000000;
parameter    ap_const_lv8_0 = 8'b00000000;
parameter    ap_const_lv6_2 = 6'b10;
parameter    ap_const_lv6_4 = 6'b100;
parameter    ap_const_lv6_5 = 6'b101;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] dlt;
output  [6:0] dlti_address0;
output   dlti_ce0;
output   dlti_we0;
output  [31:0] dlti_d0;
input  [31:0] dlti_q0;
output  [6:0] dlti_address1;
output   dlti_ce1;
output   dlti_we1;
output  [31:0] dlti_d1;
input  [31:0] dlti_q1;
input  [6:0] dlti_offset;
input  [6:0] bli_offset;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[6:0] dlti_address0;
reg dlti_ce0;
reg dlti_we0;
reg[31:0] dlti_d0;
reg[6:0] dlti_address1;
reg dlti_ce1;
reg dlti_we1;
reg[31:0] dlti_d1;

(* fsm_encoding = "none" *) reg   [46:0] ap_CS_fsm;
wire   [0:0] ap_CS_fsm_state1;
reg  signed [31:0] reg_252;
wire   [0:0] ap_CS_fsm_state2;
wire   [0:0] ap_CS_fsm_state5;
wire   [0:0] ap_CS_fsm_state12;
wire   [0:0] ap_CS_fsm_state37;
wire   [0:0] ap_CS_fsm_state39;
wire   [0:0] ap_CS_fsm_state43;
wire   [0:0] ap_CS_fsm_state44;
wire   [0:0] ap_CS_fsm_state45;
reg  signed [31:0] reg_259;
wire   [0:0] ap_CS_fsm_state6;
wire   [0:0] ap_CS_fsm_state26;
wire   [0:0] ap_CS_fsm_state32;
reg  signed [31:0] reg_265;
wire   [0:0] ap_CS_fsm_state8;
wire   [0:0] ap_CS_fsm_state10;
wire   [0:0] ap_CS_fsm_state20;
wire   [0:0] ap_CS_fsm_state38;
reg   [31:0] reg_271;
wire   [0:0] ap_CS_fsm_state11;
reg   [6:0] dlti_addr_reg_1051;
wire   [0:0] tmp_fu_286_p2;
reg   [0:0] tmp_reg_1057;
reg   [6:0] bli_addr_6_reg_1061;
wire   [5:0] tmp_11_fu_292_p1;
reg   [5:0] tmp_11_reg_1066;
reg   [6:0] bli_addr_reg_1075;
wire   [5:0] tmp_2_36_fu_296_p1;
reg   [5:0] tmp_2_36_reg_1080;
reg   [6:0] bli_addr_1_reg_1088;
wire  signed [63:0] tmp_1_fu_311_p1;
reg  signed [63:0] tmp_1_reg_1093;
wire   [0:0] ap_CS_fsm_state3;
reg   [6:0] bli_addr_8_reg_1108;
wire   [0:0] ap_CS_fsm_state4;
wire   [63:0] grp_fu_318_p2;
reg   [63:0] tmp_s_reg_1113;
reg   [6:0] bli_addr_12_reg_1118;
wire   [5:0] tmp_7_fu_394_p1;
reg   [5:0] tmp_7_reg_1123;
wire   [0:0] ap_CS_fsm_state7;
wire   [0:0] ap_CS_fsm_state9;
reg   [6:0] bli_addr_10_reg_1141;
reg   [6:0] bli_addr_14_reg_1147;
wire   [63:0] grp_fu_412_p2;
reg   [63:0] tmp_1_32_reg_1152;
reg   [6:0] bli_addr_16_reg_1157;
wire   [0:0] ap_CS_fsm_state13;
reg  signed [31:0] bli_load_9_reg_1168;
wire   [0:0] ap_CS_fsm_state14;
wire   [0:0] ap_CS_fsm_state15;
wire   [63:0] grp_fu_510_p2;
reg   [63:0] tmp_2_reg_1178;
wire   [0:0] ap_CS_fsm_state17;
wire   [0:0] ap_CS_fsm_state19;
wire   [0:0] ap_CS_fsm_state21;
wire   [63:0] grp_fu_579_p2;
reg   [63:0] tmp_3_33_reg_1193;
wire   [0:0] ap_CS_fsm_state23;
wire   [0:0] ap_CS_fsm_state25;
wire   [0:0] ap_CS_fsm_state27;
wire   [63:0] grp_fu_648_p2;
reg   [63:0] tmp_4_reg_1208;
wire   [0:0] ap_CS_fsm_state29;
wire   [0:0] ap_CS_fsm_state31;
wire   [0:0] ap_CS_fsm_state33;
wire   [63:0] grp_fu_717_p2;
reg   [63:0] tmp_5_34_reg_1223;
wire   [0:0] ap_CS_fsm_state35;
wire   [5:0] tmp_16_fu_772_p1;
reg   [5:0] tmp_16_reg_1228;
wire   [0:0] ap_CS_fsm_state36;
reg   [6:0] bli_addr_2_reg_1237;
reg   [6:0] bli_addr_3_reg_1242;
reg   [6:0] bli_addr_4_reg_1247;
reg   [6:0] bli_addr_5_reg_1252;
reg   [6:0] bli_addr_17_reg_1257;
wire   [0:0] ap_CS_fsm_state42;
reg   [6:0] bli_addr_19_reg_1262;
reg   [6:0] bli_addr_20_reg_1267;
reg   [6:0] bli_addr_21_reg_1272;
wire   [63:0] dlti_offset_cast1_fu_281_p1;
wire   [63:0] bli_offset_cast_fu_275_p1;
wire   [63:0] sum13_1_cast_fu_306_p1;
wire   [63:0] sum15_1_cast_fu_329_p1;
wire   [63:0] sum15_3_cast_fu_339_p1;
wire   [63:0] sum_1_cast_fu_403_p1;
wire   [63:0] sum15_2_cast_fu_422_p1;
wire   [63:0] sum15_4_cast_fu_432_p1;
wire   [63:0] sum15_5_cast_fu_442_p1;
wire   [63:0] sum_2_cast_fu_502_p1;
wire   [63:0] sum_3_cast_fu_570_p1;
wire   [63:0] sum_4_cast_fu_639_p1;
wire   [63:0] sum_5_cast_fu_708_p1;
wire   [63:0] sum13_2_cast_fu_780_p1;
wire   [63:0] sum13_3_cast_fu_790_p1;
wire   [63:0] sum13_4_cast_fu_800_p1;
wire   [63:0] sum13_5_cast_fu_810_p1;
wire   [63:0] sum2_cast_fu_994_p1;
wire   [63:0] sum6_cast_fu_1004_p1;
wire   [63:0] sum8_cast_fu_1014_p1;
wire   [63:0] sum_cast_fu_1024_p1;
wire   [63:0] sum4_cast_fu_1034_p1;
wire   [31:0] tmp_3_fu_387_p2;
wire   [31:0] tmp_13_1_fu_490_p2;
wire   [0:0] ap_CS_fsm_state18;
wire   [31:0] tmp_13_2_fu_558_p2;
wire   [0:0] ap_CS_fsm_state24;
wire   [31:0] tmp_13_3_fu_627_p2;
wire   [0:0] ap_CS_fsm_state30;
wire   [31:0] tmp_13_4_fu_696_p2;
wire   [31:0] tmp_13_5_fu_765_p2;
wire   [0:0] ap_CS_fsm_state40;
wire   [0:0] ap_CS_fsm_state41;
wire   [0:0] ap_CS_fsm_state46;
wire   [0:0] ap_CS_fsm_state47;
wire   [5:0] sum13_1_fu_300_p2;
wire   [5:0] sum15_1_fu_324_p2;
wire   [5:0] sum15_3_fu_334_p2;
wire   [0:0] tmp_5_fu_344_p3;
wire   [39:0] p_shl1_fu_363_p3;
wire  signed [39:0] tmp_2_cast_fu_359_p1;
wire   [39:0] tmp_8_fu_371_p2;
wire   [31:0] wd3_fu_377_p4;
wire   [31:0] wd2_cast_cast_fu_351_p3;
wire   [5:0] sum_1_fu_397_p2;
wire  signed [31:0] grp_fu_412_p1;
wire   [5:0] sum15_2_fu_417_p2;
wire   [5:0] sum15_4_fu_427_p2;
wire   [5:0] sum15_5_fu_437_p2;
wire   [0:0] tmp_10_fu_447_p3;
wire   [39:0] p_shl18_1_fu_466_p3;
wire  signed [39:0] tmp_10_1_cast_fu_462_p1;
wire   [39:0] tmp_11_1_fu_474_p2;
wire   [31:0] wd3_1_fu_480_p4;
wire   [31:0] wd2_1_cast_cast_fu_454_p3;
wire   [5:0] sum_2_fu_497_p2;
wire  signed [31:0] grp_fu_510_p1;
wire   [0:0] tmp_12_fu_515_p3;
wire   [39:0] p_shl18_2_fu_534_p3;
wire  signed [39:0] tmp_10_2_cast_fu_530_p1;
wire   [39:0] tmp_11_2_fu_542_p2;
wire   [31:0] wd3_2_fu_548_p4;
wire   [31:0] wd2_2_cast_cast_fu_522_p3;
wire   [5:0] sum_3_fu_565_p2;
wire  signed [31:0] grp_fu_579_p1;
wire   [0:0] tmp_13_fu_584_p3;
wire   [39:0] p_shl18_3_fu_603_p3;
wire  signed [39:0] tmp_10_3_cast_fu_599_p1;
wire   [39:0] tmp_11_3_fu_611_p2;
wire   [31:0] wd3_3_fu_617_p4;
wire   [31:0] wd2_3_cast_cast_fu_591_p3;
wire   [5:0] sum_4_fu_634_p2;
wire  signed [31:0] grp_fu_648_p1;
wire   [0:0] tmp_14_fu_653_p3;
wire   [39:0] p_shl18_4_fu_672_p3;
wire  signed [39:0] tmp_10_4_cast_fu_668_p1;
wire   [39:0] tmp_11_4_fu_680_p2;
wire   [31:0] wd3_4_fu_686_p4;
wire   [31:0] wd2_4_cast_cast_fu_660_p3;
wire   [5:0] sum_5_fu_703_p2;
wire  signed [31:0] grp_fu_717_p1;
wire   [0:0] tmp_15_fu_722_p3;
wire   [39:0] p_shl18_5_fu_741_p3;
wire  signed [39:0] tmp_10_5_cast_fu_737_p1;
wire   [39:0] tmp_11_5_fu_749_p2;
wire   [31:0] wd3_5_fu_755_p4;
wire   [31:0] wd2_5_cast_cast_fu_729_p3;
wire   [5:0] sum13_2_fu_775_p2;
wire   [5:0] sum13_3_fu_785_p2;
wire   [5:0] sum13_4_fu_795_p2;
wire   [5:0] sum13_5_fu_805_p2;
wire   [39:0] p_shl_fu_819_p3;
wire  signed [39:0] tmp_3_cast_fu_815_p1;
wire   [39:0] tmp_4_35_fu_827_p2;
wire   [39:0] p_shl_1_fu_848_p3;
wire  signed [39:0] tmp_3_1_cast_fu_844_p1;
wire   [39:0] tmp_4_1_fu_856_p2;
wire   [39:0] p_shl_2_fu_877_p3;
wire  signed [39:0] tmp_3_2_cast_fu_873_p1;
wire   [39:0] tmp_4_2_fu_885_p2;
wire   [39:0] p_shl_3_fu_906_p3;
wire  signed [39:0] tmp_3_3_cast_fu_902_p1;
wire   [39:0] tmp_4_3_fu_914_p2;
wire   [39:0] p_shl_4_fu_935_p3;
wire  signed [39:0] tmp_3_4_cast_fu_931_p1;
wire   [39:0] tmp_4_4_fu_943_p2;
wire   [39:0] p_shl_5_fu_964_p3;
wire  signed [39:0] tmp_3_5_cast_fu_960_p1;
wire   [39:0] tmp_4_5_fu_972_p2;
wire   [5:0] sum2_fu_989_p2;
wire   [5:0] sum6_fu_999_p2;
wire   [5:0] sum8_fu_1009_p2;
wire   [5:0] sum_fu_1019_p2;
wire   [5:0] sum4_fu_1029_p2;
reg   [46:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 47'b1;
end

encode_mul_32s_32dEe #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
encode_mul_32s_32dEe_U5(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_252),
    .din1(dlt),
    .ce(1'b1),
    .dout(grp_fu_318_p2)
);

encode_mul_32s_32dEe #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
encode_mul_32s_32dEe_U6(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_265),
    .din1(grp_fu_412_p1),
    .ce(1'b1),
    .dout(grp_fu_412_p2)
);

encode_mul_32s_32dEe #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
encode_mul_32s_32dEe_U7(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(bli_load_9_reg_1168),
    .din1(grp_fu_510_p1),
    .ce(1'b1),
    .dout(grp_fu_510_p2)
);

encode_mul_32s_32dEe #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
encode_mul_32s_32dEe_U8(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_265),
    .din1(grp_fu_579_p1),
    .ce(1'b1),
    .dout(grp_fu_579_p2)
);

encode_mul_32s_32dEe #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
encode_mul_32s_32dEe_U9(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_259),
    .din1(grp_fu_648_p1),
    .ce(1'b1),
    .dout(grp_fu_648_p2)
);

encode_mul_32s_32dEe #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
encode_mul_32s_32dEe_U10(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_259),
    .din1(grp_fu_717_p1),
    .ce(1'b1),
    .dout(grp_fu_717_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state45))) begin
        reg_252 <= dlti_q1;
    end else if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state44))) begin
        reg_252 <= dlti_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state32))) begin
        reg_259 <= dlti_q0;
    end else if (((1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state6))) begin
        reg_259 <= dlti_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state38))) begin
        reg_265 <= dlti_q0;
    end else if (((1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state8))) begin
        reg_265 <= dlti_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        bli_addr_10_reg_1141[5 : 0] <= sum15_2_cast_fu_422_p1[5 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        bli_addr_12_reg_1118[5 : 0] <= sum15_3_cast_fu_339_p1[5 : 0];
        tmp_s_reg_1113 <= grp_fu_318_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        bli_addr_14_reg_1147[5 : 0] <= sum15_4_cast_fu_432_p1[5 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        bli_addr_16_reg_1157[5 : 0] <= sum15_5_cast_fu_442_p1[5 : 0];
        tmp_1_32_reg_1152 <= grp_fu_412_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state42)) begin
        bli_addr_17_reg_1257[5 : 0] <= sum2_cast_fu_994_p1[5 : 0];
        bli_addr_19_reg_1262[5 : 0] <= sum6_cast_fu_1004_p1[5 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0) & ~(tmp_fu_286_p2 == 1'b0))) begin
        bli_addr_1_reg_1088[5 : 0] <= sum13_1_cast_fu_306_p1[5 : 0];
        bli_addr_reg_1075 <= bli_offset_cast_fu_275_p1;
        tmp_2_36_reg_1080 <= tmp_2_36_fu_296_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state43)) begin
        bli_addr_20_reg_1267[5 : 0] <= sum8_cast_fu_1014_p1[5 : 0];
        bli_addr_21_reg_1272[5 : 0] <= sum_cast_fu_1024_p1[5 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        bli_addr_2_reg_1237[5 : 0] <= sum13_2_cast_fu_780_p1[5 : 0];
        bli_addr_3_reg_1242[5 : 0] <= sum13_3_cast_fu_790_p1[5 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        bli_addr_4_reg_1247[5 : 0] <= sum13_4_cast_fu_800_p1[5 : 0];
        bli_addr_5_reg_1252[5 : 0] <= sum13_5_cast_fu_810_p1[5 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0) & (tmp_fu_286_p2 == 1'b0))) begin
        bli_addr_6_reg_1061 <= bli_offset_cast_fu_275_p1;
        tmp_11_reg_1066 <= tmp_11_fu_292_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        bli_addr_8_reg_1108[5 : 0] <= sum15_1_cast_fu_329_p1[5 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        bli_load_9_reg_1168 <= dlti_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0))) begin
        dlti_addr_reg_1051 <= dlti_offset_cast1_fu_281_p1;
        tmp_reg_1057 <= tmp_fu_286_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state11))) begin
        reg_271 <= dlti_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        tmp_16_reg_1228 <= tmp_16_fu_772_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        tmp_1_reg_1093 <= tmp_1_fu_311_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        tmp_2_reg_1178 <= grp_fu_510_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        tmp_3_33_reg_1193 <= grp_fu_579_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        tmp_4_reg_1208 <= grp_fu_648_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        tmp_5_34_reg_1223 <= grp_fu_717_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        tmp_7_reg_1123 <= tmp_7_fu_394_p1;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_start) & (ap_CS_fsm_state1 == 1'b1)) | (1'b1 == ap_CS_fsm_state47))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (ap_CS_fsm_state1 == 1'b1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        dlti_address0 = dlti_addr_reg_1051;
    end else if ((1'b1 == ap_CS_fsm_state46)) begin
        dlti_address0 = bli_addr_20_reg_1267;
    end else if ((1'b1 == ap_CS_fsm_state45)) begin
        dlti_address0 = bli_addr_17_reg_1257;
    end else if ((1'b1 == ap_CS_fsm_state44)) begin
        dlti_address0 = sum4_cast_fu_1034_p1;
    end else if ((1'b1 == ap_CS_fsm_state43)) begin
        dlti_address0 = sum8_cast_fu_1014_p1;
    end else if ((1'b1 == ap_CS_fsm_state42)) begin
        dlti_address0 = sum2_cast_fu_994_p1;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        dlti_address0 = bli_addr_4_reg_1247;
    end else if ((1'b1 == ap_CS_fsm_state40)) begin
        dlti_address0 = bli_addr_2_reg_1237;
    end else if ((1'b1 == ap_CS_fsm_state39)) begin
        dlti_address0 = bli_addr_reg_1075;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        dlti_address0 = sum13_4_cast_fu_800_p1;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        dlti_address0 = sum13_2_cast_fu_780_p1;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        dlti_address0 = sum_5_cast_fu_708_p1;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        dlti_address0 = sum_4_cast_fu_639_p1;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        dlti_address0 = sum_3_cast_fu_570_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        dlti_address0 = sum_2_cast_fu_502_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        dlti_address0 = sum15_5_cast_fu_442_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        dlti_address0 = sum15_2_cast_fu_422_p1;
    end else if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state6))) begin
        dlti_address0 = bli_addr_6_reg_1061;
    end else if (((ap_CS_fsm_state1 == 1'b1) & ~(tmp_fu_286_p2 == 1'b0))) begin
        dlti_address0 = bli_offset_cast_fu_275_p1;
    end else if (((ap_CS_fsm_state1 == 1'b1) & (tmp_fu_286_p2 == 1'b0))) begin
        dlti_address0 = dlti_offset_cast1_fu_281_p1;
    end else begin
        dlti_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state46)) begin
        dlti_address1 = bli_addr_21_reg_1272;
    end else if ((1'b1 == ap_CS_fsm_state45)) begin
        dlti_address1 = bli_addr_19_reg_1262;
    end else if ((1'b1 == ap_CS_fsm_state44)) begin
        dlti_address1 = dlti_addr_reg_1051;
    end else if ((1'b1 == ap_CS_fsm_state43)) begin
        dlti_address1 = sum_cast_fu_1024_p1;
    end else if ((1'b1 == ap_CS_fsm_state42)) begin
        dlti_address1 = sum6_cast_fu_1004_p1;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        dlti_address1 = bli_addr_5_reg_1252;
    end else if ((1'b1 == ap_CS_fsm_state40)) begin
        dlti_address1 = bli_addr_3_reg_1242;
    end else if ((1'b1 == ap_CS_fsm_state39)) begin
        dlti_address1 = bli_addr_1_reg_1088;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        dlti_address1 = sum13_5_cast_fu_810_p1;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        dlti_address1 = sum13_3_cast_fu_790_p1;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        dlti_address1 = bli_addr_16_reg_1157;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        dlti_address1 = bli_addr_14_reg_1147;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        dlti_address1 = bli_addr_12_reg_1118;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        dlti_address1 = bli_addr_10_reg_1141;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        dlti_address1 = bli_addr_8_reg_1108;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        dlti_address1 = sum15_4_cast_fu_432_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        dlti_address1 = sum_1_cast_fu_403_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        dlti_address1 = sum15_3_cast_fu_339_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        dlti_address1 = sum15_1_cast_fu_329_p1;
    end else if ((ap_CS_fsm_state1 == 1'b1)) begin
        dlti_address1 = sum13_1_cast_fu_306_p1;
    end else begin
        dlti_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state11) | ((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0) & (tmp_fu_286_p2 == 1'b0)) | ((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0) & ~(tmp_fu_286_p2 == 1'b0)) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state47))) begin
        dlti_ce0 = 1'b1;
    end else begin
        dlti_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state38) | ((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0)) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state46))) begin
        dlti_ce1 = 1'b1;
    end else begin
        dlti_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        dlti_d0 = dlt;
    end else if ((1'b1 == ap_CS_fsm_state46)) begin
        dlti_d0 = reg_265;
    end else if ((1'b1 == ap_CS_fsm_state45)) begin
        dlti_d0 = reg_259;
    end else if ((1'b1 == ap_CS_fsm_state44)) begin
        dlti_d0 = reg_252;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        dlti_d0 = {{tmp_4_4_fu_943_p2[ap_const_lv32_27 : ap_const_lv32_8]}};
    end else if ((1'b1 == ap_CS_fsm_state40)) begin
        dlti_d0 = {{tmp_4_2_fu_885_p2[ap_const_lv32_27 : ap_const_lv32_8]}};
    end else if ((1'b1 == ap_CS_fsm_state39)) begin
        dlti_d0 = {{tmp_4_35_fu_827_p2[ap_const_lv32_27 : ap_const_lv32_8]}};
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        dlti_d0 = tmp_3_fu_387_p2;
    end else begin
        dlti_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state46))) begin
        dlti_d1 = reg_252;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        dlti_d1 = {{tmp_4_5_fu_972_p2[ap_const_lv32_27 : ap_const_lv32_8]}};
    end else if ((1'b1 == ap_CS_fsm_state40)) begin
        dlti_d1 = {{tmp_4_3_fu_914_p2[ap_const_lv32_27 : ap_const_lv32_8]}};
    end else if ((1'b1 == ap_CS_fsm_state39)) begin
        dlti_d1 = {{tmp_4_1_fu_856_p2[ap_const_lv32_27 : ap_const_lv32_8]}};
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        dlti_d1 = tmp_13_5_fu_765_p2;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        dlti_d1 = tmp_13_4_fu_696_p2;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        dlti_d1 = tmp_13_3_fu_627_p2;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        dlti_d1 = tmp_13_2_fu_558_p2;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        dlti_d1 = tmp_13_1_fu_490_p2;
    end else begin
        dlti_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state47))) begin
        dlti_we0 = 1'b1;
    end else begin
        dlti_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state30) | ((1'b1 == ap_CS_fsm_state36) & (tmp_reg_1057 == 1'b0)) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state46))) begin
        dlti_we1 = 1'b1;
    end else begin
        dlti_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~(ap_start == 1'b0) & ~(tmp_fu_286_p2 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state37;
            end else if ((~(ap_start == 1'b0) & (tmp_fu_286_p2 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[ap_const_lv32_0];

assign ap_CS_fsm_state10 = ap_CS_fsm[ap_const_lv32_9];

assign ap_CS_fsm_state11 = ap_CS_fsm[ap_const_lv32_A];

assign ap_CS_fsm_state12 = ap_CS_fsm[ap_const_lv32_B];

assign ap_CS_fsm_state13 = ap_CS_fsm[ap_const_lv32_C];

assign ap_CS_fsm_state14 = ap_CS_fsm[ap_const_lv32_D];

assign ap_CS_fsm_state15 = ap_CS_fsm[ap_const_lv32_E];

assign ap_CS_fsm_state17 = ap_CS_fsm[ap_const_lv32_10];

assign ap_CS_fsm_state18 = ap_CS_fsm[ap_const_lv32_11];

assign ap_CS_fsm_state19 = ap_CS_fsm[ap_const_lv32_12];

assign ap_CS_fsm_state2 = ap_CS_fsm[ap_const_lv32_1];

assign ap_CS_fsm_state20 = ap_CS_fsm[ap_const_lv32_13];

assign ap_CS_fsm_state21 = ap_CS_fsm[ap_const_lv32_14];

assign ap_CS_fsm_state23 = ap_CS_fsm[ap_const_lv32_16];

assign ap_CS_fsm_state24 = ap_CS_fsm[ap_const_lv32_17];

assign ap_CS_fsm_state25 = ap_CS_fsm[ap_const_lv32_18];

assign ap_CS_fsm_state26 = ap_CS_fsm[ap_const_lv32_19];

assign ap_CS_fsm_state27 = ap_CS_fsm[ap_const_lv32_1A];

assign ap_CS_fsm_state29 = ap_CS_fsm[ap_const_lv32_1C];

assign ap_CS_fsm_state3 = ap_CS_fsm[ap_const_lv32_2];

assign ap_CS_fsm_state30 = ap_CS_fsm[ap_const_lv32_1D];

assign ap_CS_fsm_state31 = ap_CS_fsm[ap_const_lv32_1E];

assign ap_CS_fsm_state32 = ap_CS_fsm[ap_const_lv32_1F];

assign ap_CS_fsm_state33 = ap_CS_fsm[ap_const_lv32_20];

assign ap_CS_fsm_state35 = ap_CS_fsm[ap_const_lv32_22];

assign ap_CS_fsm_state36 = ap_CS_fsm[ap_const_lv32_23];

assign ap_CS_fsm_state37 = ap_CS_fsm[ap_const_lv32_24];

assign ap_CS_fsm_state38 = ap_CS_fsm[ap_const_lv32_25];

assign ap_CS_fsm_state39 = ap_CS_fsm[ap_const_lv32_26];

assign ap_CS_fsm_state4 = ap_CS_fsm[ap_const_lv32_3];

assign ap_CS_fsm_state40 = ap_CS_fsm[ap_const_lv32_27];

assign ap_CS_fsm_state41 = ap_CS_fsm[ap_const_lv32_28];

assign ap_CS_fsm_state42 = ap_CS_fsm[ap_const_lv32_29];

assign ap_CS_fsm_state43 = ap_CS_fsm[ap_const_lv32_2A];

assign ap_CS_fsm_state44 = ap_CS_fsm[ap_const_lv32_2B];

assign ap_CS_fsm_state45 = ap_CS_fsm[ap_const_lv32_2C];

assign ap_CS_fsm_state46 = ap_CS_fsm[ap_const_lv32_2D];

assign ap_CS_fsm_state47 = ap_CS_fsm[ap_const_lv32_2E];

assign ap_CS_fsm_state5 = ap_CS_fsm[ap_const_lv32_4];

assign ap_CS_fsm_state6 = ap_CS_fsm[ap_const_lv32_5];

assign ap_CS_fsm_state7 = ap_CS_fsm[ap_const_lv32_6];

assign ap_CS_fsm_state8 = ap_CS_fsm[ap_const_lv32_7];

assign ap_CS_fsm_state9 = ap_CS_fsm[ap_const_lv32_8];

assign bli_offset_cast_fu_275_p1 = bli_offset;

assign dlti_offset_cast1_fu_281_p1 = dlti_offset;

assign grp_fu_412_p1 = tmp_1_reg_1093;

assign grp_fu_510_p1 = tmp_1_reg_1093;

assign grp_fu_579_p1 = tmp_1_reg_1093;

assign grp_fu_648_p1 = tmp_1_reg_1093;

assign grp_fu_717_p1 = tmp_1_reg_1093;

assign p_shl18_1_fu_466_p3 = {{reg_252}, {ap_const_lv8_0}};

assign p_shl18_2_fu_534_p3 = {{reg_265}, {ap_const_lv8_0}};

assign p_shl18_3_fu_603_p3 = {{reg_259}, {ap_const_lv8_0}};

assign p_shl18_4_fu_672_p3 = {{reg_271}, {ap_const_lv8_0}};

assign p_shl18_5_fu_741_p3 = {{reg_252}, {ap_const_lv8_0}};

assign p_shl1_fu_363_p3 = {{dlti_q0}, {ap_const_lv8_0}};

assign p_shl_1_fu_848_p3 = {{reg_259}, {ap_const_lv8_0}};

assign p_shl_2_fu_877_p3 = {{reg_265}, {ap_const_lv8_0}};

assign p_shl_3_fu_906_p3 = {{reg_271}, {ap_const_lv8_0}};

assign p_shl_4_fu_935_p3 = {{reg_252}, {ap_const_lv8_0}};

assign p_shl_5_fu_964_p3 = {{reg_259}, {ap_const_lv8_0}};

assign p_shl_fu_819_p3 = {{reg_252}, {ap_const_lv8_0}};

assign sum13_1_cast_fu_306_p1 = sum13_1_fu_300_p2;

assign sum13_1_fu_300_p2 = (ap_const_lv6_1 + tmp_2_36_fu_296_p1);

assign sum13_2_cast_fu_780_p1 = sum13_2_fu_775_p2;

assign sum13_2_fu_775_p2 = (ap_const_lv6_2 + tmp_2_36_reg_1080);

assign sum13_3_cast_fu_790_p1 = sum13_3_fu_785_p2;

assign sum13_3_fu_785_p2 = (ap_const_lv6_3 + tmp_2_36_reg_1080);

assign sum13_4_cast_fu_800_p1 = sum13_4_fu_795_p2;

assign sum13_4_fu_795_p2 = (ap_const_lv6_4 + tmp_2_36_reg_1080);

assign sum13_5_cast_fu_810_p1 = sum13_5_fu_805_p2;

assign sum13_5_fu_805_p2 = (ap_const_lv6_5 + tmp_2_36_reg_1080);

assign sum15_1_cast_fu_329_p1 = sum15_1_fu_324_p2;

assign sum15_1_fu_324_p2 = (ap_const_lv6_1 + tmp_11_reg_1066);

assign sum15_2_cast_fu_422_p1 = sum15_2_fu_417_p2;

assign sum15_2_fu_417_p2 = (ap_const_lv6_2 + tmp_11_reg_1066);

assign sum15_3_cast_fu_339_p1 = sum15_3_fu_334_p2;

assign sum15_3_fu_334_p2 = (ap_const_lv6_3 + tmp_11_reg_1066);

assign sum15_4_cast_fu_432_p1 = sum15_4_fu_427_p2;

assign sum15_4_fu_427_p2 = (ap_const_lv6_4 + tmp_11_reg_1066);

assign sum15_5_cast_fu_442_p1 = sum15_5_fu_437_p2;

assign sum15_5_fu_437_p2 = (ap_const_lv6_5 + tmp_11_reg_1066);

assign sum2_cast_fu_994_p1 = sum2_fu_989_p2;

assign sum2_fu_989_p2 = (ap_const_lv6_4 + tmp_16_reg_1228);

assign sum4_cast_fu_1034_p1 = sum4_fu_1029_p2;

assign sum4_fu_1029_p2 = (ap_const_lv6_5 + tmp_16_reg_1228);

assign sum6_cast_fu_1004_p1 = sum6_fu_999_p2;

assign sum6_fu_999_p2 = (ap_const_lv6_3 + tmp_16_reg_1228);

assign sum8_cast_fu_1014_p1 = sum8_fu_1009_p2;

assign sum8_fu_1009_p2 = (ap_const_lv6_2 + tmp_16_reg_1228);

assign sum_1_cast_fu_403_p1 = sum_1_fu_397_p2;

assign sum_1_fu_397_p2 = (ap_const_lv6_1 + tmp_7_fu_394_p1);

assign sum_2_cast_fu_502_p1 = sum_2_fu_497_p2;

assign sum_2_fu_497_p2 = (ap_const_lv6_2 + tmp_7_reg_1123);

assign sum_3_cast_fu_570_p1 = sum_3_fu_565_p2;

assign sum_3_fu_565_p2 = (ap_const_lv6_3 + tmp_7_reg_1123);

assign sum_4_cast_fu_639_p1 = sum_4_fu_634_p2;

assign sum_4_fu_634_p2 = (ap_const_lv6_4 + tmp_7_reg_1123);

assign sum_5_cast_fu_708_p1 = sum_5_fu_703_p2;

assign sum_5_fu_703_p2 = (ap_const_lv6_5 + tmp_7_reg_1123);

assign sum_cast_fu_1024_p1 = sum_fu_1019_p2;

assign sum_fu_1019_p2 = (ap_const_lv6_1 + tmp_16_reg_1228);

assign tmp_10_1_cast_fu_462_p1 = reg_252;

assign tmp_10_2_cast_fu_530_p1 = reg_265;

assign tmp_10_3_cast_fu_599_p1 = reg_259;

assign tmp_10_4_cast_fu_668_p1 = $signed(reg_271);

assign tmp_10_5_cast_fu_737_p1 = reg_252;

assign tmp_10_fu_447_p3 = tmp_1_32_reg_1152[ap_const_lv32_3F];

assign tmp_11_1_fu_474_p2 = ($signed(p_shl18_1_fu_466_p3) - $signed(tmp_10_1_cast_fu_462_p1));

assign tmp_11_2_fu_542_p2 = ($signed(p_shl18_2_fu_534_p3) - $signed(tmp_10_2_cast_fu_530_p1));

assign tmp_11_3_fu_611_p2 = ($signed(p_shl18_3_fu_603_p3) - $signed(tmp_10_3_cast_fu_599_p1));

assign tmp_11_4_fu_680_p2 = ($signed(p_shl18_4_fu_672_p3) - $signed(tmp_10_4_cast_fu_668_p1));

assign tmp_11_5_fu_749_p2 = ($signed(p_shl18_5_fu_741_p3) - $signed(tmp_10_5_cast_fu_737_p1));

assign tmp_11_fu_292_p1 = bli_offset[5:0];

assign tmp_12_fu_515_p3 = tmp_2_reg_1178[ap_const_lv32_3F];

assign tmp_13_1_fu_490_p2 = (wd3_1_fu_480_p4 + wd2_1_cast_cast_fu_454_p3);

assign tmp_13_2_fu_558_p2 = (wd3_2_fu_548_p4 + wd2_2_cast_cast_fu_522_p3);

assign tmp_13_3_fu_627_p2 = (wd3_3_fu_617_p4 + wd2_3_cast_cast_fu_591_p3);

assign tmp_13_4_fu_696_p2 = (wd3_4_fu_686_p4 + wd2_4_cast_cast_fu_660_p3);

assign tmp_13_5_fu_765_p2 = (wd3_5_fu_755_p4 + wd2_5_cast_cast_fu_729_p3);

assign tmp_13_fu_584_p3 = tmp_3_33_reg_1193[ap_const_lv32_3F];

assign tmp_14_fu_653_p3 = tmp_4_reg_1208[ap_const_lv32_3F];

assign tmp_15_fu_722_p3 = tmp_5_34_reg_1223[ap_const_lv32_3F];

assign tmp_16_fu_772_p1 = dlti_offset[5:0];

assign tmp_1_fu_311_p1 = $signed(dlt);

assign tmp_2_36_fu_296_p1 = bli_offset[5:0];

assign tmp_2_cast_fu_359_p1 = $signed(dlti_q0);

assign tmp_3_1_cast_fu_844_p1 = reg_259;

assign tmp_3_2_cast_fu_873_p1 = reg_265;

assign tmp_3_3_cast_fu_902_p1 = $signed(reg_271);

assign tmp_3_4_cast_fu_931_p1 = reg_252;

assign tmp_3_5_cast_fu_960_p1 = reg_259;

assign tmp_3_cast_fu_815_p1 = reg_252;

assign tmp_3_fu_387_p2 = (wd3_fu_377_p4 + wd2_cast_cast_fu_351_p3);

assign tmp_4_1_fu_856_p2 = ($signed(p_shl_1_fu_848_p3) - $signed(tmp_3_1_cast_fu_844_p1));

assign tmp_4_2_fu_885_p2 = ($signed(p_shl_2_fu_877_p3) - $signed(tmp_3_2_cast_fu_873_p1));

assign tmp_4_35_fu_827_p2 = ($signed(p_shl_fu_819_p3) - $signed(tmp_3_cast_fu_815_p1));

assign tmp_4_3_fu_914_p2 = ($signed(p_shl_3_fu_906_p3) - $signed(tmp_3_3_cast_fu_902_p1));

assign tmp_4_4_fu_943_p2 = ($signed(p_shl_4_fu_935_p3) - $signed(tmp_3_4_cast_fu_931_p1));

assign tmp_4_5_fu_972_p2 = ($signed(p_shl_5_fu_964_p3) - $signed(tmp_3_5_cast_fu_960_p1));

assign tmp_5_fu_344_p3 = tmp_s_reg_1113[ap_const_lv32_3F];

assign tmp_7_fu_394_p1 = dlti_offset[5:0];

assign tmp_8_fu_371_p2 = ($signed(p_shl1_fu_363_p3) - $signed(tmp_2_cast_fu_359_p1));

assign tmp_fu_286_p2 = ((dlt == ap_const_lv32_0) ? 1'b1 : 1'b0);

assign wd2_1_cast_cast_fu_454_p3 = ((tmp_10_fu_447_p3[0:0] === 1'b1) ? ap_const_lv32_FFFFFF80 : ap_const_lv32_80);

assign wd2_2_cast_cast_fu_522_p3 = ((tmp_12_fu_515_p3[0:0] === 1'b1) ? ap_const_lv32_FFFFFF80 : ap_const_lv32_80);

assign wd2_3_cast_cast_fu_591_p3 = ((tmp_13_fu_584_p3[0:0] === 1'b1) ? ap_const_lv32_FFFFFF80 : ap_const_lv32_80);

assign wd2_4_cast_cast_fu_660_p3 = ((tmp_14_fu_653_p3[0:0] === 1'b1) ? ap_const_lv32_FFFFFF80 : ap_const_lv32_80);

assign wd2_5_cast_cast_fu_729_p3 = ((tmp_15_fu_722_p3[0:0] === 1'b1) ? ap_const_lv32_FFFFFF80 : ap_const_lv32_80);

assign wd2_cast_cast_fu_351_p3 = ((tmp_5_fu_344_p3[0:0] === 1'b1) ? ap_const_lv32_FFFFFF80 : ap_const_lv32_80);

assign wd3_1_fu_480_p4 = {{tmp_11_1_fu_474_p2[ap_const_lv32_27 : ap_const_lv32_8]}};

assign wd3_2_fu_548_p4 = {{tmp_11_2_fu_542_p2[ap_const_lv32_27 : ap_const_lv32_8]}};

assign wd3_3_fu_617_p4 = {{tmp_11_3_fu_611_p2[ap_const_lv32_27 : ap_const_lv32_8]}};

assign wd3_4_fu_686_p4 = {{tmp_11_4_fu_680_p2[ap_const_lv32_27 : ap_const_lv32_8]}};

assign wd3_5_fu_755_p4 = {{tmp_11_5_fu_749_p2[ap_const_lv32_27 : ap_const_lv32_8]}};

assign wd3_fu_377_p4 = {{tmp_8_fu_371_p2[ap_const_lv32_27 : ap_const_lv32_8]}};

always @ (posedge ap_clk) begin
    bli_addr_1_reg_1088[6] <= 1'b0;
    bli_addr_8_reg_1108[6] <= 1'b0;
    bli_addr_12_reg_1118[6] <= 1'b0;
    bli_addr_10_reg_1141[6] <= 1'b0;
    bli_addr_14_reg_1147[6] <= 1'b0;
    bli_addr_16_reg_1157[6] <= 1'b0;
    bli_addr_2_reg_1237[6] <= 1'b0;
    bli_addr_3_reg_1242[6] <= 1'b0;
    bli_addr_4_reg_1247[6] <= 1'b0;
    bli_addr_5_reg_1252[6] <= 1'b0;
    bli_addr_17_reg_1257[6] <= 1'b0;
    bli_addr_19_reg_1262[6] <= 1'b0;
    bli_addr_20_reg_1267[6] <= 1'b0;
    bli_addr_21_reg_1272[6] <= 1'b0;
end

endmodule //upzero
