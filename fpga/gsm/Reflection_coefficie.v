/* verilator lint_off UNUSED */
/* verilator lint_off WIDTH */
/* verilator lint_off DECLFILENAME */
/* verilator lint_off STMTDLY */
/* verilator lint_off UNDRIVEN */
// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.4
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module Reflection_coefficie (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        L_ACF_0_read,
        L_ACF_1_read,
        L_ACF_2_read,
        L_ACF_3_read,
        L_ACF_4_read,
        L_ACF_5_read,
        L_ACF_6_read,
        L_ACF_7_read,
        L_ACF_8_read,
        y_address0,
        y_ce0,
        y_we0,
        y_d0,
        y_address1,
        y_ce1,
        y_we1,
        y_d1
);

parameter    ap_ST_fsm_state1 = 15'b1;
parameter    ap_ST_fsm_state2 = 15'b10;
parameter    ap_ST_fsm_state3 = 15'b100;
parameter    ap_ST_fsm_state4 = 15'b1000;
parameter    ap_ST_fsm_state5 = 15'b10000;
parameter    ap_ST_fsm_state6 = 15'b100000;
parameter    ap_ST_fsm_state7 = 15'b1000000;
parameter    ap_ST_fsm_state8 = 15'b10000000;
parameter    ap_ST_fsm_state9 = 15'b100000000;
parameter    ap_ST_fsm_state10 = 15'b1000000000;
parameter    ap_ST_fsm_state11 = 15'b10000000000;
parameter    ap_ST_fsm_state12 = 15'b100000000000;
parameter    ap_ST_fsm_state13 = 15'b1000000000000;
parameter    ap_ST_fsm_state14 = 15'b10000000000000;
parameter    ap_ST_fsm_state15 = 15'b100000000000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv32_7 = 32'b111;
parameter    ap_const_lv32_8 = 32'b1000;
parameter    ap_const_lv32_9 = 32'b1001;
parameter    ap_const_lv32_A = 32'b1010;
parameter    ap_const_lv16_0 = 16'b0000000000000000;
parameter    ap_const_lv32_5 = 32'b101;
parameter    ap_const_lv4_F = 4'b1111;
parameter    ap_const_lv32_B = 32'b1011;
parameter    ap_const_lv64_A0 = 64'b10100000;
parameter    ap_const_lv64_A1 = 64'b10100001;
parameter    ap_const_lv64_1 = 64'b1;
parameter    ap_const_lv64_0 = 64'b0000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv64_2 = 64'b10;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv64_3 = 64'b11;
parameter    ap_const_lv64_4 = 64'b100;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv64_5 = 64'b101;
parameter    ap_const_lv64_6 = 64'b110;
parameter    ap_const_lv32_4 = 32'b100;
parameter    ap_const_lv64_7 = 64'b111;
parameter    ap_const_lv64_8 = 64'b1000;
parameter    ap_const_lv64_A2 = 64'b10100010;
parameter    ap_const_lv32_C = 32'b1100;
parameter    ap_const_lv64_A3 = 64'b10100011;
parameter    ap_const_lv64_A4 = 64'b10100100;
parameter    ap_const_lv32_D = 32'b1101;
parameter    ap_const_lv64_A5 = 64'b10100101;
parameter    ap_const_lv64_A6 = 64'b10100110;
parameter    ap_const_lv32_E = 32'b1110;
parameter    ap_const_lv64_A7 = 64'b10100111;
parameter    ap_const_lv32_6 = 32'b110;
parameter    ap_const_lv16_8000 = 16'b1000000000000000;
parameter    ap_const_lv32_1F = 32'b11111;
parameter    ap_const_lv32_FFFFFFFF = 32'b11111111111111111111111111111111;
parameter    ap_const_lv16_FFFF = 16'b1111111111111111;
parameter    ap_const_lv8_FF = 8'b11111111;
parameter    ap_const_lv8_0 = 8'b00000000;
parameter    ap_const_lv24_FFFFFF = 24'b111111111111111111111111;
parameter    ap_const_lv24_0 = 24'b000000000000000000000000;
parameter    ap_const_lv32_10 = 32'b10000;
parameter    ap_const_lv32_18 = 32'b11000;
parameter    ap_const_lv32_F = 32'b1111;
parameter    ap_const_lv32_17 = 32'b10111;
parameter    ap_const_lv32_C0000001 = 32'b11000000000000000000000000000001;
parameter    ap_const_lv4_7 = 4'b111;
parameter    ap_const_lv5_17 = 5'b10111;
parameter    ap_const_lv5_F = 5'b1111;
parameter    ap_const_lv5_0 = 5'b00000;
parameter    ap_const_lv16_1 = 16'b1;
parameter    ap_const_lv15_0 = 15'b000000000000000;
parameter    ap_const_lv15_7FFF = 15'b111111111111111;
parameter    ap_const_lv4_0 = 4'b0000;
parameter    ap_const_lv9_A0 = 9'b10100000;
parameter    ap_const_lv32_1E = 32'b11110;
parameter    ap_const_lv16_7FFF = 16'b111111111111111;
parameter    ap_const_lv17_18000 = 17'b11000000000000000;
parameter    ap_const_lv2_1 = 2'b1;
parameter    ap_const_lv32_4000 = 32'b100000000000000;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] L_ACF_0_read;
input  [31:0] L_ACF_1_read;
input  [31:0] L_ACF_2_read;
input  [31:0] L_ACF_3_read;
input  [31:0] L_ACF_4_read;
input  [31:0] L_ACF_5_read;
input  [31:0] L_ACF_6_read;
input  [31:0] L_ACF_7_read;
input  [31:0] L_ACF_8_read;
output  [7:0] y_address0;
output   y_ce0;
output   y_we0;
output  [15:0] y_d0;
output  [7:0] y_address1;
output   y_ce1;
output   y_we1;
output  [15:0] y_d1;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[7:0] y_address0;
reg y_ce0;
reg y_we0;
reg[15:0] y_d0;
reg[7:0] y_address1;
reg y_ce1;
reg y_we1;

(* fsm_encoding = "none" *) reg   [14:0] ap_CS_fsm;
wire   [0:0] ap_CS_fsm_state1;
wire   [7:0] bitoff_address0;
reg    bitoff_ce0;
wire   [3:0] bitoff_q0;
wire   [7:0] bitoff_address1;
reg    bitoff_ce1;
wire   [3:0] bitoff_q1;
wire   [7:0] bitoff_address2;
reg    bitoff_ce2;
wire   [3:0] bitoff_q2;
wire   [7:0] bitoff_address3;
reg    bitoff_ce3;
wire   [3:0] bitoff_q3;
wire   [0:0] tmp_fu_638_p2;
reg   [0:0] tmp_reg_1691;
wire   [0:0] icmp_fu_730_p2;
reg   [0:0] icmp_reg_1695;
wire   [0:0] icmp1_fu_746_p2;
reg   [0:0] icmp1_reg_1701;
wire   [0:0] icmp2_fu_762_p2;
reg   [0:0] icmp2_reg_1707;
reg   [15:0] tmp_53_2_reg_1732;
wire   [0:0] ap_CS_fsm_state2;
reg   [15:0] tmp_53_3_reg_1738;
reg   [15:0] tmp_53_4_reg_1744;
reg   [15:0] tmp_53_5_reg_1750;
reg   [15:0] tmp_53_6_reg_1756;
reg   [15:0] tmp_53_7_reg_1762;
reg   [15:0] tmp_53_8_reg_1768;
wire   [3:0] P_addr_reg_1773;
wire   [3:0] P_addr_1_reg_1779;
wire   [15:0] P_q1;
reg  signed [15:0] temp_1_reg_1784;
wire   [0:0] ap_CS_fsm_state8;
wire   [15:0] r_3_fu_1118_p2;
reg   [15:0] r_3_reg_1795;
wire   [15:0] tmp_39_i_cast_fu_1142_p1;
wire   [0:0] tmp_25_fu_1110_p3;
wire  signed [15:0] P_q0;
reg   [15:0] L_denum_reg_1805;
wire   [0:0] ap_CS_fsm_state9;
wire   [0:0] tmp_12_fu_1146_p2;
reg   [0:0] tmp_12_reg_1810;
wire  signed [31:0] tmp_i1_fu_1152_p1;
wire  signed [31:0] L_denum_i_fu_1156_p1;
reg  signed [31:0] L_denum_i_reg_1819;
wire  signed [16:0] L_denum_i_cast_fu_1160_p1;
reg  signed [16:0] L_denum_i_cast_reg_1825;
wire   [0:0] tmp_i2_fu_1164_p2;
reg   [0:0] tmp_i2_reg_1830;
wire   [3:0] k_fu_1170_p2;
wire   [0:0] ap_CS_fsm_state10;
wire   [31:0] L_num_3_fu_1198_p3;
wire   [0:0] tmp_32_i_fu_1176_p2;
wire   [15:0] div_fu_1216_p3;
wire   [0:0] tmp_i3_fu_1265_p2;
reg   [0:0] tmp_i3_reg_1855;
wire   [0:0] tmp_17_fu_1259_p2;
wire  signed [31:0] tmp_24_i_fu_1280_p1;
reg  signed [31:0] tmp_24_i_reg_1861;
wire   [31:0] tmp_19_fu_1360_p2;
reg   [31:0] tmp_19_reg_1867;
wire   [15:0] r_fu_1372_p2;
wire   [0:0] exitcond_fu_1366_p2;
wire   [31:0] i_1_fu_1393_p2;
wire  signed [63:0] tmp_21_fu_1404_p1;
reg  signed [63:0] tmp_21_reg_1888;
wire   [0:0] ap_CS_fsm_state11;
wire   [0:0] tmp_20_fu_1399_p2;
reg   [3:0] K_addr_1_reg_1893;
wire   [31:0] m_1_fu_1409_p2;
reg   [31:0] m_1_reg_1899;
wire   [31:0] n_fu_1420_p2;
reg   [3:0] P_address0;
reg    P_ce0;
reg    P_we0;
reg   [15:0] P_d0;
reg   [3:0] P_address1;
reg    P_ce1;
reg    P_we1;
reg   [15:0] P_d1;
reg   [3:0] K_address0;
reg    K_ce0;
reg    K_we0;
reg   [15:0] K_d0;
reg   [3:0] K_address1;
reg    K_ce1;
reg    K_we1;
reg   [15:0] K_d1;
wire  signed [15:0] K_q1;
reg   [15:0] r_1_reg_525;
wire   [0:0] ap_CS_fsm_state6;
reg   [31:0] i_reg_537;
reg   [15:0] temp_6_reg_549;
reg   [31:0] L_num_i_reg_558;
reg   [15:0] div_i_reg_567;
reg   [3:0] k_i_reg_578;
reg   [15:0] p_0_i_phi_fu_593_p4;
reg   [15:0] p_0_i_reg_589;
reg   [15:0] r_2_reg_601;
reg   [31:0] i_4_reg_611;
reg   [31:0] m_reg_621;
wire   [0:0] ap_CS_fsm_state12;
wire   [63:0] tmp_8_i_fu_778_p1;
wire   [63:0] tmp_11_i_fu_793_p1;
wire   [63:0] tmp_15_i_fu_798_p1;
wire   [63:0] tmp_20_i_fu_813_p1;
wire   [0:0] ap_CS_fsm_state3;
wire   [0:0] ap_CS_fsm_state4;
wire   [0:0] ap_CS_fsm_state5;
wire   [63:0] sum5_cast_fu_1234_p1;
wire  signed [63:0] sum3_cast_fu_1388_p1;
wire  signed [63:0] tmp_22_fu_1415_p1;
wire   [0:0] ap_CS_fsm_state13;
wire   [0:0] ap_CS_fsm_state14;
wire   [0:0] ap_CS_fsm_state15;
wire  signed [15:0] b_assign_fu_1250_p3;
wire   [15:0] tmp_37_i2_fu_1611_p3;
wire   [0:0] ap_CS_fsm_state7;
wire   [15:0] tmp_37_i_fu_1351_p3;
wire   [15:0] tmp_37_i1_fu_1522_p3;
reg   [15:0] grp_fu_632_p0;
wire   [0:0] tmp_2_fu_644_p3;
wire   [31:0] a_lobit_i_fu_652_p3;
wire   [15:0] tmp_4_fu_660_p3;
wire   [15:0] tmp_5_fu_668_p1;
wire   [23:0] tmp_8_fu_684_p3;
wire   [23:0] tmp_9_fu_692_p1;
wire   [7:0] tmp_6_fu_672_p3;
wire   [7:0] tmp_7_fu_680_p1;
wire   [31:0] a_assign_fu_696_p2;
wire   [15:0] tmp_11_fu_720_p4;
wire   [7:0] tmp_13_fu_736_p4;
wire   [15:0] p_i_cast1_fu_702_p2;
wire   [7:0] tmp_14_fu_752_p4;
wire   [7:0] tmp_7_i_fu_768_p4;
wire   [23:0] p_i_cast2_fu_708_p2;
wire   [7:0] tmp_2_i_cast_fu_783_p4;
wire   [7:0] p_i_cast3_fu_714_p2;
wire   [7:0] tmp_18_i_cast_fu_803_p4;
wire   [3:0] tmp_i6_fu_823_p2;
wire   [3:0] tmp_13_i_fu_833_p2;
wire   [4:0] tmp_16_i_cast_fu_843_p1;
wire   [4:0] tmp_21_i_cast_fu_853_p1;
wire   [4:0] tmp_22_i_fu_857_p2;
wire   [0:0] tmp_1_i_fu_818_p2;
wire   [0:0] sel_tmp5_i_fu_867_p2;
wire   [0:0] sel_tmp8_i_fu_878_p2;
wire   [0:0] tmp8_fu_883_p2;
wire   [0:0] sel_tmp15_i_fu_894_p2;
wire   [0:0] tmp9_fu_899_p2;
wire   [4:0] tmp_17_i_fu_847_p2;
wire   [4:0] newSel_fu_910_p3;
wire   [0:0] sel_tmp20_i_fu_905_p2;
wire   [0:0] sel_tmp13_i_fu_889_p2;
wire   [4:0] tmp_13_i_cast_fu_839_p1;
wire  signed [4:0] tmp_i6_cast_fu_829_p1;
wire   [4:0] newSel1_fu_928_p3;
wire   [0:0] sel_tmp6_i_fu_873_p2;
wire   [0:0] or_cond_fu_922_p2;
wire   [5:0] newSel_cast_fu_918_p1;
wire  signed [5:0] newSel10_cast_fu_936_p1;
wire   [0:0] or_cond1_fu_940_p2;
wire   [0:0] or_cond2_fu_954_p2;
wire   [5:0] newSel2_fu_946_p3;
wire   [5:0] tmp_22_i_cast_fu_863_p1;
wire   [5:0] temp_fu_960_p3;
wire  signed [31:0] tmp_s_fu_968_p1;
wire   [31:0] tmp_1_fu_972_p2;
wire   [31:0] tmp_51_1_fu_988_p2;
wire   [31:0] tmp_51_2_fu_1005_p2;
wire   [31:0] tmp_51_3_fu_1020_p2;
wire   [31:0] tmp_51_4_fu_1035_p2;
wire   [31:0] tmp_51_5_fu_1050_p2;
wire   [31:0] tmp_51_6_fu_1065_p2;
wire   [31:0] tmp_51_7_fu_1080_p2;
wire   [31:0] tmp_51_8_fu_1095_p2;
wire   [14:0] tmp_26_fu_1124_p1;
wire   [0:0] grp_fu_632_p2;
wire   [14:0] tmp_38_i_cast_fu_1128_p2;
wire   [14:0] tmp_39_i_fu_1134_p3;
wire   [31:0] L_num_1_fu_1182_p2;
wire   [0:0] tmp_33_i_fu_1188_p2;
wire   [31:0] L_num_2_fu_1193_p2;
wire   [14:0] tmp_29_fu_1212_p1;
wire   [0:0] not_tmp_33_i_fu_1206_p2;
wire   [8:0] tmp_30_fu_1224_p1;
wire   [8:0] sum5_fu_1228_p2;
wire   [0:0] tmp_15_fu_1239_p2;
wire   [15:0] tmp_16_fu_1244_p2;
wire  signed [31:0] grp_fu_1620_p3;
wire   [0:0] or_cond_i_fu_1271_p2;
wire   [15:0] tmp_26_i_fu_1284_p4;
wire   [15:0] temp_3_fu_1293_p3;
wire  signed [16:0] tmp_i7_cast_fu_1301_p1;
wire   [16:0] sum_fu_1305_p2;
wire   [1:0] tmp_31_fu_1316_p4;
wire   [0:0] tmp_34_i_fu_1310_p2;
wire   [0:0] icmp3_fu_1326_p2;
wire   [0:0] tmp_18_fu_1345_p2;
wire   [15:0] phitmp_i_fu_1337_p3;
wire   [15:0] tmp_36_i_fu_1332_p2;
wire   [8:0] tmp_27_fu_1378_p1;
wire   [8:0] sum3_fu_1382_p2;
wire   [0:0] tmp_i9_fu_1426_p2;
wire  signed [31:0] grp_fu_1629_p3;
wire   [0:0] or_cond_i1_fu_1432_p2;
wire   [15:0] tmp_26_i1_fu_1445_p4;
wire   [15:0] temp_4_fu_1454_p3;
wire  signed [16:0] tmp_i2_cast_fu_1466_p1;
wire  signed [16:0] tmp_i1_cast_fu_1470_p1;
wire   [16:0] sum_1_fu_1474_p2;
wire   [1:0] tmp_32_fu_1486_p4;
wire   [0:0] tmp_34_i1_fu_1480_p2;
wire   [0:0] icmp4_fu_1496_p2;
wire   [0:0] tmp_23_fu_1516_p2;
wire   [15:0] phitmp_i1_fu_1508_p3;
wire   [15:0] tmp_36_i1_fu_1502_p2;
wire   [0:0] tmp_i3_62_fu_1531_p2;
wire  signed [31:0] grp_fu_1637_p3;
wire   [0:0] or_cond_i2_fu_1537_p2;
wire   [15:0] tmp_26_i2_fu_1542_p4;
wire   [15:0] temp_5_fu_1551_p3;
wire  signed [16:0] tmp_23_i1_cast_fu_1441_p1;
wire  signed [16:0] tmp_i5_cast_fu_1559_p1;
wire   [16:0] sum_2_fu_1563_p2;
wire   [1:0] tmp_33_fu_1575_p4;
wire   [0:0] tmp_34_i2_fu_1569_p2;
wire   [0:0] icmp5_fu_1585_p2;
wire   [0:0] tmp_24_fu_1605_p2;
wire   [15:0] phitmp_i2_fu_1597_p3;
wire   [15:0] tmp_36_i2_fu_1591_p2;
wire   [15:0] grp_fu_1620_p2;
wire  signed [15:0] grp_fu_1629_p1;
wire   [15:0] grp_fu_1629_p2;
wire  signed [15:0] grp_fu_1637_p1;
wire   [15:0] grp_fu_1637_p2;
reg   [14:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 15'b1;
end

Reflection_coeffihbi #(
    .DataWidth( 4 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
bitoff_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(bitoff_address0),
    .ce0(bitoff_ce0),
    .q0(bitoff_q0),
    .address1(bitoff_address1),
    .ce1(bitoff_ce1),
    .q1(bitoff_q1),
    .address2(bitoff_address2),
    .ce2(bitoff_ce2),
    .q2(bitoff_q2),
    .address3(bitoff_address3),
    .ce3(bitoff_ce3),
    .q3(bitoff_q3)
);

Reflection_coeffiibs #(
    .DataWidth( 16 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
P_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(P_address0),
    .ce0(P_ce0),
    .we0(P_we0),
    .d0(P_d0),
    .q0(P_q0),
    .address1(P_address1),
    .ce1(P_ce1),
    .we1(P_we1),
    .d1(P_d1),
    .q1(P_q1)
);

Reflection_coeffijbC #(
    .DataWidth( 16 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
K_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(K_address0),
    .ce0(K_ce0),
    .we0(K_we0),
    .d0(K_d0),
    .address1(K_address1),
    .ce1(K_ce1),
    .we1(K_we1),
    .d1(K_d1),
    .q1(K_q1)
);

Gsm_LPC_Analysis_kbM #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
Gsm_LPC_Analysis_kbM_U1347(
    .din0(temp_1_reg_1784),
    .din1(b_assign_fu_1250_p3),
    .din2(grp_fu_1620_p2),
    .dout(grp_fu_1620_p3)
);

Gsm_LPC_Analysis_kbM #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
Gsm_LPC_Analysis_kbM_U1348(
    .din0(K_q1),
    .din1(grp_fu_1629_p1),
    .din2(grp_fu_1629_p2),
    .dout(grp_fu_1629_p3)
);

Gsm_LPC_Analysis_kbM #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
Gsm_LPC_Analysis_kbM_U1349(
    .din0(P_q0),
    .din1(grp_fu_1637_p1),
    .din2(grp_fu_1637_p2),
    .dout(grp_fu_1637_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state9) & (1'b0 == tmp_12_fu_1146_p2) & (1'b0 == tmp_i2_fu_1164_p2))) begin
        L_num_i_reg_558 <= tmp_i1_fu_1152_p1;
    end else if (((1'b1 == ap_CS_fsm_state10) & (tmp_reg_1691 == 1'b0) & (1'b0 == tmp_12_reg_1810) & (1'b0 == tmp_i2_reg_1830) & (1'b0 == tmp_32_i_fu_1176_p2))) begin
        L_num_i_reg_558 <= L_num_3_fu_1198_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state9) & (1'b0 == tmp_12_fu_1146_p2) & (1'b0 == tmp_i2_fu_1164_p2))) begin
        div_i_reg_567 <= ap_const_lv16_0;
    end else if (((1'b1 == ap_CS_fsm_state10) & (tmp_reg_1691 == 1'b0) & (1'b0 == tmp_12_reg_1810) & (1'b0 == tmp_i2_reg_1830) & (1'b0 == tmp_32_i_fu_1176_p2))) begin
        div_i_reg_567 <= div_fu_1216_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state9) & ~(1'b0 == tmp_12_fu_1146_p2))) begin
        i_4_reg_611 <= i_reg_537;
    end else if (((1'b1 == ap_CS_fsm_state10) & (tmp_reg_1691 == 1'b0) & ~(1'b0 == tmp_12_reg_1810) & (1'b0 == exitcond_fu_1366_p2))) begin
        i_4_reg_611 <= i_1_fu_1393_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        i_reg_537 <= ap_const_lv32_1;
    end else if (((1'b1 == ap_CS_fsm_state11) & ~(1'b0 == tmp_20_fu_1399_p2))) begin
        i_reg_537 <= n_fu_1420_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state9) & (1'b0 == tmp_12_fu_1146_p2) & (1'b0 == tmp_i2_fu_1164_p2))) begin
        k_i_reg_578 <= ap_const_lv4_F;
    end else if (((1'b1 == ap_CS_fsm_state10) & (tmp_reg_1691 == 1'b0) & (1'b0 == tmp_12_reg_1810) & (1'b0 == tmp_i2_reg_1830) & (1'b0 == tmp_32_i_fu_1176_p2))) begin
        k_i_reg_578 <= k_fu_1170_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        m_reg_621 <= m_1_reg_1899;
    end else if (((1'b1 == ap_CS_fsm_state10) & (((tmp_reg_1691 == 1'b0) & (1'b0 == tmp_12_reg_1810) & ~(1'b0 == tmp_i2_reg_1830) & (1'b0 == tmp_17_fu_1259_p2)) | ((tmp_reg_1691 == 1'b0) & (1'b0 == tmp_12_reg_1810) & (1'b0 == tmp_17_fu_1259_p2) & ~(1'b0 == tmp_32_i_fu_1176_p2))))) begin
        m_reg_621 <= ap_const_lv32_1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state10) & (tmp_reg_1691 == 1'b0) & (1'b0 == tmp_12_reg_1810) & (1'b0 == tmp_i2_reg_1830) & ~(1'b0 == tmp_32_i_fu_1176_p2))) begin
        p_0_i_reg_589 <= div_i_reg_567;
    end else if (((1'b1 == ap_CS_fsm_state9) & (1'b0 == tmp_12_fu_1146_p2) & ~(1'b0 == tmp_i2_fu_1164_p2))) begin
        p_0_i_reg_589 <= ap_const_lv16_0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        r_1_reg_525 <= ap_const_lv16_0;
    end else if (((1'b1 == ap_CS_fsm_state11) & ~(1'b0 == tmp_20_fu_1399_p2))) begin
        r_1_reg_525 <= r_3_reg_1795;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state9) & ~(1'b0 == tmp_12_fu_1146_p2))) begin
        r_2_reg_601 <= r_1_reg_525;
    end else if (((1'b1 == ap_CS_fsm_state10) & (tmp_reg_1691 == 1'b0) & ~(1'b0 == tmp_12_reg_1810) & (1'b0 == exitcond_fu_1366_p2))) begin
        r_2_reg_601 <= r_fu_1372_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        if ((1'b0 == tmp_25_fu_1110_p3)) begin
            temp_6_reg_549 <= P_q1;
        end else if (~(1'b0 == tmp_25_fu_1110_p3)) begin
            temp_6_reg_549 <= tmp_39_i_cast_fu_1142_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state11) & (1'b0 == tmp_20_fu_1399_p2))) begin
        K_addr_1_reg_1893 <= tmp_21_fu_1404_p1;
        m_1_reg_1899 <= m_1_fu_1409_p2;
        tmp_21_reg_1888 <= tmp_21_fu_1404_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state9) & (1'b0 == tmp_12_fu_1146_p2))) begin
        L_denum_i_cast_reg_1825 <= L_denum_i_cast_fu_1160_p1;
        L_denum_i_reg_1819 <= L_denum_i_fu_1156_p1;
        tmp_i2_reg_1830 <= tmp_i2_fu_1164_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        L_denum_reg_1805 <= P_q0;
        tmp_12_reg_1810 <= tmp_12_fu_1146_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0) & (tmp_fu_638_p2 == 1'b0))) begin
        icmp1_reg_1701 <= icmp1_fu_746_p2;
        icmp2_reg_1707 <= icmp2_fu_762_p2;
        icmp_reg_1695 <= icmp_fu_730_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        r_3_reg_1795 <= r_3_fu_1118_p2;
        temp_1_reg_1784 <= P_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state10) & (((tmp_reg_1691 == 1'b0) & (1'b0 == tmp_12_reg_1810) & ~(1'b0 == tmp_i2_reg_1830) & (1'b0 == tmp_17_fu_1259_p2)) | ((tmp_reg_1691 == 1'b0) & (1'b0 == tmp_12_reg_1810) & (1'b0 == tmp_17_fu_1259_p2) & ~(1'b0 == tmp_32_i_fu_1176_p2))))) begin
        tmp_19_reg_1867 <= tmp_19_fu_1360_p2;
        tmp_24_i_reg_1861 <= tmp_24_i_fu_1280_p1;
        tmp_i3_reg_1855 <= tmp_i3_fu_1265_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        tmp_53_2_reg_1732 <= {{tmp_51_2_fu_1005_p2[ap_const_lv32_1F : ap_const_lv32_10]}};
        tmp_53_3_reg_1738 <= {{tmp_51_3_fu_1020_p2[ap_const_lv32_1F : ap_const_lv32_10]}};
        tmp_53_4_reg_1744 <= {{tmp_51_4_fu_1035_p2[ap_const_lv32_1F : ap_const_lv32_10]}};
        tmp_53_5_reg_1750 <= {{tmp_51_5_fu_1050_p2[ap_const_lv32_1F : ap_const_lv32_10]}};
        tmp_53_6_reg_1756 <= {{tmp_51_6_fu_1065_p2[ap_const_lv32_1F : ap_const_lv32_10]}};
        tmp_53_7_reg_1762 <= {{tmp_51_7_fu_1080_p2[ap_const_lv32_1F : ap_const_lv32_10]}};
        tmp_53_8_reg_1768 <= {{tmp_51_8_fu_1095_p2[ap_const_lv32_1F : ap_const_lv32_10]}};
    end
end

always @ (posedge ap_clk) begin
    if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0))) begin
        tmp_reg_1691 <= tmp_fu_638_p2;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        K_address0 = K_addr_1_reg_1893;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        K_address0 = ap_const_lv64_7;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        K_address0 = ap_const_lv64_5;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        K_address0 = ap_const_lv64_2;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        K_address0 = ap_const_lv64_1;
    end else begin
        K_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        K_address1 = tmp_21_fu_1404_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        K_address1 = ap_const_lv64_6;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        K_address1 = ap_const_lv64_4;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        K_address1 = ap_const_lv64_3;
    end else begin
        K_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state5))) begin
        K_ce0 = 1'b1;
    end else begin
        K_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state5))) begin
        K_ce1 = 1'b1;
    end else begin
        K_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        K_d0 = tmp_37_i2_fu_1611_p3;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        K_d0 = tmp_53_7_reg_1762;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        K_d0 = tmp_53_5_reg_1750;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        K_d0 = tmp_53_2_reg_1732;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        K_d0 = {{tmp_51_1_fu_988_p2[ap_const_lv32_1F : ap_const_lv32_10]}};
    end else begin
        K_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        K_d1 = tmp_53_6_reg_1756;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        K_d1 = tmp_53_4_reg_1744;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        K_d1 = tmp_53_3_reg_1738;
    end else begin
        K_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state5))) begin
        K_we0 = 1'b1;
    end else begin
        K_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state5))) begin
        K_we1 = 1'b1;
    end else begin
        K_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        P_address0 = tmp_22_fu_1415_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        P_address0 = P_addr_reg_1773;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        P_address0 = ap_const_lv64_8;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        P_address0 = ap_const_lv64_6;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        P_address0 = ap_const_lv64_4;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        P_address0 = ap_const_lv64_2;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        P_address0 = ap_const_lv64_0;
    end else begin
        P_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        P_address1 = tmp_21_reg_1888;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        P_address1 = ap_const_lv64_0;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        P_address1 = P_addr_1_reg_1779;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        P_address1 = ap_const_lv64_7;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        P_address1 = ap_const_lv64_5;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        P_address1 = ap_const_lv64_3;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        P_address1 = ap_const_lv64_1;
    end else begin
        P_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state5))) begin
        P_ce0 = 1'b1;
    end else begin
        P_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state7))) begin
        P_ce1 = 1'b1;
    end else begin
        P_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        P_d0 = tmp_53_8_reg_1768;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        P_d0 = tmp_53_6_reg_1756;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        P_d0 = tmp_53_4_reg_1744;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        P_d0 = tmp_53_2_reg_1732;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        P_d0 = {{tmp_1_fu_972_p2[ap_const_lv32_1F : ap_const_lv32_10]}};
    end else begin
        P_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        P_d1 = tmp_37_i1_fu_1522_p3;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        P_d1 = tmp_37_i_fu_1351_p3;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        P_d1 = tmp_53_7_reg_1762;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        P_d1 = tmp_53_5_reg_1750;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        P_d1 = tmp_53_3_reg_1738;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        P_d1 = {{tmp_51_1_fu_988_p2[ap_const_lv32_1F : ap_const_lv32_10]}};
    end else begin
        P_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state5))) begin
        P_we0 = 1'b1;
    end else begin
        P_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((1'b1 == ap_CS_fsm_state10) & (((tmp_reg_1691 == 1'b0) & (1'b0 == tmp_12_reg_1810) & ~(1'b0 == tmp_i2_reg_1830) & (1'b0 == tmp_17_fu_1259_p2)) | ((tmp_reg_1691 == 1'b0) & (1'b0 == tmp_12_reg_1810) & (1'b0 == tmp_17_fu_1259_p2) & ~(1'b0 == tmp_32_i_fu_1176_p2)))) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state5))) begin
        P_we1 = 1'b1;
    end else begin
        P_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_start) & (ap_CS_fsm_state1 == 1'b1)) | ((1'b1 == ap_CS_fsm_state10) & (~(tmp_reg_1691 == 1'b0) | (~(1'b0 == tmp_12_reg_1810) & ~(1'b0 == exitcond_fu_1366_p2)) | ((1'b0 == tmp_12_reg_1810) & ~(1'b0 == tmp_i2_reg_1830) & ~(1'b0 == tmp_17_fu_1259_p2)) | ((1'b0 == tmp_12_reg_1810) & ~(1'b0 == tmp_32_i_fu_1176_p2) & ~(1'b0 == tmp_17_fu_1259_p2)))))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (ap_CS_fsm_state1 == 1'b1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) & (~(tmp_reg_1691 == 1'b0) | (~(1'b0 == tmp_12_reg_1810) & ~(1'b0 == exitcond_fu_1366_p2)) | ((1'b0 == tmp_12_reg_1810) & ~(1'b0 == tmp_i2_reg_1830) & ~(1'b0 == tmp_17_fu_1259_p2)) | ((1'b0 == tmp_12_reg_1810) & ~(1'b0 == tmp_32_i_fu_1176_p2) & ~(1'b0 == tmp_17_fu_1259_p2))))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0))) begin
        bitoff_ce0 = 1'b1;
    end else begin
        bitoff_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0))) begin
        bitoff_ce1 = 1'b1;
    end else begin
        bitoff_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0))) begin
        bitoff_ce2 = 1'b1;
    end else begin
        bitoff_ce2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0))) begin
        bitoff_ce3 = 1'b1;
    end else begin
        bitoff_ce3 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        grp_fu_632_p0 = temp_1_reg_1784;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_fu_632_p0 = P_q1;
    end else begin
        grp_fu_632_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) & (tmp_reg_1691 == 1'b0) & (1'b0 == tmp_12_reg_1810) & (1'b0 == tmp_i2_reg_1830) & ~(1'b0 == tmp_32_i_fu_1176_p2))) begin
        p_0_i_phi_fu_593_p4 = div_i_reg_567;
    end else begin
        p_0_i_phi_fu_593_p4 = p_0_i_reg_589;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        y_address0 = ap_const_lv64_A7;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        y_address0 = ap_const_lv64_A5;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        y_address0 = ap_const_lv64_A3;
    end else if (((1'b1 == ap_CS_fsm_state10) & (tmp_reg_1691 == 1'b0) & ~(1'b0 == tmp_12_reg_1810) & (1'b0 == exitcond_fu_1366_p2))) begin
        y_address0 = sum3_cast_fu_1388_p1;
    end else if (((1'b1 == ap_CS_fsm_state10) & (((tmp_reg_1691 == 1'b0) & (1'b0 == tmp_12_reg_1810) & ~(1'b0 == tmp_i2_reg_1830)) | ((tmp_reg_1691 == 1'b0) & (1'b0 == tmp_12_reg_1810) & ~(1'b0 == tmp_32_i_fu_1176_p2))))) begin
        y_address0 = sum5_cast_fu_1234_p1;
    end else if ((ap_CS_fsm_state1 == 1'b1)) begin
        y_address0 = ap_const_lv64_A0;
    end else begin
        y_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        y_address1 = ap_const_lv64_A6;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        y_address1 = ap_const_lv64_A4;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        y_address1 = ap_const_lv64_A2;
    end else if ((ap_CS_fsm_state1 == 1'b1)) begin
        y_address1 = ap_const_lv64_A1;
    end else begin
        y_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0)) | ((1'b1 == ap_CS_fsm_state10) & (tmp_reg_1691 == 1'b0) & ~(1'b0 == tmp_12_reg_1810) & (1'b0 == exitcond_fu_1366_p2)) | ((1'b1 == ap_CS_fsm_state10) & (((tmp_reg_1691 == 1'b0) & (1'b0 == tmp_12_reg_1810) & ~(1'b0 == tmp_i2_reg_1830)) | ((tmp_reg_1691 == 1'b0) & (1'b0 == tmp_12_reg_1810) & ~(1'b0 == tmp_32_i_fu_1176_p2)))) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state15))) begin
        y_ce0 = 1'b1;
    end else begin
        y_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0)) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state15))) begin
        y_ce1 = 1'b1;
    end else begin
        y_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) & (((tmp_reg_1691 == 1'b0) & (1'b0 == tmp_12_reg_1810) & ~(1'b0 == tmp_i2_reg_1830)) | ((tmp_reg_1691 == 1'b0) & (1'b0 == tmp_12_reg_1810) & ~(1'b0 == tmp_32_i_fu_1176_p2))))) begin
        y_d0 = b_assign_fu_1250_p3;
    end else if (((ap_CS_fsm_state1 == 1'b1) | ((1'b1 == ap_CS_fsm_state10) & (tmp_reg_1691 == 1'b0) & ~(1'b0 == tmp_12_reg_1810) & (1'b0 == exitcond_fu_1366_p2)) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state15))) begin
        y_d0 = ap_const_lv16_0;
    end else begin
        y_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state10) & (tmp_reg_1691 == 1'b0) & ~(1'b0 == tmp_12_reg_1810) & (1'b0 == exitcond_fu_1366_p2)) | ((1'b1 == ap_CS_fsm_state10) & (((tmp_reg_1691 == 1'b0) & (1'b0 == tmp_12_reg_1810) & ~(1'b0 == tmp_i2_reg_1830)) | ((tmp_reg_1691 == 1'b0) & (1'b0 == tmp_12_reg_1810) & ~(1'b0 == tmp_32_i_fu_1176_p2)))) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state15) | ((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0) & ~(tmp_fu_638_p2 == 1'b0)))) begin
        y_we0 = 1'b1;
    end else begin
        y_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state15) | ((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0) & ~(tmp_fu_638_p2 == 1'b0)))) begin
        y_we1 = 1'b1;
    end else begin
        y_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~(ap_start == 1'b0) & ~(tmp_fu_638_p2 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else if ((~(ap_start == 1'b0) & (tmp_fu_638_p2 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            if ((~(tmp_reg_1691 == 1'b0) | (~(1'b0 == tmp_12_reg_1810) & ~(1'b0 == exitcond_fu_1366_p2)) | ((1'b0 == tmp_12_reg_1810) & ~(1'b0 == tmp_i2_reg_1830) & ~(1'b0 == tmp_17_fu_1259_p2)) | ((1'b0 == tmp_12_reg_1810) & ~(1'b0 == tmp_32_i_fu_1176_p2) & ~(1'b0 == tmp_17_fu_1259_p2)))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else if ((((tmp_reg_1691 == 1'b0) & (1'b0 == tmp_12_reg_1810) & ~(1'b0 == tmp_i2_reg_1830) & (1'b0 == tmp_17_fu_1259_p2)) | ((tmp_reg_1691 == 1'b0) & (1'b0 == tmp_12_reg_1810) & (1'b0 == tmp_17_fu_1259_p2) & ~(1'b0 == tmp_32_i_fu_1176_p2)))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state11 : begin
            if (~(1'b0 == tmp_20_fu_1399_p2)) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign L_denum_i_cast_fu_1160_p1 = P_q0;

assign L_denum_i_fu_1156_p1 = P_q0;

assign L_num_1_fu_1182_p2 = L_num_i_reg_558 << ap_const_lv32_1;

assign L_num_2_fu_1193_p2 = ($signed(L_num_1_fu_1182_p2) - $signed(L_denum_i_reg_1819));

assign L_num_3_fu_1198_p3 = ((tmp_33_i_fu_1188_p2[0:0] === 1'b1) ? L_num_1_fu_1182_p2 : L_num_2_fu_1193_p2);

assign P_addr_1_reg_1779 = ap_const_lv64_1;

assign P_addr_reg_1773 = ap_const_lv64_0;

assign a_assign_fu_696_p2 = (a_lobit_i_fu_652_p3 ^ L_ACF_0_read);

assign a_lobit_i_fu_652_p3 = ((tmp_2_fu_644_p3[0:0] === 1'b1) ? ap_const_lv32_FFFFFFFF : ap_const_lv32_0);

assign ap_CS_fsm_state1 = ap_CS_fsm[ap_const_lv32_0];

assign ap_CS_fsm_state10 = ap_CS_fsm[ap_const_lv32_9];

assign ap_CS_fsm_state11 = ap_CS_fsm[ap_const_lv32_A];

assign ap_CS_fsm_state12 = ap_CS_fsm[ap_const_lv32_B];

assign ap_CS_fsm_state13 = ap_CS_fsm[ap_const_lv32_C];

assign ap_CS_fsm_state14 = ap_CS_fsm[ap_const_lv32_D];

assign ap_CS_fsm_state15 = ap_CS_fsm[ap_const_lv32_E];

assign ap_CS_fsm_state2 = ap_CS_fsm[ap_const_lv32_1];

assign ap_CS_fsm_state3 = ap_CS_fsm[ap_const_lv32_2];

assign ap_CS_fsm_state4 = ap_CS_fsm[ap_const_lv32_3];

assign ap_CS_fsm_state5 = ap_CS_fsm[ap_const_lv32_4];

assign ap_CS_fsm_state6 = ap_CS_fsm[ap_const_lv32_5];

assign ap_CS_fsm_state7 = ap_CS_fsm[ap_const_lv32_6];

assign ap_CS_fsm_state8 = ap_CS_fsm[ap_const_lv32_7];

assign ap_CS_fsm_state9 = ap_CS_fsm[ap_const_lv32_8];

assign b_assign_fu_1250_p3 = ((tmp_15_fu_1239_p2[0:0] === 1'b1) ? tmp_16_fu_1244_p2 : p_0_i_phi_fu_593_p4);

assign bitoff_address0 = tmp_8_i_fu_778_p1;

assign bitoff_address1 = tmp_11_i_fu_793_p1;

assign bitoff_address2 = tmp_15_i_fu_798_p1;

assign bitoff_address3 = tmp_20_i_fu_813_p1;

assign div_fu_1216_p3 = {{tmp_29_fu_1212_p1}, {not_tmp_33_i_fu_1206_p2}};

assign exitcond_fu_1366_p2 = ((i_4_reg_611 == ap_const_lv32_9) ? 1'b1 : 1'b0);

assign grp_fu_1620_p2 = ap_const_lv32_4000;

assign grp_fu_1629_p1 = tmp_24_i_reg_1861;

assign grp_fu_1629_p2 = ap_const_lv32_4000;

assign grp_fu_1637_p1 = tmp_24_i_reg_1861;

assign grp_fu_1637_p2 = ap_const_lv32_4000;

assign grp_fu_632_p2 = ((grp_fu_632_p0 == ap_const_lv16_8000) ? 1'b1 : 1'b0);

assign i_1_fu_1393_p2 = (ap_const_lv32_1 + i_4_reg_611);

assign icmp1_fu_746_p2 = ((tmp_13_fu_736_p4 != ap_const_lv8_0) ? 1'b1 : 1'b0);

assign icmp2_fu_762_p2 = ((tmp_14_fu_752_p4 == ap_const_lv8_0) ? 1'b1 : 1'b0);

assign icmp3_fu_1326_p2 = ((tmp_31_fu_1316_p4 == ap_const_lv2_1) ? 1'b1 : 1'b0);

assign icmp4_fu_1496_p2 = ((tmp_32_fu_1486_p4 == ap_const_lv2_1) ? 1'b1 : 1'b0);

assign icmp5_fu_1585_p2 = ((tmp_33_fu_1575_p4 == ap_const_lv2_1) ? 1'b1 : 1'b0);

assign icmp_fu_730_p2 = ((tmp_11_fu_720_p4 != ap_const_lv16_0) ? 1'b1 : 1'b0);

assign k_fu_1170_p2 = ($signed(k_i_reg_578) + $signed(ap_const_lv4_F));

assign m_1_fu_1409_p2 = (m_reg_621 + ap_const_lv32_1);

assign n_fu_1420_p2 = (i_reg_537 + ap_const_lv32_1);

assign newSel10_cast_fu_936_p1 = $signed(newSel1_fu_928_p3);

assign newSel1_fu_928_p3 = ((sel_tmp13_i_fu_889_p2[0:0] === 1'b1) ? tmp_13_i_cast_fu_839_p1 : tmp_i6_cast_fu_829_p1);

assign newSel2_fu_946_p3 = ((or_cond_fu_922_p2[0:0] === 1'b1) ? newSel_cast_fu_918_p1 : newSel10_cast_fu_936_p1);

assign newSel_cast_fu_918_p1 = newSel_fu_910_p3;

assign newSel_fu_910_p3 = ((tmp_1_i_fu_818_p2[0:0] === 1'b1) ? ap_const_lv5_0 : tmp_17_i_fu_847_p2);

assign not_tmp_33_i_fu_1206_p2 = (tmp_33_i_fu_1188_p2 ^ 1'b1);

assign or_cond1_fu_940_p2 = (sel_tmp13_i_fu_889_p2 | sel_tmp6_i_fu_873_p2);

assign or_cond2_fu_954_p2 = (or_cond_fu_922_p2 | or_cond1_fu_940_p2);

assign or_cond_fu_922_p2 = (tmp_1_i_fu_818_p2 | sel_tmp20_i_fu_905_p2);

assign or_cond_i1_fu_1432_p2 = (tmp_i3_reg_1855 & tmp_i9_fu_1426_p2);

assign or_cond_i2_fu_1537_p2 = (tmp_i3_reg_1855 & tmp_i3_62_fu_1531_p2);

assign or_cond_i_fu_1271_p2 = (tmp_i3_fu_1265_p2 & grp_fu_632_p2);

assign p_i_cast1_fu_702_p2 = (tmp_4_fu_660_p3 ^ tmp_5_fu_668_p1);

assign p_i_cast2_fu_708_p2 = (tmp_8_fu_684_p3 ^ tmp_9_fu_692_p1);

assign p_i_cast3_fu_714_p2 = (tmp_6_fu_672_p3 ^ tmp_7_fu_680_p1);

assign phitmp_i1_fu_1508_p3 = ((tmp_34_i1_fu_1480_p2[0:0] === 1'b1) ? ap_const_lv16_8000 : ap_const_lv16_7FFF);

assign phitmp_i2_fu_1597_p3 = ((tmp_34_i2_fu_1569_p2[0:0] === 1'b1) ? ap_const_lv16_8000 : ap_const_lv16_7FFF);

assign phitmp_i_fu_1337_p3 = ((tmp_34_i_fu_1310_p2[0:0] === 1'b1) ? ap_const_lv16_8000 : ap_const_lv16_7FFF);

assign r_3_fu_1118_p2 = (r_1_reg_525 + ap_const_lv16_1);

assign r_fu_1372_p2 = (ap_const_lv16_1 + r_2_reg_601);

assign sel_tmp13_i_fu_889_p2 = (tmp8_fu_883_p2 & icmp_reg_1695);

assign sel_tmp15_i_fu_894_p2 = (icmp_reg_1695 ^ 1'b1);

assign sel_tmp20_i_fu_905_p2 = (tmp9_fu_899_p2 & icmp2_reg_1707);

assign sel_tmp5_i_fu_867_p2 = (tmp_1_i_fu_818_p2 ^ 1'b1);

assign sel_tmp6_i_fu_873_p2 = (icmp1_reg_1701 & sel_tmp5_i_fu_867_p2);

assign sel_tmp8_i_fu_878_p2 = (icmp1_reg_1701 ^ 1'b1);

assign sum3_cast_fu_1388_p1 = $signed(sum3_fu_1382_p2);

assign sum3_fu_1382_p2 = (ap_const_lv9_A0 + tmp_27_fu_1378_p1);

assign sum5_cast_fu_1234_p1 = sum5_fu_1228_p2;

assign sum5_fu_1228_p2 = (ap_const_lv9_A0 + tmp_30_fu_1224_p1);

assign sum_1_fu_1474_p2 = ($signed(tmp_i2_cast_fu_1466_p1) + $signed(tmp_i1_cast_fu_1470_p1));

assign sum_2_fu_1563_p2 = ($signed(tmp_23_i1_cast_fu_1441_p1) + $signed(tmp_i5_cast_fu_1559_p1));

assign sum_fu_1305_p2 = ($signed(L_denum_i_cast_reg_1825) + $signed(tmp_i7_cast_fu_1301_p1));

assign temp_3_fu_1293_p3 = ((or_cond_i_fu_1271_p2[0:0] === 1'b1) ? ap_const_lv16_7FFF : tmp_26_i_fu_1284_p4);

assign temp_4_fu_1454_p3 = ((or_cond_i1_fu_1432_p2[0:0] === 1'b1) ? ap_const_lv16_7FFF : tmp_26_i1_fu_1445_p4);

assign temp_5_fu_1551_p3 = ((or_cond_i2_fu_1537_p2[0:0] === 1'b1) ? ap_const_lv16_7FFF : tmp_26_i2_fu_1542_p4);

assign temp_fu_960_p3 = ((or_cond2_fu_954_p2[0:0] === 1'b1) ? newSel2_fu_946_p3 : tmp_22_i_cast_fu_863_p1);

assign tmp8_fu_883_p2 = (sel_tmp8_i_fu_878_p2 & sel_tmp5_i_fu_867_p2);

assign tmp9_fu_899_p2 = (sel_tmp15_i_fu_894_p2 & sel_tmp5_i_fu_867_p2);

assign tmp_11_fu_720_p4 = {{a_assign_fu_696_p2[ap_const_lv32_1F : ap_const_lv32_10]}};

assign tmp_11_i_fu_793_p1 = tmp_2_i_cast_fu_783_p4;

assign tmp_12_fu_1146_p2 = (($signed(P_q0) < $signed(temp_6_reg_549)) ? 1'b1 : 1'b0);

assign tmp_13_fu_736_p4 = {{a_assign_fu_696_p2[ap_const_lv32_1F : ap_const_lv32_18]}};

assign tmp_13_i_cast_fu_839_p1 = tmp_13_i_fu_833_p2;

assign tmp_13_i_fu_833_p2 = (ap_const_lv4_7 + bitoff_q1);

assign tmp_14_fu_752_p4 = {{p_i_cast1_fu_702_p2[ap_const_lv32_F : ap_const_lv32_8]}};

assign tmp_15_fu_1239_p2 = (($signed(temp_1_reg_1784) > $signed(16'b0000000000000000)) ? 1'b1 : 1'b0);

assign tmp_15_i_fu_798_p1 = p_i_cast3_fu_714_p2;

assign tmp_16_fu_1244_p2 = (ap_const_lv16_0 - p_0_i_phi_fu_593_p4);

assign tmp_16_i_cast_fu_843_p1 = bitoff_q2;

assign tmp_17_fu_1259_p2 = ((i_reg_537 == ap_const_lv32_8) ? 1'b1 : 1'b0);

assign tmp_17_i_fu_847_p2 = ($signed(ap_const_lv5_17) + $signed(tmp_16_i_cast_fu_843_p1));

assign tmp_18_fu_1345_p2 = (tmp_34_i_fu_1310_p2 | icmp3_fu_1326_p2);

assign tmp_18_i_cast_fu_803_p4 = {{p_i_cast1_fu_702_p2[ap_const_lv32_F : ap_const_lv32_8]}};

assign tmp_19_fu_1360_p2 = (ap_const_lv32_8 - i_reg_537);

assign tmp_1_fu_972_p2 = L_ACF_0_read << tmp_s_fu_968_p1;

assign tmp_1_i_fu_818_p2 = (($signed(L_ACF_0_read) < $signed(32'b11000000000000000000000000000001)) ? 1'b1 : 1'b0);

assign tmp_20_fu_1399_p2 = (($signed(m_reg_621) > $signed(tmp_19_reg_1867)) ? 1'b1 : 1'b0);

assign tmp_20_i_fu_813_p1 = tmp_18_i_cast_fu_803_p4;

assign tmp_21_fu_1404_p1 = $signed(m_reg_621);

assign tmp_21_i_cast_fu_853_p1 = bitoff_q3;

assign tmp_22_fu_1415_p1 = $signed(m_1_fu_1409_p2);

assign tmp_22_i_cast_fu_863_p1 = tmp_22_i_fu_857_p2;

assign tmp_22_i_fu_857_p2 = (ap_const_lv5_F + tmp_21_i_cast_fu_853_p1);

assign tmp_23_fu_1516_p2 = (tmp_34_i1_fu_1480_p2 | icmp4_fu_1496_p2);

assign tmp_23_i1_cast_fu_1441_p1 = K_q1;

assign tmp_24_fu_1605_p2 = (tmp_34_i2_fu_1569_p2 | icmp5_fu_1585_p2);

assign tmp_24_i_fu_1280_p1 = b_assign_fu_1250_p3;

assign tmp_25_fu_1110_p3 = P_q1[ap_const_lv32_F];

assign tmp_26_fu_1124_p1 = P_q1[14:0];

assign tmp_26_i1_fu_1445_p4 = {{grp_fu_1629_p3[ap_const_lv32_1E : ap_const_lv32_F]}};

assign tmp_26_i2_fu_1542_p4 = {{grp_fu_1637_p3[ap_const_lv32_1E : ap_const_lv32_F]}};

assign tmp_26_i_fu_1284_p4 = {{grp_fu_1620_p3[ap_const_lv32_1E : ap_const_lv32_F]}};

assign tmp_27_fu_1378_p1 = r_2_reg_601[8:0];

assign tmp_29_fu_1212_p1 = div_i_reg_567[14:0];

assign tmp_2_fu_644_p3 = L_ACF_0_read[ap_const_lv32_1F];

assign tmp_2_i_cast_fu_783_p4 = {{p_i_cast2_fu_708_p2[ap_const_lv32_17 : ap_const_lv32_10]}};

assign tmp_30_fu_1224_p1 = r_1_reg_525[8:0];

assign tmp_31_fu_1316_p4 = {{sum_fu_1305_p2[ap_const_lv32_10 : ap_const_lv32_F]}};

assign tmp_32_fu_1486_p4 = {{sum_1_fu_1474_p2[ap_const_lv32_10 : ap_const_lv32_F]}};

assign tmp_32_i_fu_1176_p2 = ((k_i_reg_578 == ap_const_lv4_0) ? 1'b1 : 1'b0);

assign tmp_33_fu_1575_p4 = {{sum_2_fu_1563_p2[ap_const_lv32_10 : ap_const_lv32_F]}};

assign tmp_33_i_fu_1188_p2 = (($signed(L_num_1_fu_1182_p2) < $signed(L_denum_i_reg_1819)) ? 1'b1 : 1'b0);

assign tmp_34_i1_fu_1480_p2 = (($signed(sum_1_fu_1474_p2) < $signed(17'b11000000000000000)) ? 1'b1 : 1'b0);

assign tmp_34_i2_fu_1569_p2 = (($signed(sum_2_fu_1563_p2) < $signed(17'b11000000000000000)) ? 1'b1 : 1'b0);

assign tmp_34_i_fu_1310_p2 = (($signed(sum_fu_1305_p2) < $signed(17'b11000000000000000)) ? 1'b1 : 1'b0);

assign tmp_36_i1_fu_1502_p2 = ($signed(temp_4_fu_1454_p3) + $signed(P_q0));

assign tmp_36_i2_fu_1591_p2 = ($signed(temp_5_fu_1551_p3) + $signed(K_q1));

assign tmp_36_i_fu_1332_p2 = (temp_3_fu_1293_p3 + L_denum_reg_1805);

assign tmp_37_i1_fu_1522_p3 = ((tmp_23_fu_1516_p2[0:0] === 1'b1) ? phitmp_i1_fu_1508_p3 : tmp_36_i1_fu_1502_p2);

assign tmp_37_i2_fu_1611_p3 = ((tmp_24_fu_1605_p2[0:0] === 1'b1) ? phitmp_i2_fu_1597_p3 : tmp_36_i2_fu_1591_p2);

assign tmp_37_i_fu_1351_p3 = ((tmp_18_fu_1345_p2[0:0] === 1'b1) ? phitmp_i_fu_1337_p3 : tmp_36_i_fu_1332_p2);

assign tmp_38_i_cast_fu_1128_p2 = (ap_const_lv15_0 - tmp_26_fu_1124_p1);

assign tmp_39_i_cast_fu_1142_p1 = tmp_39_i_fu_1134_p3;

assign tmp_39_i_fu_1134_p3 = ((grp_fu_632_p2[0:0] === 1'b1) ? ap_const_lv15_7FFF : tmp_38_i_cast_fu_1128_p2);

assign tmp_4_fu_660_p3 = ((tmp_2_fu_644_p3[0:0] === 1'b1) ? ap_const_lv16_FFFF : ap_const_lv16_0);

assign tmp_51_1_fu_988_p2 = L_ACF_1_read << tmp_s_fu_968_p1;

assign tmp_51_2_fu_1005_p2 = L_ACF_2_read << tmp_s_fu_968_p1;

assign tmp_51_3_fu_1020_p2 = L_ACF_3_read << tmp_s_fu_968_p1;

assign tmp_51_4_fu_1035_p2 = L_ACF_4_read << tmp_s_fu_968_p1;

assign tmp_51_5_fu_1050_p2 = L_ACF_5_read << tmp_s_fu_968_p1;

assign tmp_51_6_fu_1065_p2 = L_ACF_6_read << tmp_s_fu_968_p1;

assign tmp_51_7_fu_1080_p2 = L_ACF_7_read << tmp_s_fu_968_p1;

assign tmp_51_8_fu_1095_p2 = L_ACF_8_read << tmp_s_fu_968_p1;

assign tmp_5_fu_668_p1 = L_ACF_0_read[15:0];

assign tmp_6_fu_672_p3 = ((tmp_2_fu_644_p3[0:0] === 1'b1) ? ap_const_lv8_FF : ap_const_lv8_0);

assign tmp_7_fu_680_p1 = L_ACF_0_read[7:0];

assign tmp_7_i_fu_768_p4 = {{a_assign_fu_696_p2[ap_const_lv32_1F : ap_const_lv32_18]}};

assign tmp_8_fu_684_p3 = ((tmp_2_fu_644_p3[0:0] === 1'b1) ? ap_const_lv24_FFFFFF : ap_const_lv24_0);

assign tmp_8_i_fu_778_p1 = tmp_7_i_fu_768_p4;

assign tmp_9_fu_692_p1 = L_ACF_0_read[23:0];

assign tmp_fu_638_p2 = ((L_ACF_0_read == ap_const_lv32_0) ? 1'b1 : 1'b0);

assign tmp_i1_cast_fu_1470_p1 = $signed(temp_4_fu_1454_p3);

assign tmp_i1_fu_1152_p1 = $signed(temp_6_reg_549);

assign tmp_i2_cast_fu_1466_p1 = P_q0;

assign tmp_i2_fu_1164_p2 = ((temp_6_reg_549 == ap_const_lv16_0) ? 1'b1 : 1'b0);

assign tmp_i3_62_fu_1531_p2 = ((P_q0 == ap_const_lv16_8000) ? 1'b1 : 1'b0);

assign tmp_i3_fu_1265_p2 = ((b_assign_fu_1250_p3 == ap_const_lv16_8000) ? 1'b1 : 1'b0);

assign tmp_i5_cast_fu_1559_p1 = $signed(temp_5_fu_1551_p3);

assign tmp_i6_cast_fu_829_p1 = $signed(tmp_i6_fu_823_p2);

assign tmp_i6_fu_823_p2 = ($signed(ap_const_lv4_F) + $signed(bitoff_q0));

assign tmp_i7_cast_fu_1301_p1 = $signed(temp_3_fu_1293_p3);

assign tmp_i9_fu_1426_p2 = ((K_q1 == ap_const_lv16_8000) ? 1'b1 : 1'b0);

assign tmp_s_fu_968_p1 = $signed(temp_fu_960_p3);

assign y_d1 = ap_const_lv16_0;

endmodule //Reflection_coefficie
