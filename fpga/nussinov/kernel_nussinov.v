// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.4
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================
/* verilator lint_off WIDTH */
/* verilator lint_off DECLFILENAME */
/* verilator lint_off STMTDLY */
/* verilator lint_off UNUSED */
/* verilator lint_off WIDTH */
/* verilator lint_off DECLFILENAME */
/* verilator lint_off PINCONNECTEMPTY */
/* verilator lint_off UNDRIVEN */
`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="kernel_nussinov,hls_ip_2016_4,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z045ffg900-2,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.495000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=541,HLS_SYN_LUT=884}" *)

module kernel_nussinov (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        table_r_address0,
        table_r_ce0,
        table_r_we0,
        table_r_d0,
        table_r_q0,
        table_r_address1,
        table_r_ce1,
        table_r_we1,
        table_r_d1,
        table_r_q1
);

parameter    ap_ST_fsm_state1 = 14'b1;
parameter    ap_ST_fsm_state2 = 14'b10;
parameter    ap_ST_fsm_state3 = 14'b100;
parameter    ap_ST_fsm_state4 = 14'b1000;
parameter    ap_ST_fsm_state5 = 14'b10000;
parameter    ap_ST_fsm_state6 = 14'b100000;
parameter    ap_ST_fsm_state7 = 14'b1000000;
parameter    ap_ST_fsm_state8 = 14'b10000000;
parameter    ap_ST_fsm_state9 = 14'b100000000;
parameter    ap_ST_fsm_state10 = 14'b1000000000;
parameter    ap_ST_fsm_state11 = 14'b10000000000;
parameter    ap_ST_fsm_state12 = 14'b100000000000;
parameter    ap_ST_fsm_state13 = 14'b1000000000000;
parameter    ap_ST_fsm_state14 = 14'b10000000000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv32_7 = 32'b111;
parameter    ap_const_lv32_B = 32'b1011;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_4 = 32'b100;
parameter    ap_const_lv32_5 = 32'b101;
parameter    ap_const_lv32_6 = 32'b110;
parameter    ap_const_lv32_8 = 32'b1000;
parameter    ap_const_lv32_9 = 32'b1001;
parameter    ap_const_lv32_A = 32'b1010;
parameter    ap_const_lv32_C = 32'b1100;
parameter    ap_const_lv7_3E = 7'b111110;
parameter    ap_const_lv32_D = 32'b1101;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv7_40 = 7'b1000000;
parameter    ap_const_lv6_0 = 6'b000000;
parameter    ap_const_lv7_1 = 7'b1;
parameter    ap_const_lv7_3F = 7'b111111;
parameter    ap_const_lv32_3E = 32'b111110;
parameter    ap_const_lv32_1F = 32'b11111;
parameter    ap_const_lv7_7F = 7'b1111111;
parameter    ap_const_lv14_FC0 = 14'b111111000000;
parameter    ap_const_lv8_2 = 8'b10;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [11:0] table_r_address0;
output   table_r_ce0;
output   table_r_we0;
output  [31:0] table_r_d0;
input  [31:0] table_r_q0;
output  [11:0] table_r_address1;
output   table_r_ce1;
output   table_r_we1;
output  [31:0] table_r_d1;
input  [31:0] table_r_q1;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[11:0] table_r_address0;
reg table_r_ce0;
reg table_r_we0;
reg[31:0] table_r_d0;
reg[11:0] table_r_address1;
reg table_r_ce1;
reg table_r_we1;

(* fsm_encoding = "none" *) reg   [13:0] ap_CS_fsm;
wire   [0:0] ap_CS_fsm_state1;
reg   [31:0] reg_203;
wire   [0:0] ap_CS_fsm_state8;
wire   [0:0] ap_CS_fsm_state12;
wire  signed [31:0] i_cast_fu_208_p1;
reg  signed [31:0] i_cast_reg_597;
wire   [0:0] ap_CS_fsm_state2;
reg   [11:0] table_addr_reg_607;
wire   [0:0] tmp_fu_212_p3;
wire   [38:0] tmp_34_cast3_fu_247_p1;
reg   [38:0] tmp_34_cast3_reg_612;
wire  signed [13:0] tmp_34_cast_fu_251_p1;
reg  signed [13:0] tmp_34_cast_reg_617;
wire   [0:0] tmp_3_fu_261_p2;
reg   [0:0] tmp_3_reg_627;
wire   [31:0] tmp_36_cast2_fu_275_p1;
reg   [31:0] tmp_36_cast2_reg_632;
wire   [13:0] tmp_36_cast_fu_279_p1;
reg   [13:0] tmp_36_cast_reg_637;
wire   [31:0] j_fu_283_p2;
reg   [31:0] j_reg_642;
wire   [0:0] ap_CS_fsm_state3;
wire   [0:0] tmp_13_fu_295_p3;
reg   [0:0] tmp_13_reg_655;
wire   [0:0] exitcond_fu_289_p2;
wire   [0:0] rev8_fu_303_p2;
reg   [0:0] rev8_reg_659;
reg   [11:0] table_addr_1_reg_664;
wire   [6:0] i_1_fu_337_p2;
reg   [11:0] table_addr_3_reg_679;
wire   [0:0] ap_CS_fsm_state5;
wire   [0:0] or_cond_fu_396_p2;
reg   [0:0] or_cond_reg_689;
wire   [0:0] ap_CS_fsm_state6;
wire   [0:0] tmp_12_fu_400_p2;
reg   [0:0] tmp_12_reg_693;
wire   [31:0] tmp_35_fu_405_p2;
reg   [31:0] tmp_35_reg_698;
wire   [0:0] ap_CS_fsm_state7;
reg   [11:0] table_addr_5_reg_709;
reg   [31:0] table_load_6_reg_720;
wire   [38:0] tmp_36_fu_441_p2;
reg   [38:0] tmp_36_reg_725;
wire   [31:0] tmp_18_fu_469_p2;
reg   [31:0] tmp_18_reg_735;
wire   [0:0] ap_CS_fsm_state9;
wire   [13:0] tmp_37_fu_513_p1;
reg   [13:0] tmp_37_reg_746;
wire   [0:0] ap_CS_fsm_state10;
reg   [11:0] table_addr_9_reg_751;
wire   [31:0] k_fu_526_p2;
reg   [31:0] k_reg_757;
wire   [0:0] ap_CS_fsm_state11;
wire   [13:0] tmp_40_fu_541_p2;
reg   [13:0] tmp_40_reg_765;
wire   [0:0] tmp_26_fu_532_p2;
wire   [13:0] tmp_43_fu_564_p2;
reg   [13:0] tmp_43_reg_770;
wire   [31:0] tmp_32_fu_589_p3;
reg   [31:0] tmp_32_reg_785;
wire   [0:0] ap_CS_fsm_state13;
reg   [6:0] i_reg_172;
reg   [31:0] j_0_in_reg_184;
reg   [31:0] k_0_in_reg_194;
wire   [0:0] ap_CS_fsm_state14;
wire   [63:0] tmp_21_cast_fu_230_p1;
wire  signed [63:0] tmp_37_cast_fu_318_p1;
wire   [63:0] tmp_38_cast_fu_332_p1;
wire  signed [63:0] tmp_39_cast_fu_366_p1;
wire  signed [63:0] tmp_40_cast_fu_376_p1;
wire   [63:0] tmp_43_cast_fu_410_p1;
wire  signed [63:0] tmp_41_cast_fu_422_p1;
wire  signed [63:0] tmp_42_cast_fu_433_p1;
wire   [63:0] tmp_44_cast_fu_446_p1;
wire   [63:0] table_load_9_table_l_1_fu_488_p1;
wire  signed [63:0] tmp_45_cast_fu_521_p1;
wire  signed [63:0] tmp_46_cast_fu_569_p1;
wire  signed [63:0] tmp_49_cast_fu_573_p1;
wire   [0:0] ap_CS_fsm_state4;
wire   [31:0] tmp_s_fu_349_p3;
wire   [31:0] tmp_23_fu_505_p3;
wire   [6:0] tmp_1_fu_220_p2;
wire  signed [11:0] tmp_21_cast4_fu_226_p1;
wire   [12:0] tmp_5_fu_235_p3;
wire  signed [37:0] tmp_6_fu_243_p1;
wire   [6:0] tmp_2_fu_255_p2;
wire   [12:0] tmp_7_fu_267_p3;
wire   [13:0] tmp_14_fu_309_p1;
wire   [13:0] tmp_20_fu_313_p2;
wire   [13:0] tmp_21_fu_323_p1;
wire   [13:0] tmp_24_fu_327_p2;
wire   [0:0] tmp_9_fu_343_p2;
wire   [13:0] tmp_25_fu_358_p1;
wire   [13:0] tmp_27_fu_361_p2;
wire   [13:0] tmp_28_fu_371_p2;
wire   [0:0] tmp_10_fu_381_p2;
wire   [13:0] tmp_29_fu_414_p1;
wire   [13:0] tmp_33_fu_417_p2;
wire   [13:0] tmp_34_fu_427_p2;
wire   [38:0] tmp_20_cast_fu_438_p1;
wire   [31:0] tmp_15_fu_454_p2;
wire   [0:0] tmp_16_fu_459_p2;
wire   [31:0] tmp_17_fu_465_p1;
wire   [0:0] tmp_22_fu_475_p2;
wire   [38:0] tmp_43_cast1_fu_451_p1;
wire   [38:0] table_load_9_table_l_fu_481_p3;
wire   [0:0] tmp_19_fu_493_p2;
wire   [31:0] tmp_18_table_load_4_fu_498_p3;
wire   [13:0] tmp_38_fu_516_p2;
wire   [13:0] tmp_39_fu_537_p1;
wire   [7:0] tmp_41_fu_546_p1;
wire   [7:0] tmp_42_fu_550_p2;
wire   [13:0] tmp_48_cast_fu_556_p3;
wire   [31:0] tmp_30_fu_577_p2;
wire   [0:0] tmp_31_fu_583_p2;
reg   [13:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 14'b1;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0))) begin
        i_reg_172 <= ap_const_lv7_3E;
    end else if (((1'b1 == ap_CS_fsm_state3) & ~(1'b0 == exitcond_fu_289_p2))) begin
        i_reg_172 <= i_1_fu_337_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state11) & (1'b0 == tmp_26_fu_532_p2))) begin
        j_0_in_reg_184 <= j_reg_642;
    end else if (((1'b1 == ap_CS_fsm_state2) & (tmp_fu_212_p3 == 1'b0))) begin
        j_0_in_reg_184 <= i_cast_fu_208_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        k_0_in_reg_194 <= k_reg_757;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        k_0_in_reg_194 <= i_cast_reg_597;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        reg_203 <= table_r_q1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        reg_203 <= table_r_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        i_cast_reg_597 <= i_cast_fu_208_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        j_reg_642 <= j_fu_283_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        k_reg_757 <= k_fu_526_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        or_cond_reg_689 <= or_cond_fu_396_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (1'b0 == exitcond_fu_289_p2))) begin
        rev8_reg_659 <= rev8_fu_303_p2;
        tmp_13_reg_655 <= j_0_in_reg_184[ap_const_lv32_1F];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (1'b0 == exitcond_fu_289_p2) & (1'b0 == tmp_13_fu_295_p3))) begin
        table_addr_1_reg_664 <= tmp_37_cast_fu_318_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        table_addr_3_reg_679 <= tmp_39_cast_fu_366_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        table_addr_5_reg_709 <= tmp_41_cast_fu_422_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        table_addr_9_reg_751 <= tmp_45_cast_fu_521_p1;
        tmp_37_reg_746 <= tmp_37_fu_513_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (tmp_fu_212_p3 == 1'b0))) begin
        table_addr_reg_607 <= tmp_21_cast_fu_230_p1;
        tmp_34_cast3_reg_612[37 : 6] <= tmp_34_cast3_fu_247_p1[37 : 6];
        tmp_34_cast_reg_617[13 : 6] <= tmp_34_cast_fu_251_p1[13 : 6];
        tmp_36_cast2_reg_632[12 : 6] <= tmp_36_cast2_fu_275_p1[12 : 6];
        tmp_36_cast_reg_637[12 : 6] <= tmp_36_cast_fu_279_p1[12 : 6];
        tmp_3_reg_627 <= tmp_3_fu_261_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state8) & ~(1'b0 == tmp_12_reg_693))) begin
        table_load_6_reg_720 <= table_r_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & ~(1'b0 == or_cond_fu_396_p2))) begin
        tmp_12_reg_693 <= tmp_12_fu_400_p2;
        tmp_35_reg_698 <= tmp_35_fu_405_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~(1'b0 == tmp_12_reg_693) & (1'b1 == ap_CS_fsm_state9))) begin
        tmp_18_reg_735 <= tmp_18_fu_469_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        tmp_32_reg_785 <= tmp_32_fu_589_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state8) & (1'b0 == tmp_12_reg_693))) begin
        tmp_36_reg_725 <= tmp_36_fu_441_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state11) & ~(1'b0 == tmp_26_fu_532_p2))) begin
        tmp_40_reg_765 <= tmp_40_fu_541_p2;
        tmp_43_reg_770 <= tmp_43_fu_564_p2;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & ~(tmp_fu_212_p3 == 1'b0))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (ap_CS_fsm_state1 == 1'b1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & ~(tmp_fu_212_p3 == 1'b0))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        table_r_address0 = table_addr_9_reg_751;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        table_r_address0 = tmp_46_cast_fu_569_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        table_r_address0 = table_addr_5_reg_709;
    end else if (((1'b1 == ap_CS_fsm_state8) & (1'b0 == tmp_12_reg_693))) begin
        table_r_address0 = tmp_44_cast_fu_446_p1;
    end else if (((1'b1 == ap_CS_fsm_state8) & ~(1'b0 == tmp_12_reg_693))) begin
        table_r_address0 = tmp_42_cast_fu_433_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        table_r_address0 = tmp_43_cast_fu_410_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        table_r_address0 = tmp_40_cast_fu_376_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        table_r_address0 = table_addr_1_reg_664;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        table_r_address0 = tmp_37_cast_fu_318_p1;
    end else begin
        table_r_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        table_r_address1 = tmp_49_cast_fu_573_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        table_r_address1 = table_addr_9_reg_751;
    end else if (((1'b0 == tmp_12_reg_693) & (1'b1 == ap_CS_fsm_state9))) begin
        table_r_address1 = table_load_9_table_l_1_fu_488_p1;
    end else if ((~(1'b0 == tmp_12_reg_693) & (1'b1 == ap_CS_fsm_state9))) begin
        table_r_address1 = table_addr_5_reg_709;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        table_r_address1 = table_addr_reg_607;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        table_r_address1 = table_addr_3_reg_679;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        table_r_address1 = tmp_39_cast_fu_366_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        table_r_address1 = tmp_38_cast_fu_332_p1;
    end else begin
        table_r_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state7) | ((1'b1 == ap_CS_fsm_state8) & ~(1'b0 == tmp_12_reg_693)) | ((1'b1 == ap_CS_fsm_state8) & (1'b0 == tmp_12_reg_693)) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state4))) begin
        table_r_ce0 = 1'b1;
    end else begin
        table_r_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state7) | (~(1'b0 == tmp_12_reg_693) & (1'b1 == ap_CS_fsm_state9)) | ((1'b0 == tmp_12_reg_693) & (1'b1 == ap_CS_fsm_state9)) | (1'b1 == ap_CS_fsm_state11))) begin
        table_r_ce1 = 1'b1;
    end else begin
        table_r_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        table_r_d0 = tmp_32_reg_785;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        table_r_d0 = tmp_23_fu_505_p3;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        table_r_d0 = tmp_s_fu_349_p3;
    end else begin
        table_r_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((1'b1 == ap_CS_fsm_state4) & (1'b0 == tmp_13_reg_655)) | ((1'b1 == ap_CS_fsm_state10) & ~(1'b0 == or_cond_reg_689)))) begin
        table_r_we0 = 1'b1;
    end else begin
        table_r_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) & ~(1'b0 == tmp_3_reg_627))) begin
        table_r_we1 = 1'b1;
    end else begin
        table_r_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (~(ap_start == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (~(tmp_fu_212_p3 == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if (~(1'b0 == exitcond_fu_289_p2)) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            if ((1'b0 == tmp_3_reg_627)) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            if ((1'b0 == or_cond_fu_396_p2)) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            if ((1'b0 == tmp_26_fu_532_p2)) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[ap_const_lv32_0];

assign ap_CS_fsm_state10 = ap_CS_fsm[ap_const_lv32_9];

assign ap_CS_fsm_state11 = ap_CS_fsm[ap_const_lv32_A];

assign ap_CS_fsm_state12 = ap_CS_fsm[ap_const_lv32_B];

assign ap_CS_fsm_state13 = ap_CS_fsm[ap_const_lv32_C];

assign ap_CS_fsm_state14 = ap_CS_fsm[ap_const_lv32_D];

assign ap_CS_fsm_state2 = ap_CS_fsm[ap_const_lv32_1];

assign ap_CS_fsm_state3 = ap_CS_fsm[ap_const_lv32_2];

assign ap_CS_fsm_state4 = ap_CS_fsm[ap_const_lv32_3];

assign ap_CS_fsm_state5 = ap_CS_fsm[ap_const_lv32_4];

assign ap_CS_fsm_state6 = ap_CS_fsm[ap_const_lv32_5];

assign ap_CS_fsm_state7 = ap_CS_fsm[ap_const_lv32_6];

assign ap_CS_fsm_state8 = ap_CS_fsm[ap_const_lv32_7];

assign ap_CS_fsm_state9 = ap_CS_fsm[ap_const_lv32_8];

assign exitcond_fu_289_p2 = ((j_0_in_reg_184 == ap_const_lv32_3E) ? 1'b1 : 1'b0);

assign i_1_fu_337_p2 = ($signed(i_reg_172) + $signed(ap_const_lv7_7F));

assign i_cast_fu_208_p1 = $signed(i_reg_172);

assign j_fu_283_p2 = (j_0_in_reg_184 + ap_const_lv32_1);

assign k_fu_526_p2 = (k_0_in_reg_194 + ap_const_lv32_1);

assign or_cond_fu_396_p2 = (tmp_3_reg_627 & rev8_reg_659);

assign rev8_fu_303_p2 = (tmp_13_fu_295_p3 ^ 1'b1);

assign table_load_9_table_l_1_fu_488_p1 = table_load_9_table_l_fu_481_p3;

assign table_load_9_table_l_fu_481_p3 = ((tmp_22_fu_475_p2[0:0] === 1'b1) ? tmp_43_cast1_fu_451_p1 : tmp_36_reg_725);

assign table_r_d1 = ((tmp_10_fu_381_p2[0:0] === 1'b1) ? table_r_q0 : table_r_q1);

assign tmp_10_fu_381_p2 = (($signed(table_r_q1) < $signed(table_r_q0)) ? 1'b1 : 1'b0);

assign tmp_12_fu_400_p2 = (($signed(i_cast_reg_597) < $signed(j_0_in_reg_184)) ? 1'b1 : 1'b0);

assign tmp_13_fu_295_p3 = j_0_in_reg_184[ap_const_lv32_1F];

assign tmp_14_fu_309_p1 = j_fu_283_p2[13:0];

assign tmp_15_fu_454_p2 = (table_r_q0 + table_load_6_reg_720);

assign tmp_16_fu_459_p2 = ((tmp_15_fu_454_p2 == ap_const_lv32_3) ? 1'b1 : 1'b0);

assign tmp_17_fu_465_p1 = tmp_16_fu_459_p2;

assign tmp_18_fu_469_p2 = (tmp_17_fu_465_p1 + reg_203);

assign tmp_18_table_load_4_fu_498_p3 = ((tmp_19_fu_493_p2[0:0] === 1'b1) ? tmp_18_reg_735 : table_r_q1);

assign tmp_19_fu_493_p2 = (($signed(table_r_q1) < $signed(tmp_18_reg_735)) ? 1'b1 : 1'b0);

assign tmp_1_fu_220_p2 = (i_reg_172 ^ ap_const_lv7_40);

assign tmp_20_cast_fu_438_p1 = j_reg_642;

assign tmp_20_fu_313_p2 = ($signed(tmp_34_cast_reg_617) + $signed(tmp_14_fu_309_p1));

assign tmp_21_cast4_fu_226_p1 = $signed(tmp_1_fu_220_p2);

assign tmp_21_cast_fu_230_p1 = $unsigned(tmp_21_cast4_fu_226_p1);

assign tmp_21_fu_323_p1 = j_0_in_reg_184[13:0];

assign tmp_22_fu_475_p2 = (($signed(table_r_q0) < $signed(reg_203)) ? 1'b1 : 1'b0);

assign tmp_23_fu_505_p3 = ((tmp_12_reg_693[0:0] === 1'b1) ? tmp_18_table_load_4_fu_498_p3 : table_r_q1);

assign tmp_24_fu_327_p2 = ($signed(tmp_34_cast_reg_617) + $signed(tmp_21_fu_323_p1));

assign tmp_25_fu_358_p1 = j_reg_642[13:0];

assign tmp_26_fu_532_p2 = (($signed(k_fu_526_p2) < $signed(j_reg_642)) ? 1'b1 : 1'b0);

assign tmp_27_fu_361_p2 = ($signed(tmp_34_cast_reg_617) + $signed(tmp_25_fu_358_p1));

assign tmp_28_fu_371_p2 = (tmp_36_cast_reg_637 + tmp_25_fu_358_p1);

assign tmp_29_fu_414_p1 = j_reg_642[13:0];

assign tmp_2_fu_255_p2 = (i_reg_172 + ap_const_lv7_1);

assign tmp_30_fu_577_p2 = (table_r_q0 + table_r_q1);

assign tmp_31_fu_583_p2 = (($signed(reg_203) < $signed(tmp_30_fu_577_p2)) ? 1'b1 : 1'b0);

assign tmp_32_fu_589_p3 = ((tmp_31_fu_583_p2[0:0] === 1'b1) ? tmp_30_fu_577_p2 : reg_203);

assign tmp_33_fu_417_p2 = ($signed(tmp_34_cast_reg_617) + $signed(tmp_29_fu_414_p1));

assign tmp_34_cast3_fu_247_p1 = $unsigned(tmp_6_fu_243_p1);

assign tmp_34_cast_fu_251_p1 = $signed(tmp_5_fu_235_p3);

assign tmp_34_fu_427_p2 = (ap_const_lv14_FC0 + tmp_29_fu_414_p1);

assign tmp_35_fu_405_p2 = (tmp_36_cast2_reg_632 + j_0_in_reg_184);

assign tmp_36_cast2_fu_275_p1 = tmp_7_fu_267_p3;

assign tmp_36_cast_fu_279_p1 = tmp_7_fu_267_p3;

assign tmp_36_fu_441_p2 = (tmp_34_cast3_reg_612 + tmp_20_cast_fu_438_p1);

assign tmp_37_cast_fu_318_p1 = $signed(tmp_20_fu_313_p2);

assign tmp_37_fu_513_p1 = j_reg_642[13:0];

assign tmp_38_cast_fu_332_p1 = tmp_24_fu_327_p2;

assign tmp_38_fu_516_p2 = ($signed(tmp_34_cast_reg_617) + $signed(tmp_37_fu_513_p1));

assign tmp_39_cast_fu_366_p1 = $signed(tmp_27_fu_361_p2);

assign tmp_39_fu_537_p1 = k_fu_526_p2[13:0];

assign tmp_3_fu_261_p2 = ((tmp_2_fu_255_p2 != ap_const_lv7_3F) ? 1'b1 : 1'b0);

assign tmp_40_cast_fu_376_p1 = $signed(tmp_28_fu_371_p2);

assign tmp_40_fu_541_p2 = ($signed(tmp_34_cast_reg_617) + $signed(tmp_39_fu_537_p1));

assign tmp_41_cast_fu_422_p1 = $signed(tmp_33_fu_417_p2);

assign tmp_41_fu_546_p1 = k_0_in_reg_194[7:0];

assign tmp_42_cast_fu_433_p1 = $signed(tmp_34_fu_427_p2);

assign tmp_42_fu_550_p2 = (ap_const_lv8_2 + tmp_41_fu_546_p1);

assign tmp_43_cast1_fu_451_p1 = tmp_35_reg_698;

assign tmp_43_cast_fu_410_p1 = tmp_35_reg_698;

assign tmp_43_fu_564_p2 = (tmp_48_cast_fu_556_p3 + tmp_37_reg_746);

assign tmp_44_cast_fu_446_p1 = tmp_36_fu_441_p2;

assign tmp_45_cast_fu_521_p1 = $signed(tmp_38_fu_516_p2);

assign tmp_46_cast_fu_569_p1 = $signed(tmp_40_reg_765);

assign tmp_48_cast_fu_556_p3 = {{tmp_42_fu_550_p2}, {ap_const_lv6_0}};

assign tmp_49_cast_fu_573_p1 = $signed(tmp_43_reg_770);

assign tmp_5_fu_235_p3 = {{i_reg_172}, {ap_const_lv6_0}};

assign tmp_6_fu_243_p1 = $signed(tmp_5_fu_235_p3);

assign tmp_7_fu_267_p3 = {{tmp_2_fu_255_p2}, {ap_const_lv6_0}};

assign tmp_9_fu_343_p2 = (($signed(table_r_q0) < $signed(table_r_q1)) ? 1'b1 : 1'b0);

assign tmp_fu_212_p3 = i_reg_172[ap_const_lv32_6];

assign tmp_s_fu_349_p3 = ((tmp_9_fu_343_p2[0:0] === 1'b1) ? table_r_q1 : table_r_q0);

always @ (posedge ap_clk) begin
    tmp_34_cast3_reg_612[5:0] <= 6'b000000;
    tmp_34_cast3_reg_612[38] <= 1'b0;
    tmp_34_cast_reg_617[5:0] <= 6'b000000;
    tmp_36_cast2_reg_632[5:0] <= 6'b000000;
    tmp_36_cast2_reg_632[31:13] <= 19'b0000000000000000000;
    tmp_36_cast_reg_637[5:0] <= 6'b000000;
    tmp_36_cast_reg_637[13] <= 1'b0;
end

endmodule //kernel_nussinov
