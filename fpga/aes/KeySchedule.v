// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.4
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module KeySchedule (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        type_r,
        key_address0,
        key_ce0,
        key_q0,
        word_address0,
        word_ce0,
        word_we0,
        word_d0,
        word_q0,
        word_address1,
        word_ce1,
        word_q1
);

parameter    ap_ST_fsm_state1 = 82'b1;
parameter    ap_ST_fsm_state2 = 82'b10;
parameter    ap_ST_fsm_state3 = 82'b100;
parameter    ap_ST_fsm_state4 = 82'b1000;
parameter    ap_ST_fsm_state5 = 82'b10000;
parameter    ap_ST_fsm_state6 = 82'b100000;
parameter    ap_ST_fsm_state7 = 82'b1000000;
parameter    ap_ST_fsm_state8 = 82'b10000000;
parameter    ap_ST_fsm_state9 = 82'b100000000;
parameter    ap_ST_fsm_state10 = 82'b1000000000;
parameter    ap_ST_fsm_state11 = 82'b10000000000;
parameter    ap_ST_fsm_state12 = 82'b100000000000;
parameter    ap_ST_fsm_state13 = 82'b1000000000000;
parameter    ap_ST_fsm_state14 = 82'b10000000000000;
parameter    ap_ST_fsm_state15 = 82'b100000000000000;
parameter    ap_ST_fsm_state16 = 82'b1000000000000000;
parameter    ap_ST_fsm_state17 = 82'b10000000000000000;
parameter    ap_ST_fsm_state18 = 82'b100000000000000000;
parameter    ap_ST_fsm_state19 = 82'b1000000000000000000;
parameter    ap_ST_fsm_state20 = 82'b10000000000000000000;
parameter    ap_ST_fsm_state21 = 82'b100000000000000000000;
parameter    ap_ST_fsm_state22 = 82'b1000000000000000000000;
parameter    ap_ST_fsm_state23 = 82'b10000000000000000000000;
parameter    ap_ST_fsm_state24 = 82'b100000000000000000000000;
parameter    ap_ST_fsm_state25 = 82'b1000000000000000000000000;
parameter    ap_ST_fsm_state26 = 82'b10000000000000000000000000;
parameter    ap_ST_fsm_state27 = 82'b100000000000000000000000000;
parameter    ap_ST_fsm_state28 = 82'b1000000000000000000000000000;
parameter    ap_ST_fsm_state29 = 82'b10000000000000000000000000000;
parameter    ap_ST_fsm_state30 = 82'b100000000000000000000000000000;
parameter    ap_ST_fsm_state31 = 82'b1000000000000000000000000000000;
parameter    ap_ST_fsm_state32 = 82'b10000000000000000000000000000000;
parameter    ap_ST_fsm_state33 = 82'b100000000000000000000000000000000;
parameter    ap_ST_fsm_state34 = 82'b1000000000000000000000000000000000;
parameter    ap_ST_fsm_state35 = 82'b10000000000000000000000000000000000;
parameter    ap_ST_fsm_state36 = 82'b100000000000000000000000000000000000;
parameter    ap_ST_fsm_state37 = 82'b1000000000000000000000000000000000000;
parameter    ap_ST_fsm_state38 = 82'b10000000000000000000000000000000000000;
parameter    ap_ST_fsm_state39 = 82'b100000000000000000000000000000000000000;
parameter    ap_ST_fsm_state40 = 82'b1000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state41 = 82'b10000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state42 = 82'b100000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state43 = 82'b1000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state44 = 82'b10000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state45 = 82'b100000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state46 = 82'b1000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state47 = 82'b10000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state48 = 82'b100000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state49 = 82'b1000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state50 = 82'b10000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state51 = 82'b100000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state52 = 82'b1000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state53 = 82'b10000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state54 = 82'b100000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state55 = 82'b1000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state56 = 82'b10000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state57 = 82'b100000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state58 = 82'b1000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state59 = 82'b10000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state60 = 82'b100000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state61 = 82'b1000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state62 = 82'b10000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state63 = 82'b100000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state64 = 82'b1000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state65 = 82'b10000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state66 = 82'b100000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state67 = 82'b1000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state68 = 82'b10000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state69 = 82'b100000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state70 = 82'b1000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state71 = 82'b10000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state72 = 82'b100000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state73 = 82'b1000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state74 = 82'b10000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state75 = 82'b100000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state76 = 82'b1000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state77 = 82'b10000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state78 = 82'b100000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state79 = 82'b1000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state80 = 82'b10000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state81 = 82'b100000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state82 = 82'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv32_1F480 = 32'b11111010010000000;
parameter    ap_const_lv32_1F4C0 = 32'b11111010011000000;
parameter    ap_const_lv32_1F500 = 32'b11111010100000000;
parameter    ap_const_lv32_2EE80 = 32'b101110111010000000;
parameter    ap_const_lv32_2EEC0 = 32'b101110111011000000;
parameter    ap_const_lv32_2EF00 = 32'b101110111100000000;
parameter    ap_const_lv32_3E880 = 32'b111110100010000000;
parameter    ap_const_lv32_3E8C0 = 32'b111110100011000000;
parameter    ap_const_lv32_3E900 = 32'b111110100100000000;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_27 = 32'b100111;
parameter    ap_const_lv32_28 = 32'b101000;
parameter    ap_const_lv32_29 = 32'b101001;
parameter    ap_const_lv32_4A = 32'b1001010;
parameter    ap_const_lv32_4B = 32'b1001011;
parameter    ap_const_lv32_4C = 32'b1001100;
parameter    ap_const_lv32_4D = 32'b1001101;
parameter    ap_const_lv32_4E = 32'b1001110;
parameter    ap_const_lv32_4F = 32'b1001111;
parameter    ap_const_lv32_50 = 32'b1010000;
parameter    ap_const_lv4_F = 4'b1111;
parameter    ap_const_lv4_D = 4'b1101;
parameter    ap_const_lv4_B = 4'b1011;
parameter    ap_const_lv4_8 = 4'b1000;
parameter    ap_const_lv4_6 = 4'b110;
parameter    ap_const_lv4_4 = 4'b100;
parameter    ap_const_lv4_0 = 4'b0000;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv3_0 = 3'b000;
parameter    ap_const_lv32_51 = 32'b1010001;
parameter    ap_const_lv32_49 = 32'b1001001;
parameter    ap_const_lv32_1F = 32'b11111;
parameter    ap_const_lv32_4 = 32'b100;
parameter    ap_const_lv32_9 = 32'b1001;
parameter    ap_const_lv6_0 = 6'b000000;
parameter    ap_const_lv4_1 = 4'b1;
parameter    ap_const_lv2_0 = 2'b00;
parameter    ap_const_lv3_4 = 3'b100;
parameter    ap_const_lv3_1 = 3'b1;
parameter    ap_const_lv7_0 = 7'b0000000;
parameter    ap_const_lv32_FFFFFFFF = 32'b11111111111111111111111111111111;
parameter    ap_const_lv10_78 = 10'b1111000;
parameter    ap_const_lv10_F0 = 10'b11110000;
parameter    ap_const_lv10_168 = 10'b101101000;
parameter    ap_const_lv10_0 = 10'b0000000000;
parameter    ap_const_lv31_7FFFFFFF = 31'b1111111111111111111111111111111;
parameter    ap_const_lv2_2 = 2'b10;
parameter    ap_const_lv2_1 = 2'b1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] type_r;
output  [6:0] key_address0;
output   key_ce0;
input  [31:0] key_q0;
output  [8:0] word_address0;
output   word_ce0;
output   word_we0;
output  [31:0] word_d0;
input  [31:0] word_q0;
output  [8:0] word_address1;
output   word_ce1;
input  [31:0] word_q1;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg key_ce0;
reg[8:0] word_address0;
reg word_ce0;
reg word_we0;
reg[31:0] word_d0;
reg[8:0] word_address1;
reg word_ce1;

(* fsm_encoding = "none" *) reg   [81:0] ap_CS_fsm;
wire   [0:0] ap_CS_fsm_state1;
reg   [7:0] Sbox_address0;
reg    Sbox_ce0;
wire   [7:0] Sbox_q0;
reg   [7:0] Sbox_address1;
reg    Sbox_ce1;
wire   [7:0] Sbox_q1;
wire   [4:0] Rcon0_address0;
reg    Rcon0_ce0;
wire   [7:0] Rcon0_q0;
wire   [31:0] type_read_read_fu_110_p2;
wire   [7:0] round_cast_cast_fu_592_p1;
reg   [7:0] round_cast_cast_reg_1458;
wire   [7:0] nb_cast_cast_fu_596_p1;
reg   [7:0] nb_cast_cast_reg_1463;
wire   [31:0] j_cast_fu_600_p1;
reg   [31:0] j_cast_reg_1468;
wire   [3:0] j_4_fu_610_p2;
reg   [3:0] j_4_reg_1478;
wire   [0:0] ap_CS_fsm_state2;
wire   [4:0] tmp_s_fu_620_p3;
reg   [4:0] tmp_s_reg_1483;
wire   [0:0] exitcond3_fu_604_p2;
wire   [9:0] tmp_44_cast_fu_628_p1;
reg   [9:0] tmp_44_cast_reg_1488;
wire   [31:0] tmp_61_cast_fu_636_p1;
reg   [31:0] tmp_61_cast_reg_1493;
wire   [0:0] tmp_46_fu_640_p2;
reg   [0:0] tmp_46_reg_1498;
wire   [2:0] i_4_fu_656_p2;
reg   [2:0] i_4_reg_1506;
wire   [0:0] ap_CS_fsm_state3;
wire   [0:0] exitcond2_fu_650_p2;
wire   [9:0] tmp_66_fu_706_p2;
reg   [9:0] tmp_66_reg_1516;
wire   [3:0] tmp_58_fu_725_p1;
reg   [3:0] tmp_58_reg_1524;
wire   [0:0] ap_CS_fsm_state40;
wire   [0:0] tmp_50_fu_729_p2;
reg   [0:0] tmp_50_reg_1529;
reg   [8:0] word_addr_4_reg_1533;
reg   [8:0] word_addr_5_reg_1538;
reg   [8:0] word_addr_6_reg_1544;
reg   [8:0] word_addr_7_reg_1550;
reg   [31:0] temp_0_1_reg_1555;
wire   [0:0] ap_CS_fsm_state41;
reg   [31:0] temp_1_1_reg_1560;
wire   [0:0] ap_CS_fsm_state42;
wire   [9:0] tmp_76_fu_852_p2;
reg   [9:0] tmp_76_reg_1575;
wire   [0:0] ap_CS_fsm_state75;
wire   [9:0] tmp_86_fu_922_p2;
reg   [9:0] tmp_86_reg_1580;
wire   [0:0] ap_CS_fsm_state76;
wire   [9:0] tmp_95_fu_1000_p2;
reg   [9:0] tmp_95_reg_1595;
wire   [9:0] tmp_104_fu_1070_p2;
reg   [9:0] tmp_104_reg_1600;
reg   [7:0] Sbox_load_reg_1605;
wire   [0:0] ap_CS_fsm_state77;
reg   [7:0] temp_1_reg_1615;
wire   [0:0] or_cond_35_fu_1128_p2;
reg   [0:0] or_cond_35_reg_1630;
wire   [0:0] ap_CS_fsm_state78;
wire   [2:0] i_5_fu_1139_p2;
reg   [2:0] i_5_reg_1637;
wire   [0:0] ap_CS_fsm_state79;
wire   [1:0] tmp_108_fu_1145_p1;
reg   [1:0] tmp_108_reg_1642;
wire   [0:0] exitcond1_fu_1133_p2;
wire   [9:0] tmp_126_fu_1276_p2;
reg   [9:0] tmp_126_reg_1654;
wire   [9:0] tmp_127_fu_1282_p1;
reg   [9:0] tmp_127_reg_1659;
wire   [31:0] temp_3_3_fu_1319_p3;
wire   [0:0] ap_CS_fsm_state80;
wire   [31:0] temp_3_4_fu_1335_p3;
wire   [31:0] temp_3_7_fu_1351_p3;
wire   [31:0] temp_3_9_fu_1359_p3;
wire   [2:0] i_6_fu_1373_p2;
reg   [2:0] i_6_reg_1687;
wire   [0:0] ap_CS_fsm_state81;
wire   [0:0] exitcond_fu_1367_p2;
wire   [9:0] tmp_118_fu_1415_p2;
reg   [9:0] tmp_118_reg_1697;
wire   [31:0] tmp_14_fu_1424_p6;
reg   [31:0] tmp_14_reg_1702;
wire   [31:0] j_5_fu_1438_p2;
reg   [3:0] round_1_phi_fu_252_p18;
reg   [3:0] nb_1_phi_fu_284_p18;
reg   [3:0] j_phi_fu_316_p18;
reg   [3:0] j_reg_313;
reg   [3:0] j4_reg_346;
reg   [2:0] i_reg_357;
wire   [0:0] ap_CS_fsm_state4;
reg   [31:0] j_1_reg_368;
wire   [31:0] temp_2_cast_fu_1113_p1;
reg   [31:0] temp_22_phi_fu_381_p4;
reg   [31:0] temp_22_reg_378;
wire   [31:0] temp_1_cast_fu_1109_p1;
reg   [31:0] temp_12_phi_fu_391_p4;
reg   [31:0] temp_12_reg_388;
wire   [31:0] temp_0_1_cast_fu_1104_p1;
reg   [31:0] temp_02_phi_fu_401_p4;
reg   [31:0] temp_02_reg_398;
wire   [31:0] Sbox_load_3_cast_fu_1118_p1;
reg   [31:0] temp_3_phi_fu_411_p4;
reg   [31:0] temp_3_reg_408;
reg   [31:0] temp_31_reg_418;
reg   [31:0] temp_2_s_reg_429;
reg   [31:0] temp_3_5_reg_440;
reg   [31:0] temp_3_8_reg_451;
reg   [2:0] i_1_reg_462;
reg   [31:0] temp_3_2_reg_473;
reg   [31:0] temp_2_3_reg_485;
reg   [31:0] temp_1_3_reg_497;
reg   [31:0] temp_0_3_reg_509;
reg   [2:0] i_2_reg_521;
wire   [0:0] ap_CS_fsm_state82;
wire   [63:0] sum_cast_fu_675_p1;
wire  signed [63:0] tmp_68_cast_fu_711_p1;
wire  signed [63:0] tmp_61_cast1_fu_756_p1;
wire  signed [63:0] tmp_63_cast_fu_767_p1;
wire  signed [63:0] tmp_64_cast_fu_778_p1;
wire  signed [63:0] tmp_52_fu_741_p1;
wire  signed [63:0] tmp_77_cast_fu_928_p1;
wire  signed [63:0] tmp_86_cast_fu_932_p1;
wire  signed [63:0] tmp_55_fu_1086_p1;
wire  signed [63:0] tmp_95_cast_fu_1091_p1;
wire  signed [63:0] tmp_104_cast_fu_1095_p1;
wire  signed [63:0] tmp_113_cast_fu_1263_p1;
wire  signed [63:0] tmp_117_cast_fu_1410_p1;
wire  signed [63:0] tmp_118_cast_fu_1444_p1;
wire   [0:0] ap_CS_fsm_state74;
wire   [31:0] tmp_60_fu_1448_p2;
wire   [31:0] grp_fu_540_p2;
wire   [5:0] grp_fu_546_p4;
wire   [31:0] grp_fu_570_p2;
wire   [5:0] grp_fu_576_p4;
wire   [2:0] tmp_fu_616_p1;
wire   [3:0] tmp_45_fu_632_p0;
wire   [3:0] tmp_45_fu_632_p1;
wire   [7:0] tmp_45_fu_632_p2;
wire   [4:0] i_cast_fu_646_p1;
wire   [4:0] tmp_48_fu_662_p2;
wire   [5:0] sum_fu_667_p3;
wire   [5:0] tmp_64_fu_688_p3;
wire   [9:0] tmp_63_fu_680_p3;
wire   [9:0] p_shl4_cast_fu_696_p1;
wire   [9:0] tmp_65_fu_700_p2;
wire   [0:0] ap_CS_fsm_state5;
wire   [4:0] grp_fu_720_p1;
wire   [3:0] grp_fu_720_p2;
wire   [31:0] tmp_51_fu_735_p2;
wire   [9:0] tmp_59_fu_746_p1;
wire   [9:0] tmp_57_fu_750_p2;
wire   [9:0] tmp_61_fu_761_p2;
wire   [9:0] tmp_62_fu_772_p2;
wire   [4:0] grp_fu_783_p1;
wire   [3:0] tmp_69_fu_792_p1;
wire   [9:0] tmp_70_fu_796_p3;
wire   [3:0] tmp_68_fu_788_p1;
wire   [0:0] grp_fu_532_p3;
wire   [9:0] tmp_71_fu_804_p2;
wire   [9:0] tmp_72_fu_810_p3;
wire   [5:0] grp_fu_556_p2;
wire   [5:0] tmp_74_fu_826_p4;
wire   [5:0] tmp_75_fu_836_p3;
wire   [9:0] tmp_76_cast_fu_844_p3;
wire   [9:0] tmp_73_fu_818_p3;
wire   [3:0] tmp_80_fu_862_p1;
wire   [9:0] tmp_81_fu_866_p3;
wire   [3:0] tmp_79_fu_858_p1;
wire   [0:0] grp_fu_562_p3;
wire   [9:0] tmp_82_fu_874_p2;
wire   [9:0] tmp_83_fu_880_p3;
wire   [5:0] grp_fu_586_p2;
wire   [5:0] tmp_85_fu_896_p4;
wire   [5:0] tmp_87_fu_906_p3;
wire   [9:0] tmp_85_cast_fu_914_p3;
wire   [9:0] tmp_84_fu_888_p3;
wire   [3:0] tmp_90_fu_940_p1;
wire   [9:0] tmp_91_fu_944_p3;
wire   [3:0] tmp_89_fu_936_p1;
wire   [9:0] tmp_92_fu_952_p2;
wire   [9:0] tmp_93_fu_958_p3;
wire   [5:0] tmp_96_fu_974_p4;
wire   [5:0] tmp_97_fu_984_p3;
wire   [9:0] tmp_94_cast_fu_992_p3;
wire   [9:0] tmp_94_fu_966_p3;
wire   [3:0] tmp_100_fu_1010_p1;
wire   [9:0] tmp_101_fu_1014_p3;
wire   [3:0] tmp_99_fu_1006_p1;
wire   [9:0] tmp_102_fu_1022_p2;
wire   [9:0] tmp_103_fu_1028_p3;
wire   [5:0] tmp_106_fu_1044_p4;
wire   [5:0] tmp_107_fu_1054_p3;
wire   [9:0] tmp_103_cast_fu_1062_p3;
wire   [9:0] tmp_105_fu_1036_p3;
wire   [30:0] grp_fu_783_p2;
wire   [30:0] tmp_77_fu_1076_p1;
wire   [30:0] tmp_54_fu_1080_p2;
wire   [7:0] temp_0_fu_1099_p2;
wire   [0:0] tmp_56_fu_1123_p2;
wire   [1:0] in_assign_4_fu_1149_p5;
wire   [31:0] in_assign_4_fu_1149_p6;
wire   [31:0] p_neg3_fu_1175_p2;
wire   [3:0] tmp_111_fu_1181_p1;
wire   [9:0] tmp_112_fu_1185_p3;
wire   [3:0] tmp_110_fu_1171_p1;
wire   [0:0] tmp_109_fu_1163_p3;
wire   [9:0] tmp_119_fu_1193_p2;
wire   [9:0] tmp_120_fu_1199_p3;
wire   [5:0] p_lshr_i3_cast_fu_1215_p4;
wire   [5:0] p_neg_t_i3_fu_1225_p2;
wire   [5:0] tmp_122_fu_1231_p4;
wire   [5:0] tmp_123_fu_1241_p3;
wire   [9:0] tmp_112_cast_fu_1249_p3;
wire   [9:0] tmp_121_fu_1207_p3;
wire   [9:0] tmp_113_fu_1257_p2;
wire   [9:0] tmp_124_fu_1268_p1;
wire   [9:0] tmp_125_fu_1272_p1;
wire   [0:0] sel_tmp1_fu_1300_p2;
wire   [0:0] sel_tmp9_fu_1295_p2;
wire   [0:0] sel_tmp_fu_1290_p2;
wire   [31:0] temp_3_10_cast_fu_1286_p1;
wire   [0:0] or_cond_fu_1305_p2;
wire   [31:0] newSel_fu_1311_p3;
wire   [31:0] newSel2_fu_1327_p3;
wire   [31:0] temp_3_6_fu_1343_p3;
wire   [5:0] tmp_115_fu_1387_p3;
wire   [9:0] tmp_114_fu_1379_p3;
wire   [9:0] p_shl2_cast_fu_1395_p1;
wire   [9:0] tmp_116_fu_1399_p2;
wire   [9:0] tmp_117_fu_1405_p2;
wire   [1:0] tmp_14_fu_1424_p5;
wire   [0:0] tmp_47_fu_715_p2;
reg    grp_fu_720_ap_start;
wire    grp_fu_720_ap_done;
reg    grp_fu_783_ap_start;
wire    grp_fu_783_ap_done;
reg   [81:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 82'b1;
end

KeySchedule_Sbox #(
    .DataWidth( 8 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
Sbox_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(Sbox_address0),
    .ce0(Sbox_ce0),
    .q0(Sbox_q0),
    .address1(Sbox_address1),
    .ce1(Sbox_ce1),
    .q1(Sbox_q1)
);

KeySchedule_Rcon0 #(
    .DataWidth( 8 ),
    .AddressRange( 30 ),
    .AddressWidth( 5 ))
Rcon0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(Rcon0_address0),
    .ce0(Rcon0_ce0),
    .q0(Rcon0_q0)
);

encrypt1_srem_32nbkb #(
    .ID( 1 ),
    .NUM_STAGE( 36 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 5 ),
    .dout_WIDTH( 4 ))
encrypt1_srem_32nbkb_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .start(grp_fu_720_ap_start),
    .done(grp_fu_720_ap_done),
    .din0(j_1_reg_368),
    .din1(grp_fu_720_p1),
    .ce(1'b1),
    .dout(grp_fu_720_p2)
);

encrypt1_sdiv_32ncud #(
    .ID( 1 ),
    .NUM_STAGE( 36 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 5 ),
    .dout_WIDTH( 31 ))
encrypt1_sdiv_32ncud_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .start(grp_fu_783_ap_start),
    .done(grp_fu_783_ap_done),
    .din0(j_1_reg_368),
    .din1(grp_fu_783_p1),
    .ce(1'b1),
    .dout(grp_fu_783_p2)
);

encrypt1_mux_42_3dEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
encrypt1_mux_42_3dEe_U3(
    .din1(temp_3_8_reg_451),
    .din2(temp_3_5_reg_440),
    .din3(temp_2_s_reg_429),
    .din4(temp_31_reg_418),
    .din5(in_assign_4_fu_1149_p5),
    .dout(in_assign_4_fu_1149_p6)
);

encrypt1_mux_42_3dEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
encrypt1_mux_42_3dEe_U4(
    .din1(temp_0_3_reg_509),
    .din2(temp_1_3_reg_497),
    .din3(temp_2_3_reg_485),
    .din4(temp_3_2_reg_473),
    .din5(tmp_14_fu_1424_p5),
    .dout(tmp_14_fu_1424_p6)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state78) & ~(1'b0 == or_cond_35_fu_1128_p2))) begin
        i_1_reg_462 <= ap_const_lv3_0;
    end else if ((1'b1 == ap_CS_fsm_state80)) begin
        i_1_reg_462 <= i_5_reg_1637;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state82)) begin
        i_2_reg_521 <= i_6_reg_1687;
    end else if (((1'b1 == ap_CS_fsm_state79) & ((1'b0 == or_cond_35_reg_1630) | ~(1'b0 == exitcond1_fu_1133_p2)))) begin
        i_2_reg_521 <= ap_const_lv3_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (exitcond3_fu_604_p2 == 1'b0))) begin
        i_reg_357 <= ap_const_lv3_0;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        i_reg_357 <= i_4_reg_1506;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & ~(1'b0 == exitcond2_fu_650_p2))) begin
        j4_reg_346 <= j_4_reg_1478;
    end else if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0) & ((type_read_read_fu_110_p2 == ap_const_lv32_1F480) | (type_read_read_fu_110_p2 == ap_const_lv32_1F4C0) | (type_read_read_fu_110_p2 == ap_const_lv32_1F500) | (type_read_read_fu_110_p2 == ap_const_lv32_2EE80) | (type_read_read_fu_110_p2 == ap_const_lv32_2EEC0) | (type_read_read_fu_110_p2 == ap_const_lv32_2EF00) | (type_read_read_fu_110_p2 == ap_const_lv32_3E880) | (type_read_read_fu_110_p2 == ap_const_lv32_3E8C0) | (type_read_read_fu_110_p2 == ap_const_lv32_3E900)))) begin
        j4_reg_346 <= ap_const_lv4_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & ~(exitcond3_fu_604_p2 == 1'b0))) begin
        j_1_reg_368 <= j_cast_reg_1468;
    end else if (((1'b1 == ap_CS_fsm_state81) & ~(1'b0 == exitcond_fu_1367_p2))) begin
        j_1_reg_368 <= j_5_fu_1438_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0) & (type_read_read_fu_110_p2 == ap_const_lv32_1F500)) | ((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0) & (type_read_read_fu_110_p2 == ap_const_lv32_1F4C0)) | ((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0) & (type_read_read_fu_110_p2 == ap_const_lv32_1F480)))) begin
                j_reg_313[1] <= 1'b0;
        j_reg_313[2] <= 1'b1;
        j_reg_313[3] <= 1'b0;
    end else if ((((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0) & (type_read_read_fu_110_p2 == ap_const_lv32_2EF00)) | ((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0) & (type_read_read_fu_110_p2 == ap_const_lv32_2EEC0)) | ((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0) & (type_read_read_fu_110_p2 == ap_const_lv32_2EE80)))) begin
                j_reg_313[1] <= 1'b1;
        j_reg_313[2] <= 1'b1;
        j_reg_313[3] <= 1'b0;
    end else if ((((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0) & (type_read_read_fu_110_p2 == ap_const_lv32_3E900)) | ((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0) & (type_read_read_fu_110_p2 == ap_const_lv32_3E8C0)) | ((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0) & (type_read_read_fu_110_p2 == ap_const_lv32_3E880)))) begin
                j_reg_313[1] <= 1'b0;
        j_reg_313[2] <= 1'b0;
        j_reg_313[3] <= 1'b1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state42)) begin
        temp_02_reg_398 <= temp_0_1_reg_1555;
    end else if (((1'b1 == ap_CS_fsm_state78) & ~(1'b0 == tmp_50_reg_1529))) begin
        temp_02_reg_398 <= temp_0_1_cast_fu_1104_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state79) & ~(1'b0 == or_cond_35_reg_1630) & ~(1'b0 == exitcond1_fu_1133_p2))) begin
        temp_0_3_reg_509 <= temp_3_8_reg_451;
    end else if (((1'b1 == ap_CS_fsm_state78) & (1'b0 == or_cond_35_fu_1128_p2))) begin
        temp_0_3_reg_509 <= temp_02_phi_fu_401_p4;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state42)) begin
        temp_12_reg_388 <= temp_1_1_reg_1560;
    end else if (((1'b1 == ap_CS_fsm_state78) & ~(1'b0 == tmp_50_reg_1529))) begin
        temp_12_reg_388 <= temp_1_cast_fu_1109_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state79) & ~(1'b0 == or_cond_35_reg_1630) & ~(1'b0 == exitcond1_fu_1133_p2))) begin
        temp_1_3_reg_497 <= temp_3_5_reg_440;
    end else if (((1'b1 == ap_CS_fsm_state78) & (1'b0 == or_cond_35_fu_1128_p2))) begin
        temp_1_3_reg_497 <= temp_12_phi_fu_391_p4;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state42)) begin
        temp_22_reg_378 <= word_q1;
    end else if (((1'b1 == ap_CS_fsm_state78) & ~(1'b0 == tmp_50_reg_1529))) begin
        temp_22_reg_378 <= temp_2_cast_fu_1113_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state79) & ~(1'b0 == or_cond_35_reg_1630) & ~(1'b0 == exitcond1_fu_1133_p2))) begin
        temp_2_3_reg_485 <= temp_2_s_reg_429;
    end else if (((1'b1 == ap_CS_fsm_state78) & (1'b0 == or_cond_35_fu_1128_p2))) begin
        temp_2_3_reg_485 <= temp_22_phi_fu_381_p4;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state78) & ~(1'b0 == or_cond_35_fu_1128_p2))) begin
        temp_2_s_reg_429 <= temp_22_phi_fu_381_p4;
    end else if ((1'b1 == ap_CS_fsm_state80)) begin
        temp_2_s_reg_429 <= temp_3_4_fu_1335_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state78) & ~(1'b0 == or_cond_35_fu_1128_p2))) begin
        temp_31_reg_418 <= temp_3_phi_fu_411_p4;
    end else if ((1'b1 == ap_CS_fsm_state80)) begin
        temp_31_reg_418 <= temp_3_3_fu_1319_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state79) & ~(1'b0 == or_cond_35_reg_1630) & ~(1'b0 == exitcond1_fu_1133_p2))) begin
        temp_3_2_reg_473 <= temp_31_reg_418;
    end else if (((1'b1 == ap_CS_fsm_state78) & (1'b0 == or_cond_35_fu_1128_p2))) begin
        temp_3_2_reg_473 <= temp_3_phi_fu_411_p4;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state78) & ~(1'b0 == or_cond_35_fu_1128_p2))) begin
        temp_3_5_reg_440 <= temp_12_phi_fu_391_p4;
    end else if ((1'b1 == ap_CS_fsm_state80)) begin
        temp_3_5_reg_440 <= temp_3_7_fu_1351_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state78) & ~(1'b0 == or_cond_35_fu_1128_p2))) begin
        temp_3_8_reg_451 <= temp_02_phi_fu_401_p4;
    end else if ((1'b1 == ap_CS_fsm_state80)) begin
        temp_3_8_reg_451 <= temp_3_9_fu_1359_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state42)) begin
        temp_3_reg_408 <= word_q0;
    end else if (((1'b1 == ap_CS_fsm_state78) & ~(1'b0 == tmp_50_reg_1529))) begin
        temp_3_reg_408 <= Sbox_load_3_cast_fu_1118_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state77)) begin
        Sbox_load_reg_1605 <= Sbox_q0;
        temp_1_reg_1615 <= Sbox_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        i_4_reg_1506 <= i_4_fu_656_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state79) & ~(1'b0 == or_cond_35_reg_1630))) begin
        i_5_reg_1637 <= i_5_fu_1139_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state81)) begin
        i_6_reg_1687 <= i_6_fu_1373_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        j_4_reg_1478 <= j_4_fu_610_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0) & ((type_read_read_fu_110_p2 == ap_const_lv32_1F480) | (type_read_read_fu_110_p2 == ap_const_lv32_1F4C0) | (type_read_read_fu_110_p2 == ap_const_lv32_1F500) | (type_read_read_fu_110_p2 == ap_const_lv32_2EE80) | (type_read_read_fu_110_p2 == ap_const_lv32_2EEC0) | (type_read_read_fu_110_p2 == ap_const_lv32_2EF00) | (type_read_read_fu_110_p2 == ap_const_lv32_3E880) | (type_read_read_fu_110_p2 == ap_const_lv32_3E8C0) | (type_read_read_fu_110_p2 == ap_const_lv32_3E900)))) begin
        j_cast_reg_1468[3 : 0] <= j_cast_fu_600_p1[3 : 0];
        nb_cast_cast_reg_1463[3 : 0] <= nb_cast_cast_fu_596_p1[3 : 0];
        round_cast_cast_reg_1458[3 : 0] <= round_cast_cast_fu_592_p1[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state78)) begin
        or_cond_35_reg_1630 <= or_cond_35_fu_1128_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        temp_0_1_reg_1555 <= word_q0;
        temp_1_1_reg_1560 <= word_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state76)) begin
        tmp_104_reg_1600 <= tmp_104_fu_1070_p2;
        tmp_95_reg_1595 <= tmp_95_fu_1000_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state79) & ~(1'b0 == or_cond_35_reg_1630) & (1'b0 == exitcond1_fu_1133_p2))) begin
        tmp_108_reg_1642 <= tmp_108_fu_1145_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state81) & (1'b0 == exitcond_fu_1367_p2))) begin
        tmp_118_reg_1697 <= tmp_118_fu_1415_p2;
        tmp_14_reg_1702 <= tmp_14_fu_1424_p6;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state79) & ((1'b0 == or_cond_35_reg_1630) | ~(1'b0 == exitcond1_fu_1133_p2)))) begin
        tmp_126_reg_1654 <= tmp_126_fu_1276_p2;
        tmp_127_reg_1659 <= tmp_127_fu_1282_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (exitcond3_fu_604_p2 == 1'b0))) begin
        tmp_44_cast_reg_1488[3 : 0] <= tmp_44_cast_fu_628_p1[3 : 0];
        tmp_s_reg_1483[4 : 2] <= tmp_s_fu_620_p3[4 : 2];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & ~(exitcond3_fu_604_p2 == 1'b0))) begin
        tmp_46_reg_1498 <= tmp_46_fu_640_p2;
        tmp_61_cast_reg_1493[7 : 0] <= tmp_61_cast_fu_636_p1[7 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state40)) begin
        tmp_50_reg_1529 <= tmp_50_fu_729_p2;
        tmp_58_reg_1524 <= tmp_58_fu_725_p1;
        word_addr_4_reg_1533 <= tmp_61_cast1_fu_756_p1;
        word_addr_5_reg_1538 <= tmp_63_cast_fu_767_p1;
        word_addr_6_reg_1544 <= tmp_64_cast_fu_778_p1;
        word_addr_7_reg_1550 <= tmp_52_fu_741_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (1'b0 == exitcond2_fu_650_p2))) begin
        tmp_66_reg_1516 <= tmp_66_fu_706_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state75)) begin
        tmp_76_reg_1575 <= tmp_76_fu_852_p2;
        tmp_86_reg_1580 <= tmp_86_fu_922_p2;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state77)) begin
        Rcon0_ce0 = 1'b1;
    end else begin
        Rcon0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state79)) begin
        Sbox_address0 = tmp_113_cast_fu_1263_p1;
    end else if ((1'b1 == ap_CS_fsm_state77)) begin
        Sbox_address0 = tmp_95_cast_fu_1091_p1;
    end else if ((1'b1 == ap_CS_fsm_state76)) begin
        Sbox_address0 = tmp_77_cast_fu_928_p1;
    end else begin
        Sbox_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state77)) begin
        Sbox_address1 = tmp_104_cast_fu_1095_p1;
    end else if ((1'b1 == ap_CS_fsm_state76)) begin
        Sbox_address1 = tmp_86_cast_fu_932_p1;
    end else begin
        Sbox_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state76) | (1'b1 == ap_CS_fsm_state77) | (1'b1 == ap_CS_fsm_state79))) begin
        Sbox_ce0 = 1'b1;
    end else begin
        Sbox_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state76) | (1'b1 == ap_CS_fsm_state77))) begin
        Sbox_ce1 = 1'b1;
    end else begin
        Sbox_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_start) & (ap_CS_fsm_state1 == 1'b1)) | ((1'b1 == ap_CS_fsm_state5) & ((1'b0 == tmp_47_fu_715_p2) | (~(type_read_read_fu_110_p2 == ap_const_lv32_1F480) & ~(type_read_read_fu_110_p2 == ap_const_lv32_1F4C0) & ~(type_read_read_fu_110_p2 == ap_const_lv32_1F500) & ~(type_read_read_fu_110_p2 == ap_const_lv32_2EE80) & ~(type_read_read_fu_110_p2 == ap_const_lv32_2EEC0) & ~(type_read_read_fu_110_p2 == ap_const_lv32_2EF00) & ~(type_read_read_fu_110_p2 == ap_const_lv32_3E880) & ~(type_read_read_fu_110_p2 == ap_const_lv32_3E8C0) & ~(type_read_read_fu_110_p2 == ap_const_lv32_3E900)))))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (ap_CS_fsm_state1 == 1'b1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) & ((1'b0 == tmp_47_fu_715_p2) | (~(type_read_read_fu_110_p2 == ap_const_lv32_1F480) & ~(type_read_read_fu_110_p2 == ap_const_lv32_1F4C0) & ~(type_read_read_fu_110_p2 == ap_const_lv32_1F500) & ~(type_read_read_fu_110_p2 == ap_const_lv32_2EE80) & ~(type_read_read_fu_110_p2 == ap_const_lv32_2EEC0) & ~(type_read_read_fu_110_p2 == ap_const_lv32_2EF00) & ~(type_read_read_fu_110_p2 == ap_const_lv32_3E880) & ~(type_read_read_fu_110_p2 == ap_const_lv32_3E8C0) & ~(type_read_read_fu_110_p2 == ap_const_lv32_3E900))))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) & (((type_read_read_fu_110_p2 == ap_const_lv32_1F480) & ~(1'b0 == tmp_47_fu_715_p2)) | ((type_read_read_fu_110_p2 == ap_const_lv32_1F4C0) & ~(1'b0 == tmp_47_fu_715_p2)) | ((type_read_read_fu_110_p2 == ap_const_lv32_1F500) & ~(1'b0 == tmp_47_fu_715_p2)) | ((type_read_read_fu_110_p2 == ap_const_lv32_2EE80) & ~(1'b0 == tmp_47_fu_715_p2)) | ((type_read_read_fu_110_p2 == ap_const_lv32_2EEC0) & ~(1'b0 == tmp_47_fu_715_p2)) | ((type_read_read_fu_110_p2 == ap_const_lv32_2EF00) & ~(1'b0 == tmp_47_fu_715_p2)) | ((type_read_read_fu_110_p2 == ap_const_lv32_3E880) & ~(1'b0 == tmp_47_fu_715_p2)) | ((type_read_read_fu_110_p2 == ap_const_lv32_3E8C0) & ~(1'b0 == tmp_47_fu_715_p2)) | ((type_read_read_fu_110_p2 == ap_const_lv32_3E900) & ~(1'b0 == tmp_47_fu_715_p2))))) begin
        grp_fu_720_ap_start = 1'b1;
    end else begin
        grp_fu_720_ap_start = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state40) & ~(1'b0 == tmp_50_fu_729_p2))) begin
        grp_fu_783_ap_start = 1'b1;
    end else begin
        grp_fu_783_ap_start = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_CS_fsm_state1 == 1'b1) & (type_read_read_fu_110_p2 == ap_const_lv32_1F500)) | ((ap_CS_fsm_state1 == 1'b1) & (type_read_read_fu_110_p2 == ap_const_lv32_1F4C0)) | ((ap_CS_fsm_state1 == 1'b1) & (type_read_read_fu_110_p2 == ap_const_lv32_1F480)))) begin
        j_phi_fu_316_p18 = ap_const_lv4_4;
    end else if ((((ap_CS_fsm_state1 == 1'b1) & (type_read_read_fu_110_p2 == ap_const_lv32_2EF00)) | ((ap_CS_fsm_state1 == 1'b1) & (type_read_read_fu_110_p2 == ap_const_lv32_2EEC0)) | ((ap_CS_fsm_state1 == 1'b1) & (type_read_read_fu_110_p2 == ap_const_lv32_2EE80)))) begin
        j_phi_fu_316_p18 = ap_const_lv4_6;
    end else if ((((ap_CS_fsm_state1 == 1'b1) & (type_read_read_fu_110_p2 == ap_const_lv32_3E900)) | ((ap_CS_fsm_state1 == 1'b1) & (type_read_read_fu_110_p2 == ap_const_lv32_3E8C0)) | ((ap_CS_fsm_state1 == 1'b1) & (type_read_read_fu_110_p2 == ap_const_lv32_3E880)))) begin
        j_phi_fu_316_p18 = ap_const_lv4_8;
    end else begin
        j_phi_fu_316_p18 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        key_ce0 = 1'b1;
    end else begin
        key_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_CS_fsm_state1 == 1'b1) & (type_read_read_fu_110_p2 == ap_const_lv32_3E880)) | ((ap_CS_fsm_state1 == 1'b1) & (type_read_read_fu_110_p2 == ap_const_lv32_2EE80)) | ((ap_CS_fsm_state1 == 1'b1) & (type_read_read_fu_110_p2 == ap_const_lv32_1F480)))) begin
        nb_1_phi_fu_284_p18 = ap_const_lv4_4;
    end else if ((((ap_CS_fsm_state1 == 1'b1) & (type_read_read_fu_110_p2 == ap_const_lv32_3E8C0)) | ((ap_CS_fsm_state1 == 1'b1) & (type_read_read_fu_110_p2 == ap_const_lv32_2EEC0)) | ((ap_CS_fsm_state1 == 1'b1) & (type_read_read_fu_110_p2 == ap_const_lv32_1F4C0)))) begin
        nb_1_phi_fu_284_p18 = ap_const_lv4_6;
    end else if ((((ap_CS_fsm_state1 == 1'b1) & (type_read_read_fu_110_p2 == ap_const_lv32_3E900)) | ((ap_CS_fsm_state1 == 1'b1) & (type_read_read_fu_110_p2 == ap_const_lv32_2EF00)) | ((ap_CS_fsm_state1 == 1'b1) & (type_read_read_fu_110_p2 == ap_const_lv32_1F500)))) begin
        nb_1_phi_fu_284_p18 = ap_const_lv4_8;
    end else begin
        nb_1_phi_fu_284_p18 = 'bx;
    end
end

always @ (*) begin
    if (((ap_CS_fsm_state1 == 1'b1) & (type_read_read_fu_110_p2 == ap_const_lv32_1F480))) begin
        round_1_phi_fu_252_p18 = ap_const_lv4_B;
    end else if ((((ap_CS_fsm_state1 == 1'b1) & (type_read_read_fu_110_p2 == ap_const_lv32_2EEC0)) | ((ap_CS_fsm_state1 == 1'b1) & (type_read_read_fu_110_p2 == ap_const_lv32_2EE80)) | ((ap_CS_fsm_state1 == 1'b1) & (type_read_read_fu_110_p2 == ap_const_lv32_1F4C0)))) begin
        round_1_phi_fu_252_p18 = ap_const_lv4_D;
    end else if ((((ap_CS_fsm_state1 == 1'b1) & (type_read_read_fu_110_p2 == ap_const_lv32_3E900)) | ((ap_CS_fsm_state1 == 1'b1) & (type_read_read_fu_110_p2 == ap_const_lv32_3E8C0)) | ((ap_CS_fsm_state1 == 1'b1) & (type_read_read_fu_110_p2 == ap_const_lv32_3E880)) | ((ap_CS_fsm_state1 == 1'b1) & (type_read_read_fu_110_p2 == ap_const_lv32_2EF00)) | ((ap_CS_fsm_state1 == 1'b1) & (type_read_read_fu_110_p2 == ap_const_lv32_1F500)))) begin
        round_1_phi_fu_252_p18 = ap_const_lv4_F;
    end else begin
        round_1_phi_fu_252_p18 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state78) & ~(1'b0 == tmp_50_reg_1529))) begin
        temp_02_phi_fu_401_p4 = temp_0_1_cast_fu_1104_p1;
    end else begin
        temp_02_phi_fu_401_p4 = temp_02_reg_398;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state78) & ~(1'b0 == tmp_50_reg_1529))) begin
        temp_12_phi_fu_391_p4 = temp_1_cast_fu_1109_p1;
    end else begin
        temp_12_phi_fu_391_p4 = temp_12_reg_388;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state78) & ~(1'b0 == tmp_50_reg_1529))) begin
        temp_22_phi_fu_381_p4 = temp_2_cast_fu_1113_p1;
    end else begin
        temp_22_phi_fu_381_p4 = temp_22_reg_378;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state78) & ~(1'b0 == tmp_50_reg_1529))) begin
        temp_3_phi_fu_411_p4 = Sbox_load_3_cast_fu_1118_p1;
    end else begin
        temp_3_phi_fu_411_p4 = temp_3_reg_408;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state82)) begin
        word_address0 = tmp_118_cast_fu_1444_p1;
    end else if ((1'b1 == ap_CS_fsm_state75)) begin
        word_address0 = word_addr_7_reg_1550;
    end else if ((1'b1 == ap_CS_fsm_state74)) begin
        word_address0 = word_addr_5_reg_1538;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        word_address0 = word_addr_6_reg_1544;
    end else if ((1'b1 == ap_CS_fsm_state40)) begin
        word_address0 = tmp_52_fu_741_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        word_address0 = tmp_68_cast_fu_711_p1;
    end else begin
        word_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state81)) begin
        word_address1 = tmp_117_cast_fu_1410_p1;
    end else if ((1'b1 == ap_CS_fsm_state75)) begin
        word_address1 = word_addr_6_reg_1544;
    end else if ((1'b1 == ap_CS_fsm_state74)) begin
        word_address1 = word_addr_4_reg_1533;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        word_address1 = word_addr_5_reg_1538;
    end else if ((1'b1 == ap_CS_fsm_state40)) begin
        word_address1 = tmp_61_cast1_fu_756_p1;
    end else begin
        word_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state75) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state82) | (1'b1 == ap_CS_fsm_state74))) begin
        word_ce0 = 1'b1;
    end else begin
        word_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state75) | (1'b1 == ap_CS_fsm_state81) | (1'b1 == ap_CS_fsm_state74))) begin
        word_ce1 = 1'b1;
    end else begin
        word_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state82)) begin
        word_d0 = tmp_60_fu_1448_p2;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        word_d0 = key_q0;
    end else begin
        word_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state82))) begin
        word_we0 = 1'b1;
    end else begin
        word_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~(ap_start == 1'b0) & ((type_read_read_fu_110_p2 == ap_const_lv32_1F480) | (type_read_read_fu_110_p2 == ap_const_lv32_1F4C0) | (type_read_read_fu_110_p2 == ap_const_lv32_1F500) | (type_read_read_fu_110_p2 == ap_const_lv32_2EE80) | (type_read_read_fu_110_p2 == ap_const_lv32_2EEC0) | (type_read_read_fu_110_p2 == ap_const_lv32_2EF00) | (type_read_read_fu_110_p2 == ap_const_lv32_3E880) | (type_read_read_fu_110_p2 == ap_const_lv32_3E8C0) | (type_read_read_fu_110_p2 == ap_const_lv32_3E900)))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else if ((~(ap_start == 1'b0) & ~(type_read_read_fu_110_p2 == ap_const_lv32_1F480) & ~(type_read_read_fu_110_p2 == ap_const_lv32_1F4C0) & ~(type_read_read_fu_110_p2 == ap_const_lv32_1F500) & ~(type_read_read_fu_110_p2 == ap_const_lv32_2EE80) & ~(type_read_read_fu_110_p2 == ap_const_lv32_2EEC0) & ~(type_read_read_fu_110_p2 == ap_const_lv32_2EF00) & ~(type_read_read_fu_110_p2 == ap_const_lv32_3E880) & ~(type_read_read_fu_110_p2 == ap_const_lv32_3E8C0) & ~(type_read_read_fu_110_p2 == ap_const_lv32_3E900))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (~(exitcond3_fu_604_p2 == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if (~(1'b0 == exitcond2_fu_650_p2)) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state5 : begin
            if (((1'b0 == tmp_47_fu_715_p2) | (~(type_read_read_fu_110_p2 == ap_const_lv32_1F480) & ~(type_read_read_fu_110_p2 == ap_const_lv32_1F4C0) & ~(type_read_read_fu_110_p2 == ap_const_lv32_1F500) & ~(type_read_read_fu_110_p2 == ap_const_lv32_2EE80) & ~(type_read_read_fu_110_p2 == ap_const_lv32_2EEC0) & ~(type_read_read_fu_110_p2 == ap_const_lv32_2EF00) & ~(type_read_read_fu_110_p2 == ap_const_lv32_3E880) & ~(type_read_read_fu_110_p2 == ap_const_lv32_3E8C0) & ~(type_read_read_fu_110_p2 == ap_const_lv32_3E900)))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            if (~(1'b0 == tmp_50_fu_729_p2)) begin
                ap_NS_fsm = ap_ST_fsm_state43;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state41;
            end
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state78;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state54;
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_state59;
        end
        ap_ST_fsm_state59 : begin
            ap_NS_fsm = ap_ST_fsm_state60;
        end
        ap_ST_fsm_state60 : begin
            ap_NS_fsm = ap_ST_fsm_state61;
        end
        ap_ST_fsm_state61 : begin
            ap_NS_fsm = ap_ST_fsm_state62;
        end
        ap_ST_fsm_state62 : begin
            ap_NS_fsm = ap_ST_fsm_state63;
        end
        ap_ST_fsm_state63 : begin
            ap_NS_fsm = ap_ST_fsm_state64;
        end
        ap_ST_fsm_state64 : begin
            ap_NS_fsm = ap_ST_fsm_state65;
        end
        ap_ST_fsm_state65 : begin
            ap_NS_fsm = ap_ST_fsm_state66;
        end
        ap_ST_fsm_state66 : begin
            ap_NS_fsm = ap_ST_fsm_state67;
        end
        ap_ST_fsm_state67 : begin
            ap_NS_fsm = ap_ST_fsm_state68;
        end
        ap_ST_fsm_state68 : begin
            ap_NS_fsm = ap_ST_fsm_state69;
        end
        ap_ST_fsm_state69 : begin
            ap_NS_fsm = ap_ST_fsm_state70;
        end
        ap_ST_fsm_state70 : begin
            ap_NS_fsm = ap_ST_fsm_state71;
        end
        ap_ST_fsm_state71 : begin
            ap_NS_fsm = ap_ST_fsm_state72;
        end
        ap_ST_fsm_state72 : begin
            ap_NS_fsm = ap_ST_fsm_state73;
        end
        ap_ST_fsm_state73 : begin
            ap_NS_fsm = ap_ST_fsm_state74;
        end
        ap_ST_fsm_state74 : begin
            ap_NS_fsm = ap_ST_fsm_state75;
        end
        ap_ST_fsm_state75 : begin
            ap_NS_fsm = ap_ST_fsm_state76;
        end
        ap_ST_fsm_state76 : begin
            ap_NS_fsm = ap_ST_fsm_state77;
        end
        ap_ST_fsm_state77 : begin
            ap_NS_fsm = ap_ST_fsm_state78;
        end
        ap_ST_fsm_state78 : begin
            ap_NS_fsm = ap_ST_fsm_state79;
        end
        ap_ST_fsm_state79 : begin
            if (((1'b0 == or_cond_35_reg_1630) | ~(1'b0 == exitcond1_fu_1133_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state81;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state80;
            end
        end
        ap_ST_fsm_state80 : begin
            ap_NS_fsm = ap_ST_fsm_state79;
        end
        ap_ST_fsm_state81 : begin
            if (~(1'b0 == exitcond_fu_1367_p2)) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state82;
            end
        end
        ap_ST_fsm_state82 : begin
            ap_NS_fsm = ap_ST_fsm_state81;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign Rcon0_address0 = tmp_55_fu_1086_p1;

assign Sbox_load_3_cast_fu_1118_p1 = Sbox_q1;

assign ap_CS_fsm_state1 = ap_CS_fsm[ap_const_lv32_0];

assign ap_CS_fsm_state2 = ap_CS_fsm[ap_const_lv32_1];

assign ap_CS_fsm_state3 = ap_CS_fsm[ap_const_lv32_2];

assign ap_CS_fsm_state4 = ap_CS_fsm[ap_const_lv32_3];

assign ap_CS_fsm_state40 = ap_CS_fsm[ap_const_lv32_27];

assign ap_CS_fsm_state41 = ap_CS_fsm[ap_const_lv32_28];

assign ap_CS_fsm_state42 = ap_CS_fsm[ap_const_lv32_29];

assign ap_CS_fsm_state5 = ap_CS_fsm[ap_const_lv32_4];

assign ap_CS_fsm_state74 = ap_CS_fsm[ap_const_lv32_49];

assign ap_CS_fsm_state75 = ap_CS_fsm[ap_const_lv32_4A];

assign ap_CS_fsm_state76 = ap_CS_fsm[ap_const_lv32_4B];

assign ap_CS_fsm_state77 = ap_CS_fsm[ap_const_lv32_4C];

assign ap_CS_fsm_state78 = ap_CS_fsm[ap_const_lv32_4D];

assign ap_CS_fsm_state79 = ap_CS_fsm[ap_const_lv32_4E];

assign ap_CS_fsm_state80 = ap_CS_fsm[ap_const_lv32_4F];

assign ap_CS_fsm_state81 = ap_CS_fsm[ap_const_lv32_50];

assign ap_CS_fsm_state82 = ap_CS_fsm[ap_const_lv32_51];

assign exitcond1_fu_1133_p2 = ((i_1_reg_462 == ap_const_lv3_4) ? 1'b1 : 1'b0);

assign exitcond2_fu_650_p2 = ((i_reg_357 == ap_const_lv3_4) ? 1'b1 : 1'b0);

assign exitcond3_fu_604_p2 = ((j4_reg_346 == j_reg_313) ? 1'b1 : 1'b0);

assign exitcond_fu_1367_p2 = ((i_2_reg_521 == ap_const_lv3_4) ? 1'b1 : 1'b0);

assign grp_fu_532_p3 = word_q1[ap_const_lv32_1F];

assign grp_fu_540_p2 = (ap_const_lv32_0 - word_q1);

assign grp_fu_546_p4 = {{grp_fu_540_p2[ap_const_lv32_9 : ap_const_lv32_4]}};

assign grp_fu_556_p2 = (ap_const_lv6_0 - grp_fu_546_p4);

assign grp_fu_562_p3 = word_q0[ap_const_lv32_1F];

assign grp_fu_570_p2 = (ap_const_lv32_0 - word_q0);

assign grp_fu_576_p4 = {{grp_fu_570_p2[ap_const_lv32_9 : ap_const_lv32_4]}};

assign grp_fu_586_p2 = (ap_const_lv6_0 - grp_fu_576_p4);

assign grp_fu_720_p1 = j_cast_reg_1468;

assign grp_fu_783_p1 = j_cast_reg_1468;

assign i_4_fu_656_p2 = (i_reg_357 + ap_const_lv3_1);

assign i_5_fu_1139_p2 = (i_1_reg_462 + ap_const_lv3_1);

assign i_6_fu_1373_p2 = (i_2_reg_521 + ap_const_lv3_1);

assign i_cast_fu_646_p1 = i_reg_357;

assign in_assign_4_fu_1149_p5 = i_1_reg_462[1:0];

assign j_4_fu_610_p2 = (j4_reg_346 + ap_const_lv4_1);

assign j_5_fu_1438_p2 = (j_1_reg_368 + ap_const_lv32_1);

assign j_cast_fu_600_p1 = j_phi_fu_316_p18;

assign key_address0 = sum_cast_fu_675_p1;

assign nb_cast_cast_fu_596_p1 = nb_1_phi_fu_284_p18;

assign newSel2_fu_1327_p3 = ((sel_tmp_fu_1290_p2[0:0] === 1'b1) ? temp_3_10_cast_fu_1286_p1 : temp_2_s_reg_429);

assign newSel_fu_1311_p3 = ((sel_tmp_fu_1290_p2[0:0] === 1'b1) ? temp_31_reg_418 : temp_3_10_cast_fu_1286_p1);

assign or_cond_35_fu_1128_p2 = (tmp_46_reg_1498 & tmp_56_fu_1123_p2);

assign or_cond_fu_1305_p2 = (sel_tmp1_fu_1300_p2 | sel_tmp9_fu_1295_p2);

assign p_lshr_i3_cast_fu_1215_p4 = {{p_neg3_fu_1175_p2[ap_const_lv32_9 : ap_const_lv32_4]}};

assign p_neg3_fu_1175_p2 = (ap_const_lv32_0 - in_assign_4_fu_1149_p6);

assign p_neg_t_i3_fu_1225_p2 = (ap_const_lv6_0 - p_lshr_i3_cast_fu_1215_p4);

assign p_shl2_cast_fu_1395_p1 = tmp_115_fu_1387_p3;

assign p_shl4_cast_fu_696_p1 = tmp_64_fu_688_p3;

assign round_cast_cast_fu_592_p1 = round_1_phi_fu_252_p18;

assign sel_tmp1_fu_1300_p2 = ((tmp_108_reg_1642 == ap_const_lv2_0) ? 1'b1 : 1'b0);

assign sel_tmp9_fu_1295_p2 = ((tmp_108_reg_1642 == ap_const_lv2_1) ? 1'b1 : 1'b0);

assign sel_tmp_fu_1290_p2 = ((tmp_108_reg_1642 == ap_const_lv2_2) ? 1'b1 : 1'b0);

assign sum_cast_fu_675_p1 = sum_fu_667_p3;

assign sum_fu_667_p3 = {{1'b1}, {tmp_48_fu_662_p2}};

assign temp_0_1_cast_fu_1104_p1 = temp_0_fu_1099_p2;

assign temp_0_fu_1099_p2 = (Rcon0_q0 ^ Sbox_load_reg_1605);

assign temp_1_cast_fu_1109_p1 = temp_1_reg_1615;

assign temp_2_cast_fu_1113_p1 = Sbox_q0;

assign temp_3_10_cast_fu_1286_p1 = Sbox_q0;

assign temp_3_3_fu_1319_p3 = ((or_cond_fu_1305_p2[0:0] === 1'b1) ? temp_31_reg_418 : newSel_fu_1311_p3);

assign temp_3_4_fu_1335_p3 = ((or_cond_fu_1305_p2[0:0] === 1'b1) ? temp_2_s_reg_429 : newSel2_fu_1327_p3);

assign temp_3_6_fu_1343_p3 = ((sel_tmp9_fu_1295_p2[0:0] === 1'b1) ? temp_3_10_cast_fu_1286_p1 : temp_3_5_reg_440);

assign temp_3_7_fu_1351_p3 = ((sel_tmp1_fu_1300_p2[0:0] === 1'b1) ? temp_3_5_reg_440 : temp_3_6_fu_1343_p3);

assign temp_3_9_fu_1359_p3 = ((sel_tmp1_fu_1300_p2[0:0] === 1'b1) ? temp_3_10_cast_fu_1286_p1 : temp_3_8_reg_451);

assign tmp_100_fu_1010_p1 = grp_fu_570_p2[3:0];

assign tmp_101_fu_1014_p3 = {{ap_const_lv6_0}, {tmp_100_fu_1010_p1}};

assign tmp_102_fu_1022_p2 = (ap_const_lv10_0 - tmp_101_fu_1014_p3);

assign tmp_103_cast_fu_1062_p3 = {{tmp_107_fu_1054_p3}, {ap_const_lv4_0}};

assign tmp_103_fu_1028_p3 = {{ap_const_lv6_0}, {tmp_99_fu_1006_p1}};

assign tmp_104_cast_fu_1095_p1 = $signed(tmp_104_reg_1600);

assign tmp_104_fu_1070_p2 = (tmp_103_cast_fu_1062_p3 + tmp_105_fu_1036_p3);

assign tmp_105_fu_1036_p3 = ((grp_fu_562_p3[0:0] === 1'b1) ? tmp_102_fu_1022_p2 : tmp_103_fu_1028_p3);

assign tmp_106_fu_1044_p4 = {{word_q0[ap_const_lv32_9 : ap_const_lv32_4]}};

assign tmp_107_fu_1054_p3 = ((grp_fu_562_p3[0:0] === 1'b1) ? grp_fu_586_p2 : tmp_106_fu_1044_p4);

assign tmp_108_fu_1145_p1 = i_1_reg_462[1:0];

assign tmp_109_fu_1163_p3 = in_assign_4_fu_1149_p6[ap_const_lv32_1F];

assign tmp_110_fu_1171_p1 = in_assign_4_fu_1149_p6[3:0];

assign tmp_111_fu_1181_p1 = p_neg3_fu_1175_p2[3:0];

assign tmp_112_cast_fu_1249_p3 = {{tmp_123_fu_1241_p3}, {ap_const_lv4_0}};

assign tmp_112_fu_1185_p3 = {{ap_const_lv6_0}, {tmp_111_fu_1181_p1}};

assign tmp_113_cast_fu_1263_p1 = $signed(tmp_113_fu_1257_p2);

assign tmp_113_fu_1257_p2 = (tmp_112_cast_fu_1249_p3 + tmp_121_fu_1207_p3);

assign tmp_114_fu_1379_p3 = {{i_2_reg_521}, {ap_const_lv7_0}};

assign tmp_115_fu_1387_p3 = {{i_2_reg_521}, {ap_const_lv3_0}};

assign tmp_116_fu_1399_p2 = (tmp_114_fu_1379_p3 - p_shl2_cast_fu_1395_p1);

assign tmp_117_cast_fu_1410_p1 = $signed(tmp_117_fu_1405_p2);

assign tmp_117_fu_1405_p2 = (tmp_126_reg_1654 + tmp_116_fu_1399_p2);

assign tmp_118_cast_fu_1444_p1 = $signed(tmp_118_reg_1697);

assign tmp_118_fu_1415_p2 = (tmp_127_reg_1659 + tmp_116_fu_1399_p2);

assign tmp_119_fu_1193_p2 = (ap_const_lv10_0 - tmp_112_fu_1185_p3);

assign tmp_120_fu_1199_p3 = {{ap_const_lv6_0}, {tmp_110_fu_1171_p1}};

assign tmp_121_fu_1207_p3 = ((tmp_109_fu_1163_p3[0:0] === 1'b1) ? tmp_119_fu_1193_p2 : tmp_120_fu_1199_p3);

assign tmp_122_fu_1231_p4 = {{in_assign_4_fu_1149_p6[ap_const_lv32_9 : ap_const_lv32_4]}};

assign tmp_123_fu_1241_p3 = ((tmp_109_fu_1163_p3[0:0] === 1'b1) ? p_neg_t_i3_fu_1225_p2 : tmp_122_fu_1231_p4);

assign tmp_124_fu_1268_p1 = j_1_reg_368[9:0];

assign tmp_125_fu_1272_p1 = j_reg_313;

assign tmp_126_fu_1276_p2 = (tmp_124_fu_1268_p1 - tmp_125_fu_1272_p1);

assign tmp_127_fu_1282_p1 = j_1_reg_368[9:0];

assign tmp_14_fu_1424_p5 = i_2_reg_521[1:0];

assign tmp_44_cast_fu_628_p1 = j4_reg_346;

assign tmp_45_fu_632_p0 = nb_cast_cast_reg_1463;

assign tmp_45_fu_632_p1 = round_cast_cast_reg_1458;

assign tmp_45_fu_632_p2 = (tmp_45_fu_632_p0 * tmp_45_fu_632_p1);

assign tmp_46_fu_640_p2 = ((j_reg_313 > ap_const_lv4_6) ? 1'b1 : 1'b0);

assign tmp_47_fu_715_p2 = (($signed(j_1_reg_368) < $signed(tmp_61_cast_reg_1493)) ? 1'b1 : 1'b0);

assign tmp_48_fu_662_p2 = (i_cast_fu_646_p1 + tmp_s_reg_1483);

assign tmp_50_fu_729_p2 = ((tmp_58_fu_725_p1 == ap_const_lv4_0) ? 1'b1 : 1'b0);

assign tmp_51_fu_735_p2 = ($signed(ap_const_lv32_FFFFFFFF) + $signed(j_1_reg_368));

assign tmp_52_fu_741_p1 = $signed(tmp_51_fu_735_p2);

assign tmp_54_fu_1080_p2 = ($signed(ap_const_lv31_7FFFFFFF) + $signed(tmp_77_fu_1076_p1));

assign tmp_55_fu_1086_p1 = $signed(tmp_54_fu_1080_p2);

assign tmp_56_fu_1123_p2 = ((tmp_58_reg_1524 == ap_const_lv4_4) ? 1'b1 : 1'b0);

assign tmp_57_fu_750_p2 = (ap_const_lv10_78 + tmp_59_fu_746_p1);

assign tmp_58_fu_725_p1 = grp_fu_720_p2[3:0];

assign tmp_59_fu_746_p1 = tmp_51_fu_735_p2[9:0];

assign tmp_60_fu_1448_p2 = (word_q1 ^ tmp_14_reg_1702);

assign tmp_61_cast1_fu_756_p1 = $signed(tmp_57_fu_750_p2);

assign tmp_61_cast_fu_636_p1 = tmp_45_fu_632_p2;

assign tmp_61_fu_761_p2 = (ap_const_lv10_F0 + tmp_59_fu_746_p1);

assign tmp_62_fu_772_p2 = (ap_const_lv10_168 + tmp_59_fu_746_p1);

assign tmp_63_cast_fu_767_p1 = $signed(tmp_61_fu_761_p2);

assign tmp_63_fu_680_p3 = {{i_reg_357}, {ap_const_lv7_0}};

assign tmp_64_cast_fu_778_p1 = $signed(tmp_62_fu_772_p2);

assign tmp_64_fu_688_p3 = {{i_reg_357}, {ap_const_lv3_0}};

assign tmp_65_fu_700_p2 = (tmp_63_fu_680_p3 - p_shl4_cast_fu_696_p1);

assign tmp_66_fu_706_p2 = (tmp_65_fu_700_p2 + tmp_44_cast_reg_1488);

assign tmp_68_cast_fu_711_p1 = $signed(tmp_66_reg_1516);

assign tmp_68_fu_788_p1 = word_q1[3:0];

assign tmp_69_fu_792_p1 = grp_fu_540_p2[3:0];

assign tmp_70_fu_796_p3 = {{ap_const_lv6_0}, {tmp_69_fu_792_p1}};

assign tmp_71_fu_804_p2 = (ap_const_lv10_0 - tmp_70_fu_796_p3);

assign tmp_72_fu_810_p3 = {{ap_const_lv6_0}, {tmp_68_fu_788_p1}};

assign tmp_73_fu_818_p3 = ((grp_fu_532_p3[0:0] === 1'b1) ? tmp_71_fu_804_p2 : tmp_72_fu_810_p3);

assign tmp_74_fu_826_p4 = {{word_q1[ap_const_lv32_9 : ap_const_lv32_4]}};

assign tmp_75_fu_836_p3 = ((grp_fu_532_p3[0:0] === 1'b1) ? grp_fu_556_p2 : tmp_74_fu_826_p4);

assign tmp_76_cast_fu_844_p3 = {{tmp_75_fu_836_p3}, {ap_const_lv4_0}};

assign tmp_76_fu_852_p2 = (tmp_76_cast_fu_844_p3 + tmp_73_fu_818_p3);

assign tmp_77_cast_fu_928_p1 = $signed(tmp_76_reg_1575);

assign tmp_77_fu_1076_p1 = grp_fu_783_p2[30:0];

assign tmp_79_fu_858_p1 = word_q0[3:0];

assign tmp_80_fu_862_p1 = grp_fu_570_p2[3:0];

assign tmp_81_fu_866_p3 = {{ap_const_lv6_0}, {tmp_80_fu_862_p1}};

assign tmp_82_fu_874_p2 = (ap_const_lv10_0 - tmp_81_fu_866_p3);

assign tmp_83_fu_880_p3 = {{ap_const_lv6_0}, {tmp_79_fu_858_p1}};

assign tmp_84_fu_888_p3 = ((grp_fu_562_p3[0:0] === 1'b1) ? tmp_82_fu_874_p2 : tmp_83_fu_880_p3);

assign tmp_85_cast_fu_914_p3 = {{tmp_87_fu_906_p3}, {ap_const_lv4_0}};

assign tmp_85_fu_896_p4 = {{word_q0[ap_const_lv32_9 : ap_const_lv32_4]}};

assign tmp_86_cast_fu_932_p1 = $signed(tmp_86_reg_1580);

assign tmp_86_fu_922_p2 = (tmp_85_cast_fu_914_p3 + tmp_84_fu_888_p3);

assign tmp_87_fu_906_p3 = ((grp_fu_562_p3[0:0] === 1'b1) ? grp_fu_586_p2 : tmp_85_fu_896_p4);

assign tmp_89_fu_936_p1 = word_q1[3:0];

assign tmp_90_fu_940_p1 = grp_fu_540_p2[3:0];

assign tmp_91_fu_944_p3 = {{ap_const_lv6_0}, {tmp_90_fu_940_p1}};

assign tmp_92_fu_952_p2 = (ap_const_lv10_0 - tmp_91_fu_944_p3);

assign tmp_93_fu_958_p3 = {{ap_const_lv6_0}, {tmp_89_fu_936_p1}};

assign tmp_94_cast_fu_992_p3 = {{tmp_97_fu_984_p3}, {ap_const_lv4_0}};

assign tmp_94_fu_966_p3 = ((grp_fu_532_p3[0:0] === 1'b1) ? tmp_92_fu_952_p2 : tmp_93_fu_958_p3);

assign tmp_95_cast_fu_1091_p1 = $signed(tmp_95_reg_1595);

assign tmp_95_fu_1000_p2 = (tmp_94_cast_fu_992_p3 + tmp_94_fu_966_p3);

assign tmp_96_fu_974_p4 = {{word_q1[ap_const_lv32_9 : ap_const_lv32_4]}};

assign tmp_97_fu_984_p3 = ((grp_fu_532_p3[0:0] === 1'b1) ? grp_fu_556_p2 : tmp_96_fu_974_p4);

assign tmp_99_fu_1006_p1 = word_q0[3:0];

assign tmp_fu_616_p1 = j4_reg_346[2:0];

assign tmp_s_fu_620_p3 = {{tmp_fu_616_p1}, {ap_const_lv2_0}};

assign type_read_read_fu_110_p2 = type_r;

always @ (posedge ap_clk) begin
    round_cast_cast_reg_1458[7:4] <= 4'b0000;
    nb_cast_cast_reg_1463[7:4] <= 4'b0000;
    j_cast_reg_1468[31:4] <= 28'b0000000000000000000000000000;
    tmp_s_reg_1483[1:0] <= 2'b00;
    tmp_44_cast_reg_1488[9:4] <= 6'b000000;
    tmp_61_cast_reg_1493[31:8] <= 24'b000000000000000000000000;
    j_reg_313[0] <= 1'b0;
end

endmodule //KeySchedule
