/* verilator lint_off DECLFILENAME */
/* verilator lint_off WIDTH */
/* verilator lint_off STMTDLY */
/* verilator lint_off UNUSED */
// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.4
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="float64_div,hls_ip_2016_4,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xqku115-rlf1924-2-i,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.667085,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=1,HLS_SYN_DSP=24,HLS_SYN_FF=3384,HLS_SYN_LUT=7429}" *)

module float64_div (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        a,
        b,
        ap_return
);

parameter    ap_ST_fsm_state1 = 13'b1;
parameter    ap_ST_fsm_state2 = 13'b10;
parameter    ap_ST_fsm_state3 = 13'b100;
parameter    ap_ST_fsm_state4 = 13'b1000;
parameter    ap_ST_fsm_state5 = 13'b10000;
parameter    ap_ST_fsm_state6 = 13'b100000;
parameter    ap_ST_fsm_state7 = 13'b1000000;
parameter    ap_ST_fsm_state8 = 13'b10000000;
parameter    ap_ST_fsm_state9 = 13'b100000000;
parameter    ap_ST_fsm_state10 = 13'b1000000000;
parameter    ap_ST_fsm_state11 = 13'b10000000000;
parameter    ap_ST_fsm_state12 = 13'b100000000000;
parameter    ap_ST_fsm_state13 = 13'b1000000000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv32_4 = 32'b100;
parameter    ap_const_lv32_5 = 32'b101;
parameter    ap_const_lv32_7 = 32'b111;
parameter    ap_const_lv32_8 = 32'b1000;
parameter    ap_const_lv32_9 = 32'b1001;
parameter    ap_const_lv32_A = 32'b1010;
parameter    ap_const_lv64_7FFFFFFFFFFFFFFF = 64'b111111111111111111111111111111111111111111111111111111111111111;
parameter    ap_const_lv32_C = 32'b1100;
parameter    ap_const_lv32_B = 32'b1011;
parameter    ap_const_lv11_7FF = 11'b11111111111;
parameter    ap_const_lv52_0 = 52'b0000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv32_10 = 32'b10000;
parameter    ap_const_lv32_34 = 32'b110100;
parameter    ap_const_lv32_3E = 32'b111110;
parameter    ap_const_lv32_3F = 32'b111111;
parameter    ap_const_lv11_0 = 11'b00000000000;
parameter    ap_const_lv32_20 = 32'b100000;
parameter    ap_const_lv32_33 = 32'b110011;
parameter    ap_const_lv20_0 = 20'b00000000000000000000;
parameter    ap_const_lv32_1F = 32'b11111;
parameter    ap_const_lv16_0 = 16'b0000000000000000;
parameter    ap_const_lv32_18 = 32'b11000;
parameter    ap_const_lv8_0 = 8'b00000000;
parameter    ap_const_lv32_17 = 32'b10111;
parameter    ap_const_lv63_0 = 63'b000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv64_7FF0000000000000 = 64'b111111111110000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv5_10 = 5'b10000;
parameter    ap_const_lv5_0 = 5'b00000;
parameter    ap_const_lv5_18 = 5'b11000;
parameter    ap_const_lv5_8 = 5'b1000;
parameter    ap_const_lv7_75 = 7'b1110101;
parameter    ap_const_lv7_C = 7'b1100;
parameter    ap_const_lv64_A = 64'b1010;
parameter    ap_const_lv64_4000000000000000 = 64'b100000000000000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv64_B = 64'b1011;
parameter    ap_const_lv64_8000000000000000 = 64'b1000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv64_1 = 64'b1;
parameter    ap_const_lv13_3FD = 13'b1111111101;
parameter    ap_const_lv13_3FE = 13'b1111111110;
parameter    ap_const_lv9_3 = 9'b11;
parameter    ap_const_lv64_20 = 64'b100000;
parameter    ap_const_lv64_0 = 64'b0000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv64_FFFFFFFFFFFFFFFF = 64'b1111111111111111111111111111111111111111111111111111111111111111;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [63:0] a;
input  [63:0] b;
output  [63:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;

(* fsm_encoding = "none" *) reg   [12:0] ap_CS_fsm;
wire   [0:0] ap_CS_fsm_state1;
reg   [31:0] float_exception_flag;
reg   [7:0] countLeadingZerosHig_address0;
reg    countLeadingZerosHig_ce0;
wire   [3:0] countLeadingZerosHig_q0;
wire   [63:0] grp_propagateFloat64NaN_fu_281_ap_return;
wire   [0:0] tmp_fu_416_p2;
wire   [0:0] tmp_36_fu_291_p2;
wire   [0:0] tmp_39_fu_306_p2;
wire   [0:0] grp_fu_332_p2;
wire   [0:0] tmp_37_fu_296_p2;
wire   [0:0] tmp_41_fu_311_p2;
wire   [51:0] aSig_3_fu_344_p1;
reg   [51:0] aSig_3_reg_1243;
wire   [63:0] aSig_3_cast8_fu_349_p1;
reg   [63:0] aSig_3_cast8_reg_1248;
wire   [10:0] aExp_fu_353_p4;
reg   [10:0] aExp_reg_1254;
wire   [11:0] aExp_cast_fu_363_p1;
reg   [11:0] aExp_cast_reg_1259;
wire   [63:0] bSig_2_cast6_fu_382_p1;
reg   [63:0] bSig_2_cast6_reg_1264;
wire   [11:0] bExp_cast_fu_398_p1;
wire   [0:0] zSign_fu_410_p2;
reg   [0:0] zSign_reg_1275;
reg   [0:0] tmp_reg_1281;
reg   [0:0] tmp_36_reg_1285;
wire   [0:0] tmp_40_fu_422_p2;
reg   [0:0] tmp_40_reg_1289;
wire   [0:0] tmp_43_fu_301_p2;
reg   [0:0] tmp_43_reg_1293;
wire   [0:0] icmp_fu_438_p2;
reg   [0:0] icmp_reg_1297;
wire   [0:0] icmp7_fu_480_p2;
reg   [0:0] icmp7_reg_1302;
wire   [0:0] icmp1_fu_510_p2;
reg   [0:0] icmp1_reg_1308;
wire   [63:0] tmp_50_i1_fu_603_p2;
wire   [0:0] tmp_46_fu_577_p2;
wire   [63:0] tmp_i5_fu_609_p3;
wire   [63:0] tmp_50_i_fu_625_p2;
wire  signed [12:0] bExp2_cast_fu_704_p1;
reg  signed [12:0] bExp2_cast_reg_1348;
wire   [0:0] ap_CS_fsm_state2;
wire   [0:0] tmp_49_fu_708_p2;
reg   [0:0] tmp_49_reg_1353;
reg   [0:0] tmp_50_reg_1357;
wire   [0:0] icmp2_fu_722_p2;
reg   [0:0] icmp2_reg_1361;
wire   [0:0] icmp3_fu_762_p2;
reg   [0:0] icmp3_reg_1366;
wire   [0:0] icmp4_fu_792_p2;
reg   [0:0] icmp4_reg_1372;
wire   [63:0] tmp_i8_fu_831_p3;
wire   [63:0] aSig_4_fu_894_p2;
wire   [0:0] ap_CS_fsm_state3;
wire  signed [11:0] zExpPtr_write_assign_1_fu_905_p1;
wire   [20:0] tmp_79_fu_930_p1;
reg   [20:0] tmp_79_reg_1397;
wire   [0:0] ap_CS_fsm_state4;
wire   [63:0] bSig_2_fu_940_p2;
reg   [63:0] bSig_2_reg_1402;
wire   [63:0] aSig_fu_973_p3;
reg   [63:0] aSig_reg_1409;
wire   [12:0] zExp_fu_990_p2;
reg   [12:0] zExp_reg_1415;
wire   [63:0] grp_estimateDiv128To64_fu_262_ap_return;
reg   [63:0] zSig_3_reg_1420;
wire   [0:0] ap_CS_fsm_state5;
wire    grp_estimateDiv128To64_fu_262_ap_done;
wire   [63:0] tmp_51_i_fu_1034_p1;
wire   [0:0] ap_CS_fsm_state6;
wire   [63:0] tmp_52_i_fu_1038_p1;
wire   [63:0] tmp_53_i_fu_1048_p1;
wire   [63:0] tmp_54_i_fu_1058_p1;
wire   [63:0] grp_fu_1042_p2;
reg   [63:0] z1_reg_1455;
wire   [0:0] ap_CS_fsm_state8;
wire   [63:0] grp_fu_1052_p2;
reg   [63:0] zMiddleA_reg_1460;
wire   [63:0] grp_fu_1062_p2;
reg   [63:0] zMiddleB_reg_1465;
wire   [63:0] grp_fu_1068_p2;
reg   [63:0] z0_reg_1471;
wire   [0:0] tmp_55_i_fu_1078_p2;
reg   [0:0] tmp_55_i_reg_1476;
wire   [0:0] ap_CS_fsm_state9;
reg   [31:0] tmp_66_reg_1481;
wire   [63:0] z1_3_fu_1099_p2;
reg   [63:0] z1_3_reg_1486;
wire   [0:0] tmp_60_i_fu_1104_p2;
reg   [0:0] tmp_60_i_reg_1492;
wire   [63:0] rem1_fu_1138_p2;
wire   [0:0] ap_CS_fsm_state10;
wire   [63:0] rem0_fu_1161_p2;
wire   [63:0] zSig_fu_1175_p2;
wire   [0:0] ap_CS_fsm_state11;
wire   [0:0] tmp_85_fu_1167_p3;
wire   [63:0] z1_4_fu_1181_p2;
wire   [63:0] rem0_1_fu_1196_p2;
wire   [63:0] zSig_2_fu_1228_p3;
wire    grp_estimateDiv128To64_fu_262_ap_start;
wire    grp_estimateDiv128To64_fu_262_ap_idle;
wire    grp_estimateDiv128To64_fu_262_ap_ready;
wire    grp_roundAndPackFloat64_fu_268_ap_start;
wire    grp_roundAndPackFloat64_fu_268_ap_done;
wire    grp_roundAndPackFloat64_fu_268_ap_idle;
wire    grp_roundAndPackFloat64_fu_268_ap_ready;
wire   [31:0] grp_roundAndPackFloat64_fu_268_float_exception_flag_o;
wire    grp_roundAndPackFloat64_fu_268_float_exception_flag_o_ap_vld;
wire   [63:0] grp_roundAndPackFloat64_fu_268_ap_return;
wire   [31:0] grp_propagateFloat64NaN_fu_281_float_exception_flag_o;
wire    grp_propagateFloat64NaN_fu_281_float_exception_flag_o_ap_vld;
wire   [63:0] bSig_1_fu_687_p2;
reg   [63:0] bSig2_reg_160;
wire  signed [11:0] zExpPtr_write_assign_fu_699_p1;
reg   [11:0] bExp2_phi_fu_173_p4;
reg   [11:0] bExp2_reg_170;
reg   [63:0] aSig2_reg_179;
reg   [11:0] aExp2_reg_188;
reg   [63:0] a1_assign_reg_197;
reg   [63:0] a0_assign_1_reg_206;
reg   [63:0] zSig1_reg_215;
reg   [63:0] zSig_1_reg_224;
wire   [0:0] tmp_56_fu_1000_p2;
reg   [63:0] p_0_phi_fu_238_p20;
reg   [63:0] p_0_reg_234;
wire   [0:0] ap_CS_fsm_state13;
reg    ap_reg_grp_estimateDiv128To64_fu_262_ap_start;
reg    ap_reg_grp_roundAndPackFloat64_fu_268_ap_start;
wire   [0:0] ap_CS_fsm_state12;
wire   [63:0] tmp_106_i_i_i_fu_544_p1;
wire   [63:0] tmp_106_i_i_i1_fu_826_p1;
wire   [31:0] tmp_48_fu_583_p2;
wire   [31:0] grp_fu_320_p2;
wire   [10:0] bExp_fu_386_p4;
wire   [51:0] bSig_fu_375_p1;
reg   [51:0] grp_fu_332_p0;
wire   [0:0] tmp_57_fu_402_p3;
wire   [0:0] tmp_53_fu_367_p3;
wire   [19:0] tmp_65_fu_428_p4;
wire   [19:0] tmp_52_fu_448_p4;
wire   [31:0] tmp_68_fu_444_p1;
wire   [31:0] tmp_9_fu_458_p1;
wire   [31:0] a_assign_3_fu_462_p3;
wire   [15:0] tmp_69_fu_470_p4;
wire   [31:0] tmp_70_fu_486_p2;
wire   [31:0] p_a_i_i_i_fu_492_p3;
wire   [7:0] tmp_71_fu_500_p4;
wire   [7:0] tmp_54_fu_516_p4;
wire   [7:0] tmp_60_fu_526_p4;
wire   [7:0] p_v1_fu_536_p3;
wire   [10:0] tmp_61_fu_549_p1;
wire   [40:0] tmp_6_fu_559_p4;
wire   [10:0] tmp_5_fu_553_p2;
wire   [51:0] tmp_7_fu_569_p3;
wire   [63:0] tmp_i6_fu_595_p3;
wire   [63:0] tmp_i4_fu_617_p3;
wire   [4:0] shiftCount_fu_638_p3;
wire   [4:0] p_i_i_i_fu_631_p3;
wire   [4:0] shiftCount_1_i_i_i_fu_645_p3;
wire   [5:0] tmp3_fu_656_p3;
wire   [6:0] countLeadingZerosHig_2_fu_652_p1;
wire   [6:0] tmp3_cast_fu_663_p1;
wire   [6:0] shiftCount_1_fu_667_p2;
wire   [6:0] shiftCount_2_fu_673_p2;
wire  signed [31:0] shiftCount_3_cast_fu_679_p1;
wire   [63:0] tmp_i7_fu_683_p1;
wire   [6:0] bExp_1_fu_693_p2;
wire   [19:0] tmp_72_fu_713_p4;
wire   [19:0] tmp_62_fu_731_p4;
wire   [31:0] tmp_74_fu_728_p1;
wire   [31:0] tmp_15_fu_740_p1;
wire   [31:0] a_assign_8_fu_744_p3;
wire   [15:0] tmp_75_fu_752_p4;
wire   [31:0] tmp_76_fu_768_p2;
wire   [31:0] p_a_i_i_i1_fu_774_p3;
wire   [7:0] tmp_77_fu_782_p4;
wire   [7:0] tmp_63_fu_798_p4;
wire   [7:0] tmp_64_fu_808_p4;
wire   [7:0] p_v_fu_818_p3;
wire   [4:0] shiftCount_3_fu_845_p3;
wire   [4:0] p_i_i_i1_fu_838_p3;
wire   [4:0] shiftCount_1_i_i_i1_fu_852_p3;
wire   [5:0] tmp4_fu_863_p3;
wire   [6:0] countLeadingZerosHig_5_fu_859_p1;
wire   [6:0] tmp4_cast_fu_870_p1;
wire   [6:0] shiftCount_4_fu_874_p2;
wire   [6:0] shiftCount_5_fu_880_p2;
wire  signed [31:0] shiftCount_7_cast_fu_886_p1;
wire   [63:0] tmp_i9_fu_890_p1;
wire   [6:0] aExp_1_fu_899_p2;
wire  signed [12:0] aExp2_cast_fu_909_p1;
wire   [63:0] tmp_78_fu_918_p2;
wire   [63:0] tmp_80_fu_934_p2;
wire   [63:0] aSig_1_fu_924_p2;
wire   [63:0] tmp_81_fu_947_p2;
wire   [62:0] aSig_2_fu_959_p4;
wire   [0:0] tmp_55_fu_953_p2;
wire   [63:0] aSig_5_fu_969_p1;
wire   [12:0] zExp2_v_cast_cast_fu_982_p3;
wire   [12:0] tmp_51_fu_913_p2;
wire   [8:0] tmp_82_fu_996_p1;
wire   [31:0] aLow_fu_1006_p3;
wire   [31:0] bLow_fu_1022_p1;
wire   [31:0] grp_fu_1042_p0;
wire   [31:0] grp_fu_1042_p1;
wire   [31:0] bHigh_fu_1025_p4;
wire   [31:0] grp_fu_1052_p0;
wire   [31:0] grp_fu_1052_p1;
wire   [31:0] aHigh_fu_1013_p4;
wire   [31:0] grp_fu_1062_p0;
wire   [31:0] grp_fu_1062_p1;
wire   [31:0] grp_fu_1068_p0;
wire   [31:0] grp_fu_1068_p1;
wire   [63:0] zMiddleA_1_fu_1074_p2;
wire   [63:0] zMiddleA_2_fu_1093_p2;
wire   [32:0] tmp_59_i_fu_1110_p3;
wire   [33:0] tmp_59_i_cast_fu_1116_p1;
wire   [33:0] tmp_61_i_cast_fu_1120_p1;
wire   [33:0] tmp5_fu_1123_p2;
wire   [63:0] tmp5_cast_fu_1129_p1;
wire   [0:0] tmp_i2_fu_1143_p2;
wire   [63:0] z0_2_fu_1133_p2;
wire   [63:0] tmp_1_i_fu_1156_p2;
wire   [63:0] p_neg_i_fu_1148_p3;
wire   [0:0] tmp_i_fu_1186_p2;
wire   [63:0] tmp_i1_fu_1192_p1;
wire   [0:0] tmp_86_fu_1208_p1;
wire   [0:0] tmp_58_fu_1202_p2;
wire   [62:0] tmp_14_fu_1218_p4;
wire   [0:0] tmp_13_fu_1212_p2;
reg   [12:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 13'b1;
#0 float_exception_flag = 32'b00000000000000000000000000000000;
#0 ap_reg_grp_estimateDiv128To64_fu_262_ap_start = 1'b0;
#0 ap_reg_grp_roundAndPackFloat64_fu_268_ap_start = 1'b0;
end

float64_div_countdEe #(
    .DataWidth( 4 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
countLeadingZerosHig_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(countLeadingZerosHig_address0),
    .ce0(countLeadingZerosHig_ce0),
    .q0(countLeadingZerosHig_q0)
);

estimateDiv128To64 grp_estimateDiv128To64_fu_262(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_estimateDiv128To64_fu_262_ap_start),
    .ap_done(grp_estimateDiv128To64_fu_262_ap_done),
    .ap_idle(grp_estimateDiv128To64_fu_262_ap_idle),
    .ap_ready(grp_estimateDiv128To64_fu_262_ap_ready),
    .a0(aSig_reg_1409),
    .b(bSig_2_reg_1402),
    .ap_return(grp_estimateDiv128To64_fu_262_ap_return)
);

roundAndPackFloat64 grp_roundAndPackFloat64_fu_268(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_roundAndPackFloat64_fu_268_ap_start),
    .ap_done(grp_roundAndPackFloat64_fu_268_ap_done),
    .ap_idle(grp_roundAndPackFloat64_fu_268_ap_idle),
    .ap_ready(grp_roundAndPackFloat64_fu_268_ap_ready),
    .zSign(zSign_reg_1275),
    .zExp(zExp_reg_1415),
    .zSig(zSig_1_reg_224),
    .float_exception_flag_i(float_exception_flag),
    .float_exception_flag_o(grp_roundAndPackFloat64_fu_268_float_exception_flag_o),
    .float_exception_flag_o_ap_vld(grp_roundAndPackFloat64_fu_268_float_exception_flag_o_ap_vld),
    .ap_return(grp_roundAndPackFloat64_fu_268_ap_return)
);

propagateFloat64NaN grp_propagateFloat64NaN_fu_281(
    .a(a),
    .b(b),
    .float_exception_flag_i(float_exception_flag),
    .float_exception_flag_o(grp_propagateFloat64NaN_fu_281_float_exception_flag_o),
    .float_exception_flag_o_ap_vld(grp_propagateFloat64NaN_fu_281_float_exception_flag_o_ap_vld),
    .ap_return(grp_propagateFloat64NaN_fu_281_ap_return)
);

float64_div_mul_3cud #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
float64_div_mul_3cud_x_U14(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1042_p0),
    .din1(grp_fu_1042_p1),
    .ce(1'b1),
    .dout(grp_fu_1042_p2)
);

float64_div_mul_3cud #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
float64_div_mul_3cud_x_U15(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1052_p0),
    .din1(grp_fu_1052_p1),
    .ce(1'b1),
    .dout(grp_fu_1052_p2)
);

float64_div_mul_3cud #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
float64_div_mul_3cud_x_U16(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1062_p0),
    .din1(grp_fu_1062_p1),
    .ce(1'b1),
    .dout(grp_fu_1062_p2)
);

float64_div_mul_3cud #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
float64_div_mul_3cud_x_U17(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1068_p0),
    .din1(grp_fu_1068_p1),
    .ce(1'b1),
    .dout(grp_fu_1068_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_grp_estimateDiv128To64_fu_262_ap_start <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state4)) begin
            ap_reg_grp_estimateDiv128To64_fu_262_ap_start <= 1'b1;
        end else if ((1'b1 == grp_estimateDiv128To64_fu_262_ap_ready)) begin
            ap_reg_grp_estimateDiv128To64_fu_262_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_grp_roundAndPackFloat64_fu_268_ap_start <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state12)) begin
            ap_reg_grp_roundAndPackFloat64_fu_268_ap_start <= 1'b1;
        end else if ((1'b1 == grp_roundAndPackFloat64_fu_268_ap_ready)) begin
            ap_reg_grp_roundAndPackFloat64_fu_268_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state11) & ~(1'b0 == tmp_85_fu_1167_p3))) begin
        a0_assign_1_reg_206 <= rem0_1_fu_1196_p2;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        a0_assign_1_reg_206 <= rem0_fu_1161_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state11) & ~(1'b0 == tmp_85_fu_1167_p3))) begin
        a1_assign_reg_197 <= z1_4_fu_1181_p2;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        a1_assign_reg_197 <= rem1_fu_1138_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (1'b0 == tmp_49_fu_708_p2))) begin
        aExp2_reg_188 <= aExp_cast_reg_1259;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        aExp2_reg_188 <= zExpPtr_write_assign_1_fu_905_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (1'b0 == tmp_49_fu_708_p2))) begin
        aSig2_reg_179 <= aSig_3_cast8_reg_1248;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        aSig2_reg_179 <= aSig_4_fu_894_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0) & (tmp_fu_416_p2 == 1'b0) & (1'b0 == tmp_36_fu_291_p2) & (1'b0 == tmp_40_fu_422_p2))) begin
        bExp2_reg_170 <= bExp_cast_fu_398_p1;
    end else if (((1'b1 == ap_CS_fsm_state2) & ~(1'b0 == tmp_40_reg_1289))) begin
        bExp2_reg_170 <= zExpPtr_write_assign_fu_699_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0) & (tmp_fu_416_p2 == 1'b0) & (1'b0 == tmp_36_fu_291_p2) & (1'b0 == tmp_40_fu_422_p2))) begin
        bSig2_reg_160 <= bSig_2_cast6_fu_382_p1;
    end else if (((1'b1 == ap_CS_fsm_state2) & ~(1'b0 == tmp_40_reg_1289))) begin
        bSig2_reg_160 <= bSig_1_fu_687_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0) & ~(tmp_fu_416_p2 == 1'b0) & ~(1'b0 == grp_fu_332_p2) & ~(1'b0 == tmp_37_fu_296_p2) & ~(1'b0 == tmp_41_fu_311_p2)) | ((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0) & (tmp_fu_416_p2 == 1'b0) & (1'b0 == tmp_36_fu_291_p2) & ~(1'b0 == tmp_40_fu_422_p2) & ~(1'b0 == tmp_43_fu_301_p2) & ~(1'b0 == tmp_46_fu_577_p2)))) begin
        float_exception_flag <= grp_fu_320_p2;
    end else if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0) & (tmp_fu_416_p2 == 1'b0) & (1'b0 == tmp_36_fu_291_p2) & ~(1'b0 == tmp_40_fu_422_p2) & ~(1'b0 == tmp_43_fu_301_p2) & (1'b0 == tmp_46_fu_577_p2))) begin
        float_exception_flag <= tmp_48_fu_583_p2;
    end else if ((((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0) & (tmp_fu_416_p2 == 1'b0) & ~(1'b0 == tmp_36_fu_291_p2) & (1'b0 == tmp_39_fu_306_p2) & (1'b1 == grp_propagateFloat64NaN_fu_281_float_exception_flag_o_ap_vld)) | ((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0) & ~(tmp_fu_416_p2 == 1'b0) & (1'b0 == grp_fu_332_p2) & (1'b1 == grp_propagateFloat64NaN_fu_281_float_exception_flag_o_ap_vld)) | ((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0) & ~(tmp_fu_416_p2 == 1'b0) & ~(1'b0 == grp_fu_332_p2) & ~(1'b0 == tmp_37_fu_296_p2) & (1'b0 == tmp_41_fu_311_p2) & (1'b1 == grp_propagateFloat64NaN_fu_281_float_exception_flag_o_ap_vld)))) begin
        float_exception_flag <= grp_propagateFloat64NaN_fu_281_float_exception_flag_o;
    end else if (((1'b1 == ap_CS_fsm_state13) & (((1'b0 == tmp_40_reg_1289) & (1'b0 == tmp_reg_1281) & (1'b0 == tmp_36_reg_1285) & (1'b0 == tmp_49_reg_1353)) | ((1'b0 == tmp_40_reg_1289) & (1'b0 == tmp_reg_1281) & (1'b0 == tmp_36_reg_1285) & (1'b0 == tmp_50_reg_1357)) | ((1'b0 == tmp_reg_1281) & (1'b0 == tmp_36_reg_1285) & (1'b0 == tmp_49_reg_1353) & (1'b0 == tmp_43_reg_1293)) | ((1'b0 == tmp_reg_1281) & (1'b0 == tmp_36_reg_1285) & (1'b0 == tmp_50_reg_1357) & (1'b0 == tmp_43_reg_1293))) & (1'b1 == grp_roundAndPackFloat64_fu_268_float_exception_flag_o_ap_vld))) begin
        float_exception_flag <= grp_roundAndPackFloat64_fu_268_float_exception_flag_o;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state13) & (((1'b0 == tmp_40_reg_1289) & (1'b0 == tmp_reg_1281) & (1'b0 == tmp_36_reg_1285) & (1'b0 == tmp_49_reg_1353)) | ((1'b0 == tmp_40_reg_1289) & (1'b0 == tmp_reg_1281) & (1'b0 == tmp_36_reg_1285) & (1'b0 == tmp_50_reg_1357)) | ((1'b0 == tmp_reg_1281) & (1'b0 == tmp_36_reg_1285) & (1'b0 == tmp_49_reg_1353) & (1'b0 == tmp_43_reg_1293)) | ((1'b0 == tmp_reg_1281) & (1'b0 == tmp_36_reg_1285) & (1'b0 == tmp_50_reg_1357) & (1'b0 == tmp_43_reg_1293))) & ~((((1'b0 == tmp_40_reg_1289) & (1'b0 == tmp_reg_1281) & (1'b0 == tmp_36_reg_1285) & (1'b0 == tmp_49_reg_1353)) | ((1'b0 == tmp_40_reg_1289) & (1'b0 == tmp_reg_1281) & (1'b0 == tmp_36_reg_1285) & (1'b0 == tmp_50_reg_1357)) | ((1'b0 == tmp_reg_1281) & (1'b0 == tmp_36_reg_1285) & (1'b0 == tmp_49_reg_1353) & (1'b0 == tmp_43_reg_1293)) | ((1'b0 == tmp_reg_1281) & (1'b0 == tmp_36_reg_1285) & (1'b0 == tmp_50_reg_1357) & (1'b0 == tmp_43_reg_1293))) & (1'b0 == grp_roundAndPackFloat64_fu_268_ap_done)))) begin
        p_0_reg_234 <= grp_roundAndPackFloat64_fu_268_ap_return;
    end else if ((~(1'b0 == grp_fu_332_p2) & (1'b1 == ap_CS_fsm_state2) & ~(1'b0 == tmp_49_fu_708_p2))) begin
        p_0_reg_234 <= tmp_i8_fu_831_p3;
    end else if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0) & (tmp_fu_416_p2 == 1'b0) & (1'b0 == tmp_36_fu_291_p2) & ~(1'b0 == tmp_40_fu_422_p2) & ~(1'b0 == tmp_43_fu_301_p2) & (1'b0 == tmp_46_fu_577_p2))) begin
        p_0_reg_234 <= tmp_50_i1_fu_603_p2;
    end else if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0) & (tmp_fu_416_p2 == 1'b0) & ~(1'b0 == tmp_36_fu_291_p2) & ~(1'b0 == tmp_39_fu_306_p2))) begin
        p_0_reg_234 <= tmp_i5_fu_609_p3;
    end else if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0) & ~(tmp_fu_416_p2 == 1'b0) & ~(1'b0 == grp_fu_332_p2) & (1'b0 == tmp_37_fu_296_p2))) begin
        p_0_reg_234 <= tmp_50_i_fu_625_p2;
    end else if ((((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0) & ~(tmp_fu_416_p2 == 1'b0) & ~(1'b0 == grp_fu_332_p2) & ~(1'b0 == tmp_37_fu_296_p2) & ~(1'b0 == tmp_41_fu_311_p2)) | ((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0) & (tmp_fu_416_p2 == 1'b0) & (1'b0 == tmp_36_fu_291_p2) & ~(1'b0 == tmp_40_fu_422_p2) & ~(1'b0 == tmp_43_fu_301_p2) & ~(1'b0 == tmp_46_fu_577_p2)))) begin
        p_0_reg_234 <= ap_const_lv64_7FFFFFFFFFFFFFFF;
    end else if ((((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0) & (tmp_fu_416_p2 == 1'b0) & ~(1'b0 == tmp_36_fu_291_p2) & (1'b0 == tmp_39_fu_306_p2)) | ((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0) & ~(tmp_fu_416_p2 == 1'b0) & (1'b0 == grp_fu_332_p2)) | ((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0) & ~(tmp_fu_416_p2 == 1'b0) & ~(1'b0 == grp_fu_332_p2) & ~(1'b0 == tmp_37_fu_296_p2) & (1'b0 == tmp_41_fu_311_p2)))) begin
        p_0_reg_234 <= grp_propagateFloat64NaN_fu_281_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state11) & ~(1'b0 == tmp_85_fu_1167_p3))) begin
        zSig1_reg_215 <= zSig_fu_1175_p2;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        zSig1_reg_215 <= zSig_3_reg_1420;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & ~(1'b0 == grp_estimateDiv128To64_fu_262_ap_done) & (1'b0 == tmp_56_fu_1000_p2))) begin
        zSig_1_reg_224 <= grp_estimateDiv128To64_fu_262_ap_return;
    end else if (((1'b1 == ap_CS_fsm_state11) & (1'b0 == tmp_85_fu_1167_p3))) begin
        zSig_1_reg_224 <= zSig_2_fu_1228_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0))) begin
        aExp_cast_reg_1259[10 : 0] <= aExp_cast_fu_363_p1[10 : 0];
        aExp_reg_1254 <= {{a[ap_const_lv32_3E : ap_const_lv32_34]}};
        aSig_3_cast8_reg_1248[51 : 0] <= aSig_3_cast8_fu_349_p1[51 : 0];
        aSig_3_reg_1243 <= aSig_3_fu_344_p1;
        bSig_2_cast6_reg_1264[51 : 0] <= bSig_2_cast6_fu_382_p1[51 : 0];
        tmp_reg_1281 <= tmp_fu_416_p2;
        zSign_reg_1275 <= zSign_fu_410_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        aSig_reg_1409[63 : 9] <= aSig_fu_973_p3[63 : 9];
        bSig_2_reg_1402[62 : 11] <= bSig_2_fu_940_p2[62 : 11];
        tmp_79_reg_1397 <= tmp_79_fu_930_p1;
        zExp_reg_1415 <= zExp_fu_990_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        bExp2_cast_reg_1348 <= bExp2_cast_fu_704_p1;
        tmp_49_reg_1353 <= tmp_49_fu_708_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0) & (tmp_fu_416_p2 == 1'b0) & (1'b0 == tmp_36_fu_291_p2) & ~(1'b0 == tmp_40_fu_422_p2) & (1'b0 == tmp_43_fu_301_p2))) begin
        icmp1_reg_1308 <= icmp1_fu_510_p2;
        icmp7_reg_1302 <= icmp7_fu_480_p2;
        icmp_reg_1297 <= icmp_fu_438_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == grp_fu_332_p2) & (1'b1 == ap_CS_fsm_state2) & ~(1'b0 == tmp_49_fu_708_p2))) begin
        icmp2_reg_1361 <= icmp2_fu_722_p2;
        icmp3_reg_1366 <= icmp3_fu_762_p2;
        icmp4_reg_1372 <= icmp4_fu_792_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0) & (tmp_fu_416_p2 == 1'b0))) begin
        tmp_36_reg_1285 <= tmp_36_fu_291_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0) & (tmp_fu_416_p2 == 1'b0) & (1'b0 == tmp_36_fu_291_p2))) begin
        tmp_40_reg_1289 <= tmp_40_fu_422_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0) & (tmp_fu_416_p2 == 1'b0) & (1'b0 == tmp_36_fu_291_p2) & ~(1'b0 == tmp_40_fu_422_p2))) begin
        tmp_43_reg_1293 <= tmp_43_fu_301_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & ~(1'b0 == tmp_49_fu_708_p2))) begin
        tmp_50_reg_1357 <= grp_fu_332_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        tmp_55_i_reg_1476 <= tmp_55_i_fu_1078_p2;
        tmp_60_i_reg_1492 <= tmp_60_i_fu_1104_p2;
        tmp_66_reg_1481 <= {{zMiddleA_1_fu_1074_p2[ap_const_lv32_3F : ap_const_lv32_20]}};
        z1_3_reg_1486 <= z1_3_fu_1099_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        z0_reg_1471 <= grp_fu_1068_p2;
        z1_reg_1455 <= grp_fu_1042_p2;
        zMiddleA_reg_1460 <= grp_fu_1052_p2;
        zMiddleB_reg_1465 <= grp_fu_1062_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & ~(1'b0 == grp_estimateDiv128To64_fu_262_ap_done))) begin
        zSig_3_reg_1420 <= grp_estimateDiv128To64_fu_262_ap_return;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) & ~((((1'b0 == tmp_40_reg_1289) & (1'b0 == tmp_reg_1281) & (1'b0 == tmp_36_reg_1285) & (1'b0 == tmp_49_reg_1353)) | ((1'b0 == tmp_40_reg_1289) & (1'b0 == tmp_reg_1281) & (1'b0 == tmp_36_reg_1285) & (1'b0 == tmp_50_reg_1357)) | ((1'b0 == tmp_reg_1281) & (1'b0 == tmp_36_reg_1285) & (1'b0 == tmp_49_reg_1353) & (1'b0 == tmp_43_reg_1293)) | ((1'b0 == tmp_reg_1281) & (1'b0 == tmp_36_reg_1285) & (1'b0 == tmp_50_reg_1357) & (1'b0 == tmp_43_reg_1293))) & (1'b0 == grp_roundAndPackFloat64_fu_268_ap_done)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (ap_CS_fsm_state1 == 1'b1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) & ~((((1'b0 == tmp_40_reg_1289) & (1'b0 == tmp_reg_1281) & (1'b0 == tmp_36_reg_1285) & (1'b0 == tmp_49_reg_1353)) | ((1'b0 == tmp_40_reg_1289) & (1'b0 == tmp_reg_1281) & (1'b0 == tmp_36_reg_1285) & (1'b0 == tmp_50_reg_1357)) | ((1'b0 == tmp_reg_1281) & (1'b0 == tmp_36_reg_1285) & (1'b0 == tmp_49_reg_1353) & (1'b0 == tmp_43_reg_1293)) | ((1'b0 == tmp_reg_1281) & (1'b0 == tmp_36_reg_1285) & (1'b0 == tmp_50_reg_1357) & (1'b0 == tmp_43_reg_1293))) & (1'b0 == grp_roundAndPackFloat64_fu_268_ap_done)))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & ~(1'b0 == tmp_40_reg_1289))) begin
        bExp2_phi_fu_173_p4 = zExpPtr_write_assign_fu_699_p1;
    end else begin
        bExp2_phi_fu_173_p4 = bExp2_reg_170;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        countLeadingZerosHig_address0 = tmp_106_i_i_i1_fu_826_p1;
    end else if ((ap_CS_fsm_state1 == 1'b1)) begin
        countLeadingZerosHig_address0 = tmp_106_i_i_i_fu_544_p1;
    end else begin
        countLeadingZerosHig_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0)) | (1'b1 == ap_CS_fsm_state2))) begin
        countLeadingZerosHig_ce0 = 1'b1;
    end else begin
        countLeadingZerosHig_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_fu_332_p0 = aSig_3_reg_1243;
    end else if ((ap_CS_fsm_state1 == 1'b1)) begin
        grp_fu_332_p0 = aSig_3_fu_344_p1;
    end else begin
        grp_fu_332_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) & (((1'b0 == tmp_40_reg_1289) & (1'b0 == tmp_reg_1281) & (1'b0 == tmp_36_reg_1285) & (1'b0 == tmp_49_reg_1353)) | ((1'b0 == tmp_40_reg_1289) & (1'b0 == tmp_reg_1281) & (1'b0 == tmp_36_reg_1285) & (1'b0 == tmp_50_reg_1357)) | ((1'b0 == tmp_reg_1281) & (1'b0 == tmp_36_reg_1285) & (1'b0 == tmp_49_reg_1353) & (1'b0 == tmp_43_reg_1293)) | ((1'b0 == tmp_reg_1281) & (1'b0 == tmp_36_reg_1285) & (1'b0 == tmp_50_reg_1357) & (1'b0 == tmp_43_reg_1293))))) begin
        p_0_phi_fu_238_p20 = grp_roundAndPackFloat64_fu_268_ap_return;
    end else begin
        p_0_phi_fu_238_p20 = p_0_reg_234;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~(ap_start == 1'b0) & (~(1'b0 == tmp_36_fu_291_p2) | ~(tmp_fu_416_p2 == 1'b0) | (~(1'b0 == tmp_40_fu_422_p2) & ~(1'b0 == tmp_43_fu_301_p2))))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else if ((~(ap_start == 1'b0) & (((tmp_fu_416_p2 == 1'b0) & (1'b0 == tmp_36_fu_291_p2) & (1'b0 == tmp_40_fu_422_p2)) | ((tmp_fu_416_p2 == 1'b0) & (1'b0 == tmp_36_fu_291_p2) & (1'b0 == tmp_43_fu_301_p2))))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if ((~(1'b0 == grp_fu_332_p2) & ~(1'b0 == tmp_49_fu_708_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else if (((1'b0 == grp_fu_332_p2) & ~(1'b0 == tmp_49_fu_708_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            if ((~(1'b0 == grp_estimateDiv128To64_fu_262_ap_done) & (1'b0 == tmp_56_fu_1000_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else if ((~(1'b0 == grp_estimateDiv128To64_fu_262_ap_done) & ~(1'b0 == tmp_56_fu_1000_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            if ((1'b0 == tmp_85_fu_1167_p3)) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            if (~((((1'b0 == tmp_40_reg_1289) & (1'b0 == tmp_reg_1281) & (1'b0 == tmp_36_reg_1285) & (1'b0 == tmp_49_reg_1353)) | ((1'b0 == tmp_40_reg_1289) & (1'b0 == tmp_reg_1281) & (1'b0 == tmp_36_reg_1285) & (1'b0 == tmp_50_reg_1357)) | ((1'b0 == tmp_reg_1281) & (1'b0 == tmp_36_reg_1285) & (1'b0 == tmp_49_reg_1353) & (1'b0 == tmp_43_reg_1293)) | ((1'b0 == tmp_reg_1281) & (1'b0 == tmp_36_reg_1285) & (1'b0 == tmp_50_reg_1357) & (1'b0 == tmp_43_reg_1293))) & (1'b0 == grp_roundAndPackFloat64_fu_268_ap_done))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign aExp2_cast_fu_909_p1 = $signed(aExp2_reg_188);

assign aExp_1_fu_899_p2 = (ap_const_lv7_C - shiftCount_4_fu_874_p2);

assign aExp_cast_fu_363_p1 = aExp_fu_353_p4;

assign aExp_fu_353_p4 = {{a[ap_const_lv32_3E : ap_const_lv32_34]}};

assign aHigh_fu_1013_p4 = {{bSig_2_reg_1402[ap_const_lv32_3F : ap_const_lv32_20]}};

assign aLow_fu_1006_p3 = {{tmp_79_reg_1397}, {ap_const_lv11_0}};

assign aSig_1_fu_924_p2 = (tmp_78_fu_918_p2 | ap_const_lv64_4000000000000000);

assign aSig_2_fu_959_p4 = {{aSig_1_fu_924_p2[ap_const_lv32_3F : ap_const_lv32_1]}};

assign aSig_3_cast8_fu_349_p1 = aSig_3_fu_344_p1;

assign aSig_3_fu_344_p1 = a[51:0];

assign aSig_4_fu_894_p2 = aSig_3_cast8_reg_1248 << tmp_i9_fu_890_p1;

assign aSig_5_fu_969_p1 = aSig_2_fu_959_p4;

assign aSig_fu_973_p3 = ((tmp_55_fu_953_p2[0:0] === 1'b1) ? aSig_1_fu_924_p2 : aSig_5_fu_969_p1);

assign a_assign_3_fu_462_p3 = ((icmp_fu_438_p2[0:0] === 1'b1) ? tmp_68_fu_444_p1 : tmp_9_fu_458_p1);

assign a_assign_8_fu_744_p3 = ((icmp2_fu_722_p2[0:0] === 1'b1) ? tmp_74_fu_728_p1 : tmp_15_fu_740_p1);

assign ap_CS_fsm_state1 = ap_CS_fsm[ap_const_lv32_0];

assign ap_CS_fsm_state10 = ap_CS_fsm[ap_const_lv32_9];

assign ap_CS_fsm_state11 = ap_CS_fsm[ap_const_lv32_A];

assign ap_CS_fsm_state12 = ap_CS_fsm[ap_const_lv32_B];

assign ap_CS_fsm_state13 = ap_CS_fsm[ap_const_lv32_C];

assign ap_CS_fsm_state2 = ap_CS_fsm[ap_const_lv32_1];

assign ap_CS_fsm_state3 = ap_CS_fsm[ap_const_lv32_2];

assign ap_CS_fsm_state4 = ap_CS_fsm[ap_const_lv32_3];

assign ap_CS_fsm_state5 = ap_CS_fsm[ap_const_lv32_4];

assign ap_CS_fsm_state6 = ap_CS_fsm[ap_const_lv32_5];

assign ap_CS_fsm_state8 = ap_CS_fsm[ap_const_lv32_7];

assign ap_CS_fsm_state9 = ap_CS_fsm[ap_const_lv32_8];

assign ap_return = p_0_phi_fu_238_p20;

assign bExp2_cast_fu_704_p1 = $signed(bExp2_phi_fu_173_p4);

assign bExp_1_fu_693_p2 = (ap_const_lv7_C - shiftCount_1_fu_667_p2);

assign bExp_cast_fu_398_p1 = bExp_fu_386_p4;

assign bExp_fu_386_p4 = {{b[ap_const_lv32_3E : ap_const_lv32_34]}};

assign bHigh_fu_1025_p4 = {{zSig_3_reg_1420[ap_const_lv32_3F : ap_const_lv32_20]}};

assign bLow_fu_1022_p1 = zSig_3_reg_1420[31:0];

assign bSig_1_fu_687_p2 = bSig_2_cast6_reg_1264 << tmp_i7_fu_683_p1;

assign bSig_2_cast6_fu_382_p1 = bSig_fu_375_p1;

assign bSig_2_fu_940_p2 = (tmp_80_fu_934_p2 | ap_const_lv64_8000000000000000);

assign bSig_fu_375_p1 = b[51:0];

assign countLeadingZerosHig_2_fu_652_p1 = countLeadingZerosHig_q0;

assign countLeadingZerosHig_5_fu_859_p1 = countLeadingZerosHig_q0;

assign grp_estimateDiv128To64_fu_262_ap_start = ap_reg_grp_estimateDiv128To64_fu_262_ap_start;

assign grp_fu_1042_p0 = tmp_51_i_fu_1034_p1;

assign grp_fu_1042_p1 = tmp_52_i_fu_1038_p1;

assign grp_fu_1052_p0 = tmp_51_i_fu_1034_p1;

assign grp_fu_1052_p1 = tmp_53_i_fu_1048_p1;

assign grp_fu_1062_p0 = tmp_52_i_fu_1038_p1;

assign grp_fu_1062_p1 = tmp_54_i_fu_1058_p1;

assign grp_fu_1068_p0 = tmp_54_i_fu_1058_p1;

assign grp_fu_1068_p1 = tmp_53_i_fu_1048_p1;

assign grp_fu_320_p2 = (float_exception_flag | ap_const_lv32_10);

assign grp_fu_332_p2 = ((grp_fu_332_p0 == ap_const_lv52_0) ? 1'b1 : 1'b0);

assign grp_roundAndPackFloat64_fu_268_ap_start = ap_reg_grp_roundAndPackFloat64_fu_268_ap_start;

assign icmp1_fu_510_p2 = ((tmp_71_fu_500_p4 == ap_const_lv8_0) ? 1'b1 : 1'b0);

assign icmp2_fu_722_p2 = ((tmp_72_fu_713_p4 == ap_const_lv20_0) ? 1'b1 : 1'b0);

assign icmp3_fu_762_p2 = ((tmp_75_fu_752_p4 == ap_const_lv16_0) ? 1'b1 : 1'b0);

assign icmp4_fu_792_p2 = ((tmp_77_fu_782_p4 == ap_const_lv8_0) ? 1'b1 : 1'b0);

assign icmp7_fu_480_p2 = ((tmp_69_fu_470_p4 == ap_const_lv16_0) ? 1'b1 : 1'b0);

assign icmp_fu_438_p2 = ((tmp_65_fu_428_p4 == ap_const_lv20_0) ? 1'b1 : 1'b0);

assign p_a_i_i_i1_fu_774_p3 = ((icmp3_fu_762_p2[0:0] === 1'b1) ? tmp_76_fu_768_p2 : a_assign_8_fu_744_p3);

assign p_a_i_i_i_fu_492_p3 = ((icmp7_fu_480_p2[0:0] === 1'b1) ? tmp_70_fu_486_p2 : a_assign_3_fu_462_p3);

assign p_i_i_i1_fu_838_p3 = ((icmp3_reg_1366[0:0] === 1'b1) ? ap_const_lv5_10 : ap_const_lv5_0);

assign p_i_i_i_fu_631_p3 = ((icmp7_reg_1302[0:0] === 1'b1) ? ap_const_lv5_10 : ap_const_lv5_0);

assign p_neg_i_fu_1148_p3 = ((tmp_i2_fu_1143_p2[0:0] === 1'b1) ? ap_const_lv64_FFFFFFFFFFFFFFFF : ap_const_lv64_0);

assign p_v1_fu_536_p3 = ((icmp1_fu_510_p2[0:0] === 1'b1) ? tmp_54_fu_516_p4 : tmp_60_fu_526_p4);

assign p_v_fu_818_p3 = ((icmp4_fu_792_p2[0:0] === 1'b1) ? tmp_63_fu_798_p4 : tmp_64_fu_808_p4);

assign rem0_1_fu_1196_p2 = (tmp_i1_fu_1192_p1 + a0_assign_1_reg_206);

assign rem0_fu_1161_p2 = (tmp_1_i_fu_1156_p2 + p_neg_i_fu_1148_p3);

assign rem1_fu_1138_p2 = (ap_const_lv64_0 - z1_3_reg_1486);

assign shiftCount_1_fu_667_p2 = (countLeadingZerosHig_2_fu_652_p1 + tmp3_cast_fu_663_p1);

assign shiftCount_1_i_i_i1_fu_852_p3 = ((icmp4_reg_1372[0:0] === 1'b1) ? shiftCount_3_fu_845_p3 : p_i_i_i1_fu_838_p3);

assign shiftCount_1_i_i_i_fu_645_p3 = ((icmp1_reg_1308[0:0] === 1'b1) ? shiftCount_fu_638_p3 : p_i_i_i_fu_631_p3);

assign shiftCount_2_fu_673_p2 = ($signed(ap_const_lv7_75) + $signed(shiftCount_1_fu_667_p2));

assign shiftCount_3_cast_fu_679_p1 = $signed(shiftCount_2_fu_673_p2);

assign shiftCount_3_fu_845_p3 = ((icmp3_reg_1366[0:0] === 1'b1) ? ap_const_lv5_18 : ap_const_lv5_8);

assign shiftCount_4_fu_874_p2 = (countLeadingZerosHig_5_fu_859_p1 + tmp4_cast_fu_870_p1);

assign shiftCount_5_fu_880_p2 = ($signed(ap_const_lv7_75) + $signed(shiftCount_4_fu_874_p2));

assign shiftCount_7_cast_fu_886_p1 = $signed(shiftCount_5_fu_880_p2);

assign shiftCount_fu_638_p3 = ((icmp7_reg_1302[0:0] === 1'b1) ? ap_const_lv5_18 : ap_const_lv5_8);

assign tmp3_cast_fu_663_p1 = tmp3_fu_656_p3;

assign tmp3_fu_656_p3 = {{icmp_reg_1297}, {shiftCount_1_i_i_i_fu_645_p3}};

assign tmp4_cast_fu_870_p1 = tmp4_fu_863_p3;

assign tmp4_fu_863_p3 = {{icmp2_reg_1361}, {shiftCount_1_i_i_i1_fu_852_p3}};

assign tmp5_cast_fu_1129_p1 = tmp5_fu_1123_p2;

assign tmp5_fu_1123_p2 = (tmp_59_i_cast_fu_1116_p1 + tmp_61_i_cast_fu_1120_p1);

assign tmp_106_i_i_i1_fu_826_p1 = p_v_fu_818_p3;

assign tmp_106_i_i_i_fu_544_p1 = p_v1_fu_536_p3;

assign tmp_13_fu_1212_p2 = (tmp_86_fu_1208_p1 | tmp_58_fu_1202_p2);

assign tmp_14_fu_1218_p4 = {{zSig1_reg_215[ap_const_lv32_3F : ap_const_lv32_1]}};

assign tmp_15_fu_740_p1 = tmp_62_fu_731_p4;

assign tmp_1_i_fu_1156_p2 = (aSig_reg_1409 - z0_2_fu_1133_p2);

assign tmp_36_fu_291_p2 = ((bExp_fu_386_p4 == ap_const_lv11_7FF) ? 1'b1 : 1'b0);

assign tmp_37_fu_296_p2 = ((bExp_fu_386_p4 == ap_const_lv11_7FF) ? 1'b1 : 1'b0);

assign tmp_39_fu_306_p2 = ((bSig_fu_375_p1 == ap_const_lv52_0) ? 1'b1 : 1'b0);

assign tmp_40_fu_422_p2 = ((bExp_fu_386_p4 == ap_const_lv11_0) ? 1'b1 : 1'b0);

assign tmp_41_fu_311_p2 = ((bSig_fu_375_p1 == ap_const_lv52_0) ? 1'b1 : 1'b0);

assign tmp_43_fu_301_p2 = ((bSig_fu_375_p1 == ap_const_lv52_0) ? 1'b1 : 1'b0);

assign tmp_46_fu_577_p2 = ((tmp_7_fu_569_p3 == ap_const_lv52_0) ? 1'b1 : 1'b0);

assign tmp_48_fu_583_p2 = (float_exception_flag | ap_const_lv32_2);

assign tmp_49_fu_708_p2 = ((aExp_reg_1254 == ap_const_lv11_0) ? 1'b1 : 1'b0);

assign tmp_50_i1_fu_603_p2 = (tmp_i6_fu_595_p3 | ap_const_lv64_7FF0000000000000);

assign tmp_50_i_fu_625_p2 = (tmp_i4_fu_617_p3 | ap_const_lv64_7FF0000000000000);

assign tmp_51_fu_913_p2 = ($signed(aExp2_cast_fu_909_p1) - $signed(bExp2_cast_reg_1348));

assign tmp_51_i_fu_1034_p1 = aLow_fu_1006_p3;

assign tmp_52_fu_448_p4 = {{b[ap_const_lv32_33 : ap_const_lv32_20]}};

assign tmp_52_i_fu_1038_p1 = bLow_fu_1022_p1;

assign tmp_53_fu_367_p3 = a[ap_const_lv32_3F];

assign tmp_53_i_fu_1048_p1 = bHigh_fu_1025_p4;

assign tmp_54_fu_516_p4 = {{p_a_i_i_i_fu_492_p3[ap_const_lv32_17 : ap_const_lv32_10]}};

assign tmp_54_i_fu_1058_p1 = aHigh_fu_1013_p4;

assign tmp_55_fu_953_p2 = ((bSig_2_fu_940_p2 > tmp_81_fu_947_p2) ? 1'b1 : 1'b0);

assign tmp_55_i_fu_1078_p2 = ((zMiddleA_1_fu_1074_p2 < zMiddleB_reg_1465) ? 1'b1 : 1'b0);

assign tmp_56_fu_1000_p2 = ((tmp_82_fu_996_p1 < ap_const_lv9_3) ? 1'b1 : 1'b0);

assign tmp_57_fu_402_p3 = b[ap_const_lv32_3F];

assign tmp_58_fu_1202_p2 = ((a1_assign_reg_197 != ap_const_lv64_0) ? 1'b1 : 1'b0);

assign tmp_59_i_cast_fu_1116_p1 = tmp_59_i_fu_1110_p3;

assign tmp_59_i_fu_1110_p3 = {{tmp_55_i_reg_1476}, {tmp_66_reg_1481}};

assign tmp_5_fu_553_p2 = (tmp_61_fu_549_p1 | aExp_fu_353_p4);

assign tmp_60_fu_526_p4 = {{p_a_i_i_i_fu_492_p3[ap_const_lv32_1F : ap_const_lv32_18]}};

assign tmp_60_i_fu_1104_p2 = ((z1_3_fu_1099_p2 < zMiddleA_2_fu_1093_p2) ? 1'b1 : 1'b0);

assign tmp_61_fu_549_p1 = a[10:0];

assign tmp_61_i_cast_fu_1120_p1 = tmp_60_i_reg_1492;

assign tmp_62_fu_731_p4 = {{a[ap_const_lv32_33 : ap_const_lv32_20]}};

assign tmp_63_fu_798_p4 = {{p_a_i_i_i1_fu_774_p3[ap_const_lv32_17 : ap_const_lv32_10]}};

assign tmp_64_fu_808_p4 = {{p_a_i_i_i1_fu_774_p3[ap_const_lv32_1F : ap_const_lv32_18]}};

assign tmp_65_fu_428_p4 = {{b[ap_const_lv32_33 : ap_const_lv32_20]}};

assign tmp_68_fu_444_p1 = b[31:0];

assign tmp_69_fu_470_p4 = {{a_assign_3_fu_462_p3[ap_const_lv32_1F : ap_const_lv32_10]}};

assign tmp_6_fu_559_p4 = {{a[ap_const_lv32_33 : ap_const_lv32_B]}};

assign tmp_70_fu_486_p2 = a_assign_3_fu_462_p3 << ap_const_lv32_10;

assign tmp_71_fu_500_p4 = {{p_a_i_i_i_fu_492_p3[ap_const_lv32_1F : ap_const_lv32_18]}};

assign tmp_72_fu_713_p4 = {{a[ap_const_lv32_33 : ap_const_lv32_20]}};

assign tmp_74_fu_728_p1 = a[31:0];

assign tmp_75_fu_752_p4 = {{a_assign_8_fu_744_p3[ap_const_lv32_1F : ap_const_lv32_10]}};

assign tmp_76_fu_768_p2 = a_assign_8_fu_744_p3 << ap_const_lv32_10;

assign tmp_77_fu_782_p4 = {{p_a_i_i_i1_fu_774_p3[ap_const_lv32_1F : ap_const_lv32_18]}};

assign tmp_78_fu_918_p2 = aSig2_reg_179 << ap_const_lv64_A;

assign tmp_79_fu_930_p1 = bSig2_reg_160[20:0];

assign tmp_7_fu_569_p3 = {{tmp_6_fu_559_p4}, {tmp_5_fu_553_p2}};

assign tmp_80_fu_934_p2 = bSig2_reg_160 << ap_const_lv64_B;

assign tmp_81_fu_947_p2 = aSig_1_fu_924_p2 << ap_const_lv64_1;

assign tmp_82_fu_996_p1 = grp_estimateDiv128To64_fu_262_ap_return[8:0];

assign tmp_85_fu_1167_p3 = a0_assign_1_reg_206[ap_const_lv32_3F];

assign tmp_86_fu_1208_p1 = zSig1_reg_215[0:0];

assign tmp_9_fu_458_p1 = tmp_52_fu_448_p4;

assign tmp_fu_416_p2 = ((aExp_fu_353_p4 == ap_const_lv11_7FF) ? 1'b1 : 1'b0);

assign tmp_i1_fu_1192_p1 = tmp_i_fu_1186_p2;

assign tmp_i2_fu_1143_p2 = ((z1_3_reg_1486 != ap_const_lv64_0) ? 1'b1 : 1'b0);

assign tmp_i4_fu_617_p3 = {{zSign_fu_410_p2}, {ap_const_lv63_0}};

assign tmp_i5_fu_609_p3 = {{zSign_fu_410_p2}, {ap_const_lv63_0}};

assign tmp_i6_fu_595_p3 = {{zSign_fu_410_p2}, {ap_const_lv63_0}};

assign tmp_i7_fu_683_p1 = $unsigned(shiftCount_3_cast_fu_679_p1);

assign tmp_i8_fu_831_p3 = {{zSign_reg_1275}, {ap_const_lv63_0}};

assign tmp_i9_fu_890_p1 = $unsigned(shiftCount_7_cast_fu_886_p1);

assign tmp_i_fu_1186_p2 = ((z1_4_fu_1181_p2 < a1_assign_reg_197) ? 1'b1 : 1'b0);

assign z0_2_fu_1133_p2 = (tmp5_cast_fu_1129_p1 + z0_reg_1471);

assign z1_3_fu_1099_p2 = (z1_reg_1455 + zMiddleA_2_fu_1093_p2);

assign z1_4_fu_1181_p2 = (bSig_2_reg_1402 + a1_assign_reg_197);

assign zExp2_v_cast_cast_fu_982_p3 = ((tmp_55_fu_953_p2[0:0] === 1'b1) ? ap_const_lv13_3FD : ap_const_lv13_3FE);

assign zExpPtr_write_assign_1_fu_905_p1 = $signed(aExp_1_fu_899_p2);

assign zExpPtr_write_assign_fu_699_p1 = $signed(bExp_1_fu_693_p2);

assign zExp_fu_990_p2 = (zExp2_v_cast_cast_fu_982_p3 + tmp_51_fu_913_p2);

assign zMiddleA_1_fu_1074_p2 = (zMiddleB_reg_1465 + zMiddleA_reg_1460);

assign zMiddleA_2_fu_1093_p2 = zMiddleA_1_fu_1074_p2 << ap_const_lv64_20;

assign zSig_2_fu_1228_p3 = {{tmp_14_fu_1218_p4}, {tmp_13_fu_1212_p2}};

assign zSig_fu_1175_p2 = ($signed(zSig1_reg_215) + $signed(ap_const_lv64_FFFFFFFFFFFFFFFF));

assign zSign_fu_410_p2 = (tmp_57_fu_402_p3 ^ tmp_53_fu_367_p3);

always @ (posedge ap_clk) begin
    aSig_3_cast8_reg_1248[63:52] <= 12'b000000000000;
    aExp_cast_reg_1259[11] <= 1'b0;
    bSig_2_cast6_reg_1264[63:52] <= 12'b000000000000;
    bSig_2_reg_1402[10:0] <= 11'b00000000000;
    bSig_2_reg_1402[63] <= 1'b1;
    aSig_reg_1409[8:0] <= 9'b000000000;
end

endmodule //float64_div
